/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'single_board_test'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct abi_UncommonType;
struct hpack_node;
struct runtime_bmap;
struct runtime_ancestorInfo;
struct syscall_Iovec;
struct abi_InterfaceType;
struct abi_Imethod;
struct go_shape_struct__internal_concurrent_isEntry_bool_;
struct bisect_dedup;
struct concurrent_entry__ptr_internal_abi_Type_comma_interface__;
struct concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;
struct concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;
struct concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__;
struct godebug_value;
struct bisect_Matcher;
struct bisect_cond;
struct http_response;
struct time_Location;
struct time_zone;
struct time_zoneTrans;
struct http_conn;
struct http_Server;
struct http_Request;
struct url_URL;
struct url_Userinfo;
struct multipart_Form;
struct multipart_FileHeader;
struct tls_ConnectionState;
struct x509_Certificate;
struct pkix_AttributeTypeAndValue;
struct pkix_Extension;
struct net_IP;
struct net_IPNet;
struct x509_OID;
struct http_Response;
struct http_pattern;
struct http_segment;
struct tls_Config;
struct tls_SessionState;
struct tls_activeCert;
struct tls_ClientHelloInfo;
struct tls_Certificate;
struct tls_CertificateRequestInfo;
struct x509_CertPool;
struct x509_lazyCert;
struct tls_ClientSessionState;
struct tls_ticketKey;
struct tls_Conn;
struct tls_quicState;
struct tls_QUICEvent;
struct log_Logger;
struct http_connReader;
struct sync_Cond;
struct bufio_Reader;
struct bufio_Writer;
struct os_dirInfo;
struct sync_poolChainElt;
struct sync_eface;
struct sync_readOnly;
struct bigmod_Nat;
struct concurrent_indirect__ptr_internal_abi_Type_comma_interface__;
struct concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;
struct concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;
struct concurrent_indirect_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__;
struct time_Timer;
struct cryptobyte_Builder;
struct ecdh_PrivateKey;
struct ecdh_PublicKey;
struct nistec_P256Point;
struct fiat_P256Element;
struct nistec_P384Point;
struct fiat_P384Element;
struct nistec_P521Point;
struct fiat_P521Element;
struct elliptic_CurveParams;
struct nistec_P224Point;
struct fiat_P224Element;
struct os_File;
struct os_file;
struct syscall_SysProcAttr;
struct syscall_Credential;
struct syscall_SysProcIDMap;
struct os_Process;
struct os_ProcessState;
struct syscall_Rusage;
struct flate_compressor;
struct flate_huffmanBitWriter;
struct flate_huffmanEncoder;
struct flate_hcode;
struct flate_literalNode;
struct flate_deflateFast;
struct flate_decompressor;
struct godebug_setting;
struct godebugs_Info;
struct hpack_HeaderField;
struct hpke_dhKEM;
struct http_routingNode;
struct http_entry_string_comma__ptr_net_http_routingNode_;
struct http_muxEntry;
struct http_keyValues;
struct http_http2stream;
struct http_http2serverConn;
struct http_http2Framer;
struct http_http2frameCache;
struct http_http2Server;
struct http_http2serverInternalState;
struct http_http2bufferedWriter;
struct http_http2outflow;
struct http_http2unstartedHandler;
struct http_http2responseWriter;
struct http_http2responseWriterState;
struct http_http2pipe;
struct http_http2writeQueue;
struct main_fInfo;
struct multipart_part;
struct net_Resolver;
struct net_IPAddr;
struct net_netFD;
struct net_ipAttr;
struct netip_Addr;
struct net_nssSource;
struct net_nssCriterion;
struct norm_Iter;
struct norm_reorderBuffer;
struct pkix_RelativeDistinguishedNameSET;
struct reflect_abiStep;
struct reflect_bitVector;
struct sync_Pool;
struct runtime_Func;
struct runtime__func;
struct runtime_moduledata;
struct runtime_pcHeader;
struct runtime_functab;
struct runtime_textsect;
struct runtime_ptabEntry;
struct runtime_modulehash;
struct runtime_initTask;
struct runtime_PanicNilError;
struct runtime__defer;
struct runtime__panic;
struct runtime_coro;
struct runtime_m;
struct runtime_g;
struct runtime_sudog;
struct runtime_hchan;
struct runtime_timer;
struct runtime_timers;
struct runtime_timerWhen;
struct runtime_traceBuf;
struct runtime_workbuf;
struct runtime_mapextra;
struct runtime_mspan;
struct runtime_special;
struct runtime_statAggregate;
struct runtime_metricValue;
struct runtime_pinner;
struct runtime_pollDesc;
struct strings_trieNode;
struct strings_stringFinder;
struct textproto_dotReader;
struct tls_clientHelloMsg;
struct tls_keyShare;
struct tls_pskIdentity;
struct tls_clientKeyExchangeMsg;
struct tls_serverHelloMsg;
struct tls_serverKeyExchangeMsg;
struct tls_echExtension;
struct zip_header;
struct $3EBAFFBEC7FE4A3DD4B177F1345425D4;
struct $C5E4B8F56A309F2BB15E375EC7224BCE;
struct _slice_syscall_Iovec_0;
struct _slice__ptr_runtime_bmap_0;
struct _slice_runtime_ancestorInfo_0;
struct _slice_go_shape__slice_uint8;
struct _slice_go_shape_int;
struct _slice_go_shape_struct__Key_reflect_Value_Value_reflect_Value_;
struct _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_;
struct hchan<int>;
struct sudog<int>;
struct hchan<_slice_uint8>;
struct sudog<_slice_uint8>;
struct hchan<time_Time>;
struct sudog<time_Time>;
struct hchan<internal_singleflight_Result>;
struct sudog<internal_singleflight_Result>;
struct hchan<net_dialResult_1>;
struct sudog<net_dialResult_1>;
struct hchan<net_result_2>;
struct sudog<net_result_2>;
struct hchan<bool>;
struct sudog<bool>;
struct hchan<net_http_http2readFrameResult>;
struct sudog<net_http_http2readFrameResult>;
struct hchan<net_http_http2FrameWriteRequest>;
struct sudog<net_http_http2FrameWriteRequest>;
struct hchan<net_http_http2frameWriteResult>;
struct sudog<net_http_http2frameWriteResult>;
struct hchan<net_http_http2bodyReadMsg>;
struct sudog<net_http_http2bodyReadMsg>;
struct hchan<interface_>;
struct sudog<interface_>;
struct hchan<struct_>;
struct sudog<struct_>;
struct hchan<error>;
struct sudog<error>;
struct hchan<os_exec_goroutineStatus_1>;
struct sudog<os_exec_goroutineStatus_1>;
struct hchan<os_exec_ctxResult>;
struct sudog<os_exec_ctxResult>;
struct hash<internal_abi_TypeOff_comma__ptr_internal_abi_Type>;
struct bucket<internal_abi_TypeOff_comma__ptr_internal_abi_Type>;
struct bucket<string_comma_runtime_metricData>;
struct bucket<uint32_comma__slice__ptr_internal_abi_Type>;
struct hash<runtime__typePair_comma_struct_>;
struct bucket<runtime__typePair_comma_struct_>;
struct hash<interface__comma__ptr_sync_entry>;
struct bucket<interface__comma__ptr_sync_entry>;
struct bucket<string_comma__ptr_unicode_RangeTable>;
struct hash<reflect_visit_comma_bool>;
struct bucket<reflect_visit_comma_bool>;
struct hash<uint64_comma_bool>;
struct bucket<uint64_comma_bool>;
struct hash<uint16_comma_archive_zip_Compressor>;
struct bucket<uint16_comma_archive_zip_Compressor>;
struct hash<context_canceler_comma_struct_>;
struct bucket<context_canceler_comma_struct_>;
struct bucket<crypto_Hash_comma__slice_uint8>;
struct hash<string_comma_string>;
struct bucket<string_comma_string>;
struct bucket<go_shape__ptr_internal_abi_Type_comma_go_shape_interface_>;
struct bucket<go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer_>;
struct hash<string_comma_uint16>;
struct bucket<string_comma_uint16>;
struct bucket<vendor_golang_org_x_net_dns_dnsmessage_Class_comma_string>;
struct bucket<vendor_golang_org_x_net_dns_dnsmessage_RCode_comma_string>;
struct bucket<vendor_golang_org_x_net_dns_dnsmessage_section_comma_string>;
struct hash<string_comma__ptr_internal_singleflight_call>;
struct bucket<string_comma__ptr_internal_singleflight_call>;
struct bucket<net_hostLookupOrder_comma_string>;
struct bucket<string_comma_int>;
struct bucket<string_comma_map_string_int>;
struct hash<string_comma__slice_net_nssSource>;
struct bucket<string_comma__slice_net_nssSource>;
struct bucket<string_comma_net_byName>;
struct hash<int_comma_string>;
struct bucket<int_comma_string>;
struct hash<string_comma__slice_int>;
struct bucket<string_comma__slice_int>;
struct hash<crypto_x509_sum224_comma_bool>;
struct bucket<crypto_x509_sum224_comma_bool>;
struct bucket<uint16_comma_func__ptr_crypto_internal_hpke_hkdfKDF>;
struct bucket<uint16_comma_struct__crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_>;
struct bucket<uint16_comma_struct__crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_>;
struct bucket<uint16_comma_bool>;
struct bucket<crypto_tls_alert_comma_string>;
struct hash<string_comma__ptr_crypto_tls_Certificate>;
struct bucket<string_comma__ptr_crypto_tls_Certificate>;
struct bucket<string_comma_map_string_string>;
struct hash<string_comma__slice__ptr_mime_multipart_FileHeader>;
struct bucket<string_comma__slice__ptr_mime_multipart_FileHeader>;
struct hash<string_comma_uint64>;
struct bucket<string_comma_uint64>;
struct hash<vendor_golang_org_x_net_http2_hpack_pairNameValue_comma_uint64>;
struct bucket<vendor_golang_org_x_net_http2_hpack_pairNameValue_comma_uint64>;
struct bucket<net_http_ConnState_comma_string>;
struct bucket<net_http_http2SettingID_comma_string>;
struct hash<_ptr_net_http_http2serverConn_comma_struct_>;
struct bucket<_ptr_net_http_http2serverConn_comma_struct_>;
struct hash<string_comma_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler>;
struct bucket<string_comma_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler>;
struct hash<_ptr_net_Listener_comma_struct_>;
struct bucket<_ptr_net_Listener_comma_struct_>;
struct hash<_ptr_net_http_conn_comma_struct_>;
struct bucket<_ptr_net_http_conn_comma_struct_>;
struct hash<string_comma__slice_string>;
struct bucket<string_comma__slice_string>;
struct hash<uint32_comma__ptr_net_http_http2stream>;
struct bucket<uint32_comma__ptr_net_http_http2stream>;
struct bucket<net_http_http2ErrCode_comma_string>;
struct bucket<net_http_http2FrameType_comma_string>;
struct bucket<net_http_http2Flags_comma_string>;
struct bucket<net_http_http2FrameType_comma_map_net_http_http2Flags_string>;
struct bucket<net_http_http2FrameType_comma_net_http_http2frameParser>;
struct bucket<net_http_http2SettingID_comma_bool>;
struct bucket<uint32_comma__ptr_net_http_http2writeQueue>;
struct hash<net_http_routingIndexKey_comma__slice__ptr_net_http_pattern>;
struct bucket<net_http_routingIndexKey_comma__slice__ptr_net_http_pattern>;
struct hash<string_comma__ptr_net_http_routingNode>;
struct bucket<string_comma__ptr_net_http_routingNode>;
struct hash<go_shape_string_comma_go_shape__ptr_uint8>;
struct bucket<go_shape_string_comma_go_shape__ptr_uint8>;
struct hash<string_comma_net_http_muxEntry>;
struct bucket<string_comma_net_http_muxEntry>;
struct hash<string_comma_bool>;
struct bucket<string_comma_bool>;
struct hash<int32_comma_unsafe_Pointer>;
struct bucket<int32_comma_unsafe_Pointer>;
struct hash<unsafe_Pointer_comma_int32>;
struct bucket<unsafe_Pointer_comma_int32>;
struct bucket<uint32_comma_int32>;
struct os_exec_goroutineStatus_1;
struct os_exec_ctxResult;
struct os_exec_Cmd;
struct net_http_body;
struct net_http_muxEntry;
struct net_http_entry_go_shape_string_comma_go_shape__ptr_uint8_;
struct net_http_entry_string_comma__ptr_net_http_routingNode_;
struct net_http_routingNode;
struct net_http_keyValues;
struct net_http_http2startPushRequest;
struct net_http_http2writeQueue;
struct net_http_http2HeadersFrame;
struct net_http_http2PingFrame;
struct net_http_http2Setting;
struct net_http_httpRange;
struct net_http_http2pipe;
struct net_http_http2responseWriter;
struct net_http_http2unstartedHandler;
struct net_http_http2bodyReadMsg;
struct net_http_http2frameWriteResult;
struct net_http_http2FrameWriteRequest;
struct net_http_http2readFrameResult;
struct net_http_http2frameCache;
struct net_http_http2Framer;
struct net_http_http2bufferedWriter;
struct net_http_segment;
struct net_http_pattern;
struct net_http_Response;
struct net_http_Request;
struct net_http_response;
struct net_http_connReader;
struct net_http_conn;
struct net_http_Server;
struct net_http_http2serverInternalState;
struct net_http_http2Server;
struct net_http_http2serverConn;
struct net_http_http2stream;
struct net_http_http2responseWriterState;
struct vendor_golang_org_x_net_http2_hpack_Decoder;
struct vendor_golang_org_x_net_http2_hpack_HeaderField;
struct vendor_golang_org_x_net_http2_hpack_Encoder;
struct vendor_golang_org_x_net_idna_valueRange;
struct vendor_golang_org_x_net_idna_idnaTrie;
struct vendor_golang_org_x_net_idna_Profile;
struct vendor_golang_org_x_text_unicode_norm_valueRange;
struct vendor_golang_org_x_text_unicode_norm_Iter;
struct vendor_golang_org_x_text_unicode_norm_reorderBuffer;
struct mime_multipart_Writer;
struct mime_multipart_Form;
struct mime_multipart_FileHeader;
struct net_textproto_Reader;
struct log_Logger_0;
struct go_shape_struct__crypto_tls_group_crypto_tls_CurveID_crypto_tls_data__slice_uint8_;
struct go_shape__slice_crypto_tls_keyShare;
struct crypto_tls_clientKeyExchangeMsg;
struct crypto_tls_serverHelloMsg;
struct crypto_tls_cipherSuite;
struct crypto_tls_keySharePrivateKeys;
struct crypto_tls_echContext;
struct crypto_tls_pskIdentity;
struct crypto_tls_keyShare;
struct crypto_tls_clientHelloMsg;
struct crypto_tls_echExtension;
struct crypto_tls_echCipher;
struct crypto_tls_echConfig;
struct crypto_tls_cipherSuiteTLS13;
struct crypto_tls_QUICEvent;
struct crypto_tls_quicState;
struct crypto_tls_Conn;
struct go_shape__slice_crypto_tls_CurveID;
struct crypto_tls_ticketKey;
struct crypto_tls_SessionState;
struct crypto_tls_CertificateRequestInfo;
struct crypto_tls_ClientHelloInfo;
struct crypto_tls_Config;
struct crypto_tls_activeCert;
struct crypto_tls_Certificate;
struct crypto_internal_mlkem768_DecapsulationKey;
struct crypto_internal_hpke_Sender;
struct crypto_internal_hpke_dhKEM;
struct crypto_internal_hpke_hkdfKDF;
struct crypto_x509_potentialParent;
struct crypto_x509_OID;
struct crypto_x509_pkix_Extension;
struct crypto_x509_Certificate;
struct crypto_x509_lazyCert;
struct crypto_x509_CertPool;
struct net_url_URL;
struct net_url_Userinfo;
struct net_IPNet_0;
struct net_Interface_0;
struct net_result_2;
struct net_dialResult_1;
struct net_TCPConn_0;
struct net_sysDialer_0;
struct net_nssConf_0;
struct net_nssCriterion_0;
struct net_nssSource_0;
struct net_dnsConfig_0;
struct net_Resolver_0;
struct net_policyTableEntry;
struct net_netFD_0;
struct net_IPAddr_0;
struct net_IP_0;
struct internal_singleflight_call;
struct internal_singleflight_Result;
struct vendor_golang_org_x_net_dns_dnsmessage_Option;
struct internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__;
struct unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___0;
struct internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;
struct internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;
struct internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;
struct go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0;
struct unique_Handle_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__;
struct net_netip_addrDetail;
struct net_netip_Addr;
struct sync_atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___;
struct internal_concurrent_indirect__ptr_internal_abi_Type_comma_interface__;
struct internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;
struct sync_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__;
struct internal_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;
struct internal_concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;
struct crypto_x509_pkix_AttributeTypeAndValue;
struct crypto_internal_edwards25519_Point;
struct crypto_ecdsa_nistCurve_go_shape__ptr_uint8_;
struct vendor_golang_org_x_crypto_cryptobyte_Builder;
struct encoding_asn1_ObjectIdentifier;
struct crypto_internal_bigmod_Modulus;
struct crypto_internal_bigmod_Nat;
struct crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_;
struct crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_;
struct crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_;
struct crypto_elliptic_nistCurve_go_shape__ptr_uint8_;
struct crypto_elliptic_CurveParams;
struct math_big_divisor;
struct math_big_Int;
struct crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_;
struct crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_;
struct crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_;
struct crypto_ecdh_nistCurve_go_shape__ptr_uint8_;
struct crypto_ecdh_PrivateKey;
struct crypto_ecdh_PublicKey;
struct crypto_internal_nistec_P521Point;
struct crypto_internal_nistec_P384Point;
struct crypto_internal_nistec_P256Point;
struct crypto_internal_nistec_P224Point;
struct crypto_internal_nistec_fiat_P521Element;
struct crypto_internal_nistec_fiat_P384Element;
struct crypto_internal_nistec_fiat_P256Element;
struct crypto_internal_nistec_fiat_P224Element;
struct crypto_internal_boring_PrivateKeyECDH;
struct crypto_internal_boring_PublicKeyECDH;
struct archive_zip_countWriter;
struct archive_zip_header;
struct archive_zip_FileHeader;
struct compress_flate_decompressor;
struct compress_flate_Writer;
struct compress_flate_deflateFast;
struct compress_flate_huffmanBitWriter;
struct compress_flate_compressor;
struct compress_flate_literalNode;
struct compress_flate_hcode;
struct compress_flate_huffmanEncoder;
struct fmt_buffer_0;
struct go_shape_struct__Key_reflect_Value_Value_reflect_Value__0;
struct internal_fmtsort_KeyValue;
struct os_Process_0;
struct os_file_0;
struct os_File_0;
struct time_Timer_0;
struct time_zone_0;
struct time_Location_0;
struct time_Time_0;
struct syscall_NetlinkRouteAttr_0;
struct syscall_NetlinkMessage_0;
struct syscall_Credential_0;
struct syscall_SysProcAttr_0;
struct internal_bisect_cond;
struct internal_bisect_Matcher;
struct reflect_bitVector_0;
struct go_shape__slice_uint16;
struct bufio_Writer_0;
struct bufio_Reader_0;
struct strings_trieNode_0;
struct strings_stringFinder_0;
struct go_shape__slice_uint8;
struct unicode_CaseRange;
struct unicode_RangeTable_0;
struct sync_Pool_0;
struct sync_entry_0;
struct runtime_traceRegionAllocBlock;
struct runtime_untracedG_4;
struct runtime_scase;
struct runtime_pollDesc_0;
struct internal_profilerecord_StackRecord;
struct runtime_bucket;
struct runtime_stackObjectBuf;
struct runtime_stackWorkBuf;
struct runtime_stackObjectRecord;
struct runtime_liveUserArenaChunk;
struct runtime_mapextra_0;
struct runtime_hmap_0;
struct runtime_workbuf_0;
struct runtime_pinner_0;
struct runtime_p_0;
struct runtime_mcache_0;
struct runtime_funcval;
struct runtime_atomicScavChunkData;
struct runtime_mlink;
struct runtime_arenaHint;
struct runtime_Func_0;
struct runtime_Frame_0;
struct runtime_modulehash_0;
struct runtime_moduledata_0;
struct runtime__func_0;
struct runtime_traceBuf_0;
struct runtime_mTraceState_0;
struct runtime_coro_0;
struct runtime_timerWhen_0;
struct runtime_timers_0;
struct runtime_timer_0;
struct runtime_hchan_0;
struct runtime_sudog_0;
struct runtime_ancestorInfo_0;
struct internal_runtime_atomic_Pointer_runtime__defer_;
struct runtime__defer_0;
struct runtime__panic_0;
struct runtime_g_0;
struct runtime_m_0;
struct runtime_special_0;
struct runtime_gcBits_0;
struct runtime_mspan_0;
struct internal_runtime_syscall_EpollEvent;
struct internal_godebugs_Info;
struct internal_abi_Method;
struct internal_abi_ITab;
struct internal_abi_Imethod;
struct internal_abi_InterfaceType;
struct internal_abi_StructField;
struct internal_abi_MapType;
struct internal_abi_FuncType;
struct internal_abi_Type;

/* 1 */
struct MODULEDATA120
{
  void *pcheader __offset(OFF32|NOZEROES);
  void *funcnametab __offset(OFF32|NOZEROES);
  int num_functab;
  int cap_functab;
  void *cutab __offset(OFF32|NOZEROES);
  int num_cutab;
  int cap_cutab;
  void *filetab __offset(OFF32|NOZEROES);
  int num_filetab;
  int cap_filetab;
  void *pctab __offset(OFF32|NOZEROES);
  int num_pctab;
  int cap_pctab;
  void *pclntab __offset(OFF32|NOZEROES);
  int num_pclntab;
  int cap_plcntab;
  void *ftab __offset(OFF32|NOZEROES);
  int num_ftab;
  int cap_ftab;
  void *findfunctab __offset(OFF32|NOZEROES);
  void *minpc __offset(OFF32|NOZEROES);
  void *maxpc __offset(OFF32|NOZEROES);
  void *text __offset(OFF32|NOZEROES);
  void *etext __offset(OFF32|NOZEROES);
  void *noptrdata __offset(OFF32|NOZEROES);
  void *enoptrdata __offset(OFF32|NOZEROES);
  void *data __offset(OFF32|NOZEROES);
  void *edata __offset(OFF32|NOZEROES);
  void *bss __offset(OFF32|NOZEROES);
  void *ebss __offset(OFF32|NOZEROES);
  void *noptrbss __offset(OFF32|NOZEROES);
  void *enoptrbss __offset(OFF32|NOZEROES);
  void *covctrs __offset(OFF32|NOZEROES);
  void *ecovctrs __offset(OFF32|NOZEROES);
  void *end __offset(OFF32|NOZEROES);
  void *gcdata __offset(OFF32|NOZEROES);
  void *gcbss __offset(OFF32|NOZEROES);
  void *types __offset(OFF32|NOZEROES);
  void *etypes __offset(OFF32|NOZEROES);
  void *rodata __offset(OFF32|NOZEROES);
  void *go_func_ptr __offset(OFF32|NOZEROES);
  void *textsectionmap __offset(OFF32|NOZEROES);
  int num_sections;
  int cap_sections;
  void *typelink __offset(OFF32|NOZEROES);
  int num_typelink;
  int cap_typelink;
  void *itab __offset(OFF32|NOZEROES);
  int num_itab;
  int cap_itab;
};

/* 2 */
enum funcID : unsigned __int8
{
  FuncID_normal = 0x0,
  FuncID_runtime_main = 0x1,
  FuncID_goexit = 0x2,
  FuncID_jmpdefer = 0x3,
  FuncID_mcall = 0x4,
  FuncID_morestack = 0x5,
  FuncID_mstart = 0x6,
  FuncID_rt0_go = 0x7,
  FuncID_asmcgocall = 0x8,
  FuncID_sigpanic = 0x9,
  FuncID_runfinq = 0xA,
  FuncID_gcBgMarkWorker = 0xB,
  FuncID_systemstack_switch = 0xC,
  FuncID_systemstack = 0xD,
  FuncID_cgocallback_gofunc = 0xE,
  FuncID_gogo = 0xF,
  FuncID_externalthreadhandler = 0x10,
  FuncID_debugCallV1 = 0x11,
  FuncID_gopanic = 0x12,
  FuncID_panicwrap = 0x13,
  FuncID_handleAsyncEvent = 0x14,
  FuncID_asyncPreempt = 0x15,
  FuncID_wrapper = 0x16,
};

/* 3 */
enum __bitmask funcFlag : unsigned __int8
{
  funcFlag_TOPFRAME = 0x1,
  funcFlag_SPWRITE = 0x2,
  funcFlag_ASM = 0x4,
};

/* 4 */
struct FUNCINFO120
{
  void *func_pc __offset(OFF32,0x11000);
  void *nameoffset __offset(OFF32,0x37F098);
  int args_size __udec;
  void *deferreturn __offset(GO_FINFO_DEFER_OFF,0x0,0,BADADDR);
  void *pcsp __offset(OFF32|NOZEROES,0x3C5EB8);
  void *pcfile __offset(OFF32|NOZEROES,0x3C5EB8);
  void *pcln __offset(OFF32|NOZEROES,0x3C5EB8);
  int npcdata __udec;
  void *offset_cutab __offset(GO_FINFO_CUTAB_OFF,0x3BCFB0,0,BADADDR);
  int start_line __udec;
  funcID funcID;
  funcFlag funcFlag;
  char unused;
  char nfuncdata __udec;
};

/* 5 */
struct FUNCTAB_ENTRY118
{
  void *func_pc __offset(OFF32,0x11000);
  void *func_struct __offset(OFF32,0x45D270);
};

/* 6 */
enum FUNCDATA_UnsafePoints : __int8
{
  UnsafePointSafe = 0xFF,
  UnsafePointUnsafe = 0xFE,
  UnsafePointRestart1 = 0xFD,
  UnsafePointRestart2 = 0xFC,
  UnsafePointRestartAtEntry = 0xFB,
};

/* 7 */
struct FUNCDATA_stackmap
{
  __int32 n __dec;                      ///< number of bitmaps
  __int32 nbit __dec;                   ///< number of bits in each bitmap
  unsigned __int8 bytedata[] __bin;     ///< each starting on a byte boundary
};

/* 8 */
struct FUNCDATA_ArgInfo_entry
{
  unsigned __int8 offset;
  unsigned __int8 size;
};

/* 9 */
enum FUNCDATA_ArgInfo_marker : unsigned __int8
{
  FUNCDATA_ArgInfo_StartAgg = 0xFE,     ///< Start of aggregation
  FUNCDATA_ArgInfo_EndAgg = 0xFD,       ///< End of aggregation
  FUNCDATA_ArgInfo_Special = 0xF0,
  FUNCDATA_ArgInfo_Dotdotdot = 0xFC,    ///< Limit exceeded
  FUNCDATA_ArgInfo_EndSeq = 0xFF,       ///< End of arglist
};

/* 10 */
struct FUNCDATA_InlinedCall
{
  __int8 FuncID;                        ///< type of the called function
  char gap[3];
  __int32 nameOff __offset(OFF32,0x37F098); ///< offset into pclntab for name of called function
  __int32 parentPc;                     ///< position of an instruction whose source position is the call site (offset from entry)
  __int32 startLine;                    ///< line number of start of function (func keyword/TEXT directive)
};

/* 11 */
struct FUNCDATA_StackObjectRecord
{
  __int32 off;                          ///< offset in frame: from varp if negative, from argp else
  __int32 size;
  __int32 ptrBytes;
  __int32 gcdataoff __offset(OFF32,0x2B0000);
};

/* 12 */
struct FUNCDATA_StackObjects
{
  __int32 n;
  FUNCDATA_StackObjectRecord recs[];
};

/* 14 */
typedef unsigned int size_t;

/* 13 */
struct BUILTIN_STRING
{
  char *ptr;
  size_t len;
};

/* 15 */
struct BUILTIN_INTERFACE
{
  void *tab;
  void *data;
};

/* 16 */
enum __bitmask TFLAG_ENUM : __int8
{
  TFLAG_UNCOMMON = 0x1,
  TFLAG_EXTRASTAR = 0x2,
  TFLAG_NAMED = 0x4,
  TFLAG_REGULAR_MEMORY = 0x8,           ///< can be compared/hashed as regular memory
};

/* 17 */
enum __bitmask KIND_ENUM : unsigned __int8
{
  KIND_MASK = 0x1F,                     ///< MASK
  KIND_INVALID = 0x0,
  KIND_BOOL = 0x1,
  KIND_INT = 0x2,
  KIND_INT8 = 0x3,
  KIND_INT16 = 0x4,
  KIND_INT32 = 0x5,
  KIND_INT64 = 0x6,
  KIND_UINT = 0x7,
  KIND_UINT8 = 0x8,
  KIND_UINT16 = 0x9,
  KIND_UINT32 = 0xA,
  KIND_UINT64 = 0xB,
  KIND_UINTPTR = 0xC,
  KIND_FLOAT32 = 0xD,
  KIND_FLOAT64 = 0xE,
  KIND_COMPLEX64 = 0xF,
  KIND_COMPLEX128 = 0x10,
  KIND_ARRAY = 0x11,
  KIND_CHAN = 0x12,
  KIND_FUNC = 0x13,
  KIND_INTERFACE = 0x14,
  KIND_MAP = 0x15,
  KIND_PTR = 0x16,
  KIND_SLICE = 0x17,
  KIND_STRING = 0x18,
  KIND_STRUCT = 0x19,
  KIND_UNSAFEPOINTER = 0x1A,
  KIND_DIRECTIFACE = 0x20,
  KIND_NOPOINTERS = 0x80,
  KIND_GCPROG = 0x40,
};

/* 18 */
struct RTYPE
{
  int size;
  int ptrdata;
  int hash;
  TFLAG_ENUM tflag;
  char align;
  char fieldAlign;
  KIND_ENUM kind;
  void *equal __offset(OFF32|NOZEROES);
  void *gcdata __offset(OFF32|NOZEROES);
  void *str __offset(OFF32|NOZEROES|NOONES,0x2B0000);
  void *ptrToThis __offset(OFF32|NOZEROES,0x2B0000);
};

/* 19 */
struct PTR_TYPE
{
  void *elem __offset(OFF32|NOZEROES);
};

/* 37 */
typedef unsigned __int32 uintptr;

/* 48 */
typedef unsigned __int32 uint32;

/* 50 */
typedef unsigned __int8 abi_TFlag;

/* 52 */
typedef unsigned __int8 uint8;

/* 31 */
typedef unsigned __int8 abi_Kind;

/* 55 */
typedef void *unsafe_Pointer;

/* 54 */
typedef bool (__gostk *PTR_funcunsafe_Pointer_comma__unsafe_Pointer_bool)(unsafe_Pointer, unsafe_Pointer);

/* 53 */
typedef uint8 *_ptr_uint8;

/* 44 */
typedef signed __int32 abi_NameOff;

/* 57 */
typedef signed __int32 abi_TypeOff;

/* 20 */
struct abi_Type
{
  uintptr Size_;
  uintptr PtrBytes;
  uint32 Hash;
  abi_TFlag TFlag;
  uint8 Align_;
  uint8 FieldAlign_;
  abi_Kind Kind_;
  PTR_funcunsafe_Pointer_comma__unsafe_Pointer_bool Equal;
  _ptr_uint8 GCData;
  abi_NameOff Str;
  abi_TypeOff PtrToThis;
};

/* 21 */
typedef abi_Type *_ptr_abi_Type;

/* 22 */
struct UNCOMMON_TYPE
{
  void *nameOff __offset(OFF32|NOZEROES,0x2B0000);
  __int16 mcount;
  __int16 xcount;
  int moff;
  int unused;
};

/* 23 */
struct UNCOMMON_TYPE_METHOD
{
  void *nameOff __offset(OFF32|NOZEROES,0x2B0000);
  void *typeOff __offset(OFF32|NOZEROES|NOONES,0x2B0000);
  void *ifn __offset(OFF32|NOZEROES|NOONES,0x11000);
  void *tfn __offset(OFF32|NOZEROES|NOONES,0x11000);
};

/* 24 */
typedef signed __int32 (__gostk *PTR_func_int)();

/* 25 */
struct FUNC_TYPE
{
  __int16 inCount;
  __int16 outCount;
};

/* 26 */
typedef signed __int32 *_ptr_int;

/* 27 */
typedef _ptr_abi_Type (__gostk *PTR_func__ptr_abi_Type)();

/* 28 */
typedef bool (__gostk *PTR_func_bool)();

/* 29 */
typedef bool *_ptr_bool;

/* 30 */
typedef abi_Kind (__gostk *PTR_func_abi_Kind)();

/* 33 */
typedef BUILTIN_STRING string;

/* 32 */
typedef string (__gostk *PTR_func_string)();

/* 34 */
typedef string *_ptr_string;

/* 35 */
typedef abi_Kind *_ptr_abi_Kind;

/* 36 */
typedef uintptr (__gostk *PTR_func_uintptr)();

/* 38 */
typedef uintptr *_ptr_uintptr;

/* 41 */
typedef abi_UncommonType *_ptr_abi_UncommonType;

/* 39 */
typedef _ptr_abi_UncommonType (__gostk *PTR_func__ptr_abi_UncommonType)();

/* 46 */
typedef unsigned __int16 uint16;

/* 40 */
struct abi_UncommonType
{
  abi_NameOff PkgPath;
  uint16 Mcount;
  uint16 Xcount;
  uint32 Moff;
  uint32 _;
};

/* 42 */
struct STRUCT_TYPE
{
  void *pkgpath __offset(OFF32|NOZEROES);
  void *fields __offset(OFF32|NOZEROES);
  int num_fields;
  int num_fields_cp;
};

/* 43 */
struct STRUCT_TYPE_FIELD
{
  void *name __offset(OFF32|NOZEROES);
  void *typ __offset(OFF32|NOZEROES);
  int offsetEmbed;
};

/* 45 */
typedef abi_NameOff *_ptr_abi_NameOff;

/* 47 */
typedef uint16 *_ptr_uint16;

/* 49 */
typedef uint32 *_ptr_uint32;

/* 51 */
typedef abi_TFlag *_ptr_abi_TFlag;

/* 56 */
typedef unsafe_Pointer *_ptr_unsafe_Pointer;

/* 58 */
typedef abi_TypeOff *_ptr_abi_TypeOff;

/* 59 */
typedef _ptr_abi_Type *_ptr__ptr_abi_Type;

/* 90 */
typedef unsigned __int32 big_Word;

/* 89 */
struct big_nat
{
  big_Word *ptr;
  size_t len;
  size_t cap;
};

/* 60 */
struct big_Int
{
  bool neg;
  big_nat abs;
};

/* 61 */
typedef big_Int *_ptr_big_Int;

/* 64 */
struct _slice_uint8
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 62 */
typedef _slice_uint8 (__gostk *PTR_func__slice_uint8)();

/* 63 */
struct SLICE_TYPE
{
  void *elem __offset(OFF32|NOZEROES);
};

/* 65 */
typedef _slice_uint8 *_ptr__slice_uint8;

/* 66 */
typedef _slice_uint8 (__gostk *PTR_func_slice_uint8__slice_uint8)(_slice_uint8);

/* 68 */
typedef BUILTIN_INTERFACE fmt_State;

/* 75 */
typedef signed __int32 int32;

/* 67 */
typedef void (__gostk *PTR_funcfmt_State_comma__int32)(fmt_State, int32);

/* 69 */
struct INTERFACE_TYPE
{
  void *pkgpath __offset(OFF32|NOZEROES);
  void *imethod __offset(OFF32|NOZEROES);
  int num_imethods;
  int num_imethods_cp;
};

/* 70 */
struct IMETHOD
{
  void *nameOff __offset(OFF32|NOZEROES,0x2B0000);
  void *typeOff __offset(OFF32|NOZEROES|NOONES,0x2B0000);
};

/* 71 */
typedef bool (__gostk *PTR_funcint_bool)(signed __int32);

/* 73 */
struct retval_2CA200
{
  signed __int32 0;
  bool 1;
};

/* 72 */
typedef retval_2CA200 (__gostk *PTR_func_int_comma__bool)();

/* 74 */
typedef fmt_State *_ptr_fmt_State;

/* 76 */
typedef int32 *_ptr_int32;

/* 78 */
typedef BUILTIN_INTERFACE error;

/* 77 */
typedef error (__gostk *PTR_func_slice_uint8_error)(_slice_uint8);

/* 79 */
typedef error *_ptr_error;

/* 81 */
struct retval_2CAF08
{
  _slice_uint8 0;
  error 1;
};

/* 80 */
typedef retval_2CAF08 (__gostk *PTR_func__slice_uint8_comma__error)();

/* 83 */
typedef signed __int64 int64;

/* 82 */
typedef int64 (__gostk *PTR_func_int64)();

/* 84 */
typedef int64 *_ptr_int64;

/* 85 */
typedef string (__gostk *PTR_funcint_string)(signed __int32);

/* 87 */
typedef unsigned __int64 uint64;

/* 86 */
typedef uint64 (__gostk *PTR_func_uint64)();

/* 88 */
typedef uint64 *_ptr_uint64;

/* 91 */
typedef big_Word *_ptr_big_Word;

/* 92 */
typedef big_nat *_ptr_big_nat;

/* 93 */
typedef _ptr_big_Int *_ptr__ptr_big_Int;

/* 94 */
struct ARRAY_TYPE
{
  void *elem __offset(OFF32|NOZEROES);
  void *slice __offset(OFF32|NOZEROES);
  int len;
};

/* 95 */
typedef uint8 _1024_uint8[1024];

/* 96 */
typedef _1024_uint8 *_ptr__1024_uint8;

/* 97 */
typedef uint8 _16384_uint8[16384];

/* 98 */
typedef _16384_uint8 *_ptr__16384_uint8;

/* 99 */
struct _slice_int
{
  signed __int32 *ptr;
  size_t len;
  size_t cap;
};

/* 100 */
typedef signed __int32 _19_int[19];

/* 101 */
typedef _19_int *_ptr__19_int;

/* 102 */
typedef uint8 _2048_uint8[2048];

/* 103 */
typedef _2048_uint8 *_ptr__2048_uint8;

/* 106 */
typedef void (__gostk *PTR_func)();

/* 108 */
typedef PTR_func hpack_incomparable[];

/* 105 */
typedef hpack_node *_ptr_hpack_node;

/* 111 */
typedef _ptr_hpack_node _256__ptr_hpack_node[256];

/* 112 */
typedef _256__ptr_hpack_node *_ptr__256__ptr_hpack_node;

/* 104 */
struct __attribute__((aligned(4))) hpack_node
{
  hpack_incomparable _;
  _ptr__256__ptr_hpack_node children;
  uint8 codeLen;
  uint8 sym;
};

/* 107 */
struct _slice_func
{
  PTR_func *ptr;
  size_t len;
  size_t cap;
};

/* 109 */
typedef hpack_incomparable *_ptr_hpack_incomparable;

/* 110 */
struct _slice__ptr_hpack_node
{
  _ptr_hpack_node *ptr;
  size_t len;
  size_t cap;
};

/* 113 */
typedef signed __int32 _316_int[316];

/* 114 */
typedef _316_int *_ptr__316_int;

/* 115 */
typedef uint8 _32768_uint8[32768];

/* 116 */
typedef _32768_uint8 *_ptr__32768_uint8;

/* 117 */
struct _slice_uintptr
{
  uintptr *ptr;
  size_t len;
  size_t cap;
};

/* 118 */
typedef uintptr _3_uintptr[3];

/* 119 */
typedef _3_uintptr *_ptr__3_uintptr;

/* 120 */
typedef uint8 _4096_uint8[4096];

/* 121 */
typedef _4096_uint8 *_ptr__4096_uint8;

/* 122 */
typedef uintptr _4_uintptr[4];

/* 123 */
typedef _4_uintptr *_ptr__4_uintptr;

/* 124 */
typedef uint8 _8192_uint8[8192];

/* 125 */
typedef _8192_uint8 *_ptr__8192_uint8;

/* 126 */
typedef uintptr _9_uintptr[9];

/* 127 */
typedef _9_uintptr *_ptr__9_uintptr;

/* 130 */
typedef runtime_bmap *_ptr_runtime_bmap;

/* 128 */
struct _slice__ptr_runtime_bmap
{
  _ptr_runtime_bmap *ptr;
  size_t len;
  size_t cap;
};

/* 131 */
typedef uint8 _8_uint8[8];

/* 129 */
struct runtime_bmap
{
  _8_uint8 tophash;
};

/* 132 */
typedef _slice__ptr_runtime_bmap *_ptr__slice__ptr_runtime_bmap;

/* 133 */
struct _slice_runtime_ancestorInfo
{
  runtime_ancestorInfo *ptr;
  size_t len;
  size_t cap;
};

/* 134 */
struct runtime_ancestorInfo
{
  _slice_uintptr pcs;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 goid;
  uintptr gopc;
};

/* 135 */
typedef runtime_ancestorInfo *_ptr_runtime_ancestorInfo;

/* 136 */
typedef _slice_runtime_ancestorInfo *_ptr__slice_runtime_ancestorInfo;

/* 137 */
struct _slice_syscall_Iovec
{
  syscall_Iovec *ptr;
  size_t len;
  size_t cap;
};

/* 138 */
struct syscall_Iovec
{
  _ptr_uint8 Base;
  uint32 Len;
};

/* 139 */
typedef syscall_Iovec *_ptr_syscall_Iovec;

/* 140 */
typedef void (__gostk *PTR_funcint)(signed __int32);

/* 141 */
typedef _slice_syscall_Iovec *_ptr__slice_syscall_Iovec;

/* 142 */
typedef unsigned __int8 abi_FuncFlag;

/* 143 */
typedef abi_FuncFlag *_ptr_abi_FuncFlag;

/* 144 */
typedef unsigned __int8 abi_FuncID;

/* 145 */
typedef abi_FuncID *_ptr_abi_FuncID;

/* 146 */
struct abi_FuncType
{
  abi_Type Type;
  uint16 InCount;
  uint16 OutCount;
};

/* 147 */
typedef abi_FuncType *_ptr_abi_FuncType;

/* 151 */
typedef abi_InterfaceType *_ptr_abi_InterfaceType;

/* 157 */
typedef uintptr _1_uintptr[1];

/* 148 */
struct abi_ITab
{
  _ptr_abi_InterfaceType Inter;
  _ptr_abi_Type Type;
  uint32 Hash;
  _1_uintptr Fun;
};

/* 152 */
struct abi_Name
{
  _ptr_uint8 Bytes;
};

/* 154 */
struct _slice_abi_Imethod
{
  abi_Imethod *ptr;
  size_t len;
  size_t cap;
};

/* 150 */
struct abi_InterfaceType
{
  abi_Type Type;
  abi_Name PkgPath;
  _slice_abi_Imethod Methods;
};

/* 155 */
struct abi_Imethod
{
  abi_NameOff Name;
  abi_TypeOff Typ;
};

/* 149 */
typedef abi_ITab *_ptr_abi_ITab;

/* 153 */
typedef abi_Name *_ptr_abi_Name;

/* 156 */
typedef abi_Imethod *_ptr_abi_Imethod;

/* 158 */
typedef uint8 abi_IntArgRegBitmap[];

/* 159 */
typedef abi_IntArgRegBitmap *_ptr_abi_IntArgRegBitmap;

/* 160 */
struct abi_PtrType
{
  abi_Type Type;
  _ptr_abi_Type Elem;
};

/* 161 */
typedef abi_PtrType *_ptr_abi_PtrType;

/* 164 */
typedef uintptr _0_uintptr[];

/* 166 */
typedef uint64 _0_uint64[];

/* 168 */
typedef unsafe_Pointer _0_unsafe_Pointer[];

/* 162 */
struct abi_RegArgs
{
  _0_uintptr Ints;
  _0_uint64 Floats;
  _0_unsafe_Pointer Ptrs;
  abi_IntArgRegBitmap ReturnIsPtr;
};

/* 163 */
typedef abi_RegArgs *_ptr_abi_RegArgs;

/* 165 */
struct _slice_uint64
{
  uint64 *ptr;
  size_t len;
  size_t cap;
};

/* 167 */
struct _slice_unsafe_Pointer
{
  unsafe_Pointer *ptr;
  size_t len;
  size_t cap;
};

/* 169 */
typedef signed __int32 aes_KeySizeError;

/* 170 */
typedef aes_KeySizeError *_ptr_aes_KeySizeError;

/* 175 */
typedef uint32 _60_uint32[60];

/* 171 */
struct aes_aesCipher
{
  uint8 l;
  _60_uint32 enc;
  _60_uint32 dec;
};

/* 172 */
typedef aes_aesCipher *_ptr_aes_aesCipher;

/* 173 */
typedef void (__gostk *PTR_func_slice_uint8_comma___slice_uint8)(_slice_uint8, _slice_uint8);

/* 174 */
struct _slice_uint32
{
  uint32 *ptr;
  size_t len;
  size_t cap;
};

/* 176 */
struct asn1_BitString
{
  _slice_uint8 Bytes;
  signed __int32 BitLength;
};

/* 177 */
typedef asn1_BitString *_ptr_asn1_BitString;

/* 178 */
typedef signed __int32 asn1_Enumerated;

/* 179 */
typedef asn1_Enumerated *_ptr_asn1_Enumerated;

/* 180 */
typedef bool asn1_Flag;

/* 181 */
typedef asn1_Flag *_ptr_asn1_Flag;

/* 182 */
struct asn1_ObjectIdentifier
{
  signed __int32 *ptr;
  size_t len;
  size_t cap;
};

/* 183 */
typedef asn1_ObjectIdentifier *_ptr_asn1_ObjectIdentifier;

/* 184 */
struct asn1_RawContent
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 185 */
typedef asn1_RawContent *_ptr_asn1_RawContent;

/* 186 */
struct asn1_RawValue
{
  signed __int32 Class;
  signed __int32 Tag;
  bool IsCompound;
  _slice_uint8 Bytes;
  _slice_uint8 FullBytes;
};

/* 187 */
typedef asn1_RawValue *_ptr_asn1_RawValue;

/* 188 */
struct asn1_StructuralError
{
  string Msg;
};

/* 189 */
typedef asn1_StructuralError *_ptr_asn1_StructuralError;

/* 190 */
struct asn1_SyntaxError
{
  string Msg;
};

/* 191 */
typedef asn1_SyntaxError *_ptr_asn1_SyntaxError;

/* 192 */
typedef unsigned __int8 asn1_Tag;

/* 193 */
typedef asn1_Tag *_ptr_asn1_Tag;

/* 194 */
struct asn1_bitStringEncoder
{
  _slice_uint8 Bytes;
  signed __int32 BitLength;
};

/* 195 */
typedef asn1_bitStringEncoder *_ptr_asn1_bitStringEncoder;

/* 196 */
typedef void (__gostk *PTR_func_slice_uint8)(_slice_uint8);

/* 197 */
typedef unsigned __int8 asn1_byteEncoder;

/* 198 */
typedef asn1_byteEncoder *_ptr_asn1_byteEncoder;

/* 199 */
struct asn1_bytesEncoder
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 200 */
typedef asn1_bytesEncoder *_ptr_asn1_bytesEncoder;

/* 201 */
typedef BUILTIN_INTERFACE asn1_encoder;

/* 202 */
typedef asn1_encoder *_ptr_asn1_encoder;

/* 203 */
struct __attribute__((aligned(4))) asn1_fieldParameters
{
  bool optional;
  bool explicit;
  bool application;
  bool private;
  _ptr_int64 defaultValue;
  _ptr_int tag;
  signed __int32 stringType;
  signed __int32 timeType;
  bool set;
  bool omitEmpty;
};

/* 204 */
typedef asn1_fieldParameters *_ptr_asn1_fieldParameters;

/* 205 */
typedef signed __int64 asn1_int64Encoder;

/* 206 */
typedef asn1_int64Encoder *_ptr_asn1_int64Encoder;

/* 209 */
typedef BUILTIN_INTERFACE reflect_Type;

/* 207 */
struct asn1_invalidUnmarshalError
{
  reflect_Type Type;
};

/* 208 */
typedef asn1_invalidUnmarshalError *_ptr_asn1_invalidUnmarshalError;

/* 210 */
typedef bool (__gostk *PTR_funcreflect_Type_bool)(reflect_Type);

/* 212 */
typedef signed __int32 reflect_ChanDir;

/* 211 */
typedef reflect_ChanDir (__gostk *PTR_func_reflect_ChanDir)();

/* 213 */
typedef reflect_ChanDir *_ptr_reflect_ChanDir;

/* 214 */
typedef reflect_Type (__gostk *PTR_func_reflect_Type)();

/* 218 */
typedef BUILTIN_STRING reflect_StructTag;

/* 216 */
struct __attribute__((aligned(4))) reflect_StructField
{
  string Name;
  string PkgPath;
  reflect_Type Type;
  reflect_StructTag Tag;
  uintptr Offset;
  _slice_int Index;
  bool Anonymous;
};

/* 215 */
typedef reflect_StructField (__gostk *PTR_funcint_reflect_StructField)(signed __int32);

/* 217 */
typedef reflect_StructField *_ptr_reflect_StructField;

/* 219 */
typedef string (__gostk *PTR_funcstring_string)(string);

/* 220 */
typedef reflect_StructTag *_ptr_reflect_StructTag;

/* 221 */
typedef reflect_StructField (__gostk *PTR_func_slice_int_reflect_StructField)(_slice_int);

/* 223 */
struct retval_2CE540
{
  reflect_StructField 0;
  bool 1;
};

/* 222 */
typedef retval_2CE540 (__gostk *PTR_funcstring_reflect_StructField_comma__bool)(string);

/* 226 */
struct retval_2CE570
{
  reflect_StructField 0;
  bool 1;
};

/* 225 */
typedef bool (__gostk *PTR_funcstring_bool)(string);

/* 224 */
typedef retval_2CE570 (__gostk *PTR_funcfuncstring_bool_reflect_StructField_comma__bool)(PTR_funcstring_bool);

/* 227 */
typedef reflect_Type (__gostk *PTR_funcint_reflect_Type)(signed __int32);

/* 229 */
typedef unsigned __int32 reflect_Kind;

/* 228 */
typedef reflect_Kind (__gostk *PTR_func_reflect_Kind)();

/* 230 */
typedef reflect_Kind *_ptr_reflect_Kind;

/* 231 */
typedef reflect_Type *_ptr_reflect_Type;

/* 232 */
struct asn1_multiEncoder
{
  asn1_encoder *ptr;
  size_t len;
  size_t cap;
};

/* 233 */
typedef asn1_multiEncoder *_ptr_asn1_multiEncoder;

/* 234 */
struct asn1_oidEncoder
{
  signed __int32 *ptr;
  size_t len;
  size_t cap;
};

/* 235 */
typedef asn1_oidEncoder *_ptr_asn1_oidEncoder;

/* 236 */
struct asn1_setEncoder
{
  asn1_encoder *ptr;
  size_t len;
  size_t cap;
};

/* 237 */
typedef asn1_setEncoder *_ptr_asn1_setEncoder;

/* 238 */
typedef BUILTIN_STRING asn1_stringEncoder;

/* 239 */
typedef asn1_stringEncoder *_ptr_asn1_stringEncoder;

/* 240 */
struct __attribute__((aligned(4))) asn1_tagAndLength
{
  signed __int32 class;
  signed __int32 tag;
  signed __int32 length;
  bool isCompound;
};

/* 241 */
typedef asn1_tagAndLength *_ptr_asn1_tagAndLength;

/* 242 */
struct asn1_taggedEncoder
{
  _8_uint8 scratch;
  asn1_encoder tag;
  asn1_encoder body;
};

/* 243 */
typedef asn1_taggedEncoder *_ptr_asn1_taggedEncoder;

/* 246 */
struct atomic_noCopy
{
};

/* 244 */
struct atomic_Bool
{
  atomic_noCopy _;
  uint32 v;
};

/* 245 */
typedef atomic_Bool *_ptr_atomic_Bool;

/* 247 */
typedef atomic_noCopy *_ptr_atomic_noCopy;

/* 252 */
struct atomic_noCopy_0
{
};

/* 250 */
struct atomic_Uint8
{
  atomic_noCopy_0 noCopy;
  uint8 value;
};

/* 248 */
struct atomic_Bool_0
{
  atomic_Uint8 u;
};

/* 249 */
typedef atomic_Bool_0 *_ptr_atomic_Bool_0;

/* 251 */
typedef atomic_Uint8 *_ptr_atomic_Uint8;

/* 253 */
typedef atomic_noCopy_0 *_ptr_atomic_noCopy_0;

/* 254 */
struct atomic_Int32
{
  atomic_noCopy _;
  int32 v;
};

/* 255 */
typedef atomic_Int32 *_ptr_atomic_Int32;

/* 256 */
typedef int32 (__gostk *PTR_func_int32)();

/* 257 */
struct atomic_Int32_0
{
  atomic_noCopy_0 noCopy;
  int32 value;
};

/* 258 */
typedef atomic_Int32_0 *_ptr_atomic_Int32_0;

/* 262 */
struct atomic_align64
{
};

/* 259 */
struct atomic_Int64
{
  atomic_noCopy _;
  atomic_align64 __2;
  int64 v;
};

/* 260 */
typedef atomic_Int64 *_ptr_atomic_Int64;

/* 261 */
typedef int64 (__gostk *PTR_funcint64_int64)(int64);

/* 263 */
typedef atomic_align64 *_ptr_atomic_align64;

/* 266 */
struct atomic_align64_0
{
};

/* 264 */
struct atomic_Int64_0
{
  atomic_noCopy_0 noCopy;
  atomic_align64_0 _;
  int64 value;
};

/* 265 */
typedef atomic_Int64_0 *_ptr_atomic_Int64_0;

/* 267 */
typedef atomic_align64_0 *_ptr_atomic_align64_0;

/* 271 */
typedef go_shape_struct__internal_concurrent_isEntry_bool_ *_ptr_go_shape_struct__internal_concurrent_isEntry_bool_;

/* 273 */
typedef _ptr_go_shape_struct__internal_concurrent_isEntry_bool_ _0__ptr_go_shape_struct__internal_concurrent_isEntry_bool_[];

/* 268 */
struct atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__
{
  _0__ptr_go_shape_struct__internal_concurrent_isEntry_bool_ _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 270 */
struct go_shape_struct__internal_concurrent_isEntry_bool_
{
  bool isEntry;
};

/* 269 */
typedef atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ *_ptr_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__;

/* 272 */
struct _slice__ptr_go_shape_struct__internal_concurrent_isEntry_bool_
{
  _ptr_go_shape_struct__internal_concurrent_isEntry_bool_ *ptr;
  size_t len;
  size_t cap;
};

/* 276 */
typedef BUILTIN_INTERFACE interface_;

/* 277 */
typedef interface_ *_ptr_interface_;

/* 279 */
typedef _ptr_interface_ _0__ptr_interface_[];

/* 274 */
struct atomic_Pointer_interface__
{
  _0__ptr_interface_ _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 275 */
typedef atomic_Pointer_interface__ *_ptr_atomic_Pointer_interface__;

/* 278 */
struct _slice__ptr_interface_
{
  _ptr_interface_ *ptr;
  size_t len;
  size_t cap;
};

/* 283 */
typedef bisect_dedup *_ptr_bisect_dedup;

/* 297 */
typedef _ptr_bisect_dedup _0__ptr_bisect_dedup[];

/* 280 */
struct atomic_Pointer_internal_bisect_dedup_
{
  _0__ptr_bisect_dedup _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 285 */
typedef uint64 _4_uint64[4];

/* 287 */
typedef _4_uint64 _128__4_uint64[128];

/* 288 */
struct sync_Mutex
{
  int32 state;
  uint32 sema;
};

/* 290 */
typedef void *map_uint64_bool;

/* 282 */
struct __attribute__((packed)) __attribute__((aligned(4))) bisect_dedup
{
  _128__4_uint64 recent;
  sync_Mutex mu;
  map_uint64_bool m;
};

/* 281 */
typedef atomic_Pointer_internal_bisect_dedup_ *_ptr_atomic_Pointer_internal_bisect_dedup_;

/* 284 */
typedef bool (__gostk *PTR_funcuint64_bool)(uint64);

/* 286 */
struct _slice__4_uint64
{
  _4_uint64 *ptr;
  size_t len;
  size_t cap;
};

/* 289 */
typedef sync_Mutex *_ptr_sync_Mutex;

/* 291 */
struct MAP_TYPE
{
  void *key __offset(OFF32|NOZEROES);
  void *elem __offset(OFF32|NOZEROES);
  void *bucket __offset(OFF32|NOZEROES);
  void *func __offset(OFF32|NOZEROES);
  char keysize;
  char elemsize;
  __int16 bucketsize;
  int flags;
};

/* 293 */
typedef uint64 _8_uint64[8];

/* 295 */
typedef bool _8_bool[8];

/* 292 */
struct __attribute__((packed)) __attribute__((aligned(4))) map_bucket_uint64_bool
{
  _8_uint8 topbits;
  _8_uint64 keys;
  _8_bool elems;
  uintptr overflow;
};

/* 294 */
struct _slice_bool
{
  bool *ptr;
  size_t len;
  size_t cap;
};

/* 296 */
struct _slice__ptr_bisect_dedup
{
  _ptr_bisect_dedup *ptr;
  size_t len;
  size_t cap;
};

/* 301 */
typedef concurrent_entry__ptr_internal_abi_Type_comma_interface__ *_ptr_concurrent_entry__ptr_internal_abi_Type_comma_interface__;

/* 305 */
typedef _ptr_concurrent_entry__ptr_internal_abi_Type_comma_interface__ _0__ptr_concurrent_entry__ptr_internal_abi_Type_comma_interface__[];

/* 298 */
struct atomic_Pointer_internal_concurrent_entry__ptr_internal_abi_Type_comma_interface___
{
  _0__ptr_concurrent_entry__ptr_internal_abi_Type_comma_interface__ _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 302 */
struct concurrent_node__ptr_internal_abi_Type_comma_interface__
{
  bool isEntry;
};

/* 300 */
struct concurrent_entry__ptr_internal_abi_Type_comma_interface__
{
  concurrent_node__ptr_internal_abi_Type_comma_interface__ node;
  atomic_Pointer_internal_concurrent_entry__ptr_internal_abi_Type_comma_interface___ overflow;
  _ptr_abi_Type key;
  interface_ value;
};

/* 299 */
typedef atomic_Pointer_internal_concurrent_entry__ptr_internal_abi_Type_comma_interface___ *_ptr_atomic_Pointer_internal_concurrent_entry__ptr_internal_abi_Type_comma_interface___;

/* 303 */
typedef concurrent_node__ptr_internal_abi_Type_comma_interface__ *_ptr_concurrent_node__ptr_internal_abi_Type_comma_interface__;

/* 304 */
struct _slice__ptr_concurrent_entry__ptr_internal_abi_Type_comma_interface__
{
  _ptr_concurrent_entry__ptr_internal_abi_Type_comma_interface__ *ptr;
  size_t len;
  size_t cap;
};

/* 309 */
typedef concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *_ptr_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;

/* 317 */
typedef _ptr_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ _0__ptr_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__[];

/* 306 */
struct atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___
{
  _0__ptr_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 310 */
struct concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  bool isEntry;
};

/* 312 */
typedef abi_Type *go_shape__ptr_internal_abi_Type;

/* 314 */
typedef BUILTIN_INTERFACE go_shape_interface_;

/* 308 */
struct concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ node;
  atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___ overflow;
  go_shape__ptr_internal_abi_Type key;
  go_shape_interface_ value;
};

/* 307 */
typedef atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___ *_ptr_atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___;

/* 311 */
typedef concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *_ptr_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;

/* 313 */
typedef go_shape__ptr_internal_abi_Type *_ptr_go_shape__ptr_internal_abi_Type;

/* 315 */
typedef go_shape_interface_ *_ptr_go_shape_interface_;

/* 316 */
struct _slice__ptr_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  _ptr_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *ptr;
  size_t len;
  size_t cap;
};

/* 321 */
typedef concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *_ptr_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;

/* 329 */
typedef _ptr_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ _0__ptr_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__[];

/* 318 */
struct atomic_Pointer_internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___
{
  _0__ptr_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 322 */
struct concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  bool isEntry;
};

/* 324 */
struct go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string_
{
  bool isV6;
  string zoneV6;
};

/* 326 */
struct go_shape_struct__internal_weak_u_unsafe_Pointer_
{
  unsafe_Pointer u;
};

/* 320 */
struct concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ node;
  atomic_Pointer_internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___ overflow;
  go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string_ key;
  go_shape_struct__internal_weak_u_unsafe_Pointer_ value;
};

/* 319 */
typedef atomic_Pointer_internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___ *_ptr_atomic_Pointer_internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___;

/* 323 */
typedef concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *_ptr_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;

/* 325 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string_ *_ptr_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string_;

/* 327 */
typedef go_shape_struct__internal_weak_u_unsafe_Pointer_ *_ptr_go_shape_struct__internal_weak_u_unsafe_Pointer_;

/* 328 */
struct _slice__ptr_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  _ptr_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *ptr;
  size_t len;
  size_t cap;
};

/* 333 */
typedef concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ *_ptr_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__;

/* 341 */
typedef _ptr_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ _0__ptr_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__[];

/* 330 */
struct atomic_Pointer_internal_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___
{
  _0__ptr_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 334 */
struct concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  bool isEntry;
};

/* 336 */
struct netip_addrDetail
{
  bool isV6;
  string zoneV6;
};

/* 338 */
struct weak_Pointer_net_netip_addrDetail_
{
  unsafe_Pointer u;
};

/* 332 */
struct concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ node;
  atomic_Pointer_internal_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___ overflow;
  netip_addrDetail key;
  weak_Pointer_net_netip_addrDetail_ value;
};

/* 331 */
typedef atomic_Pointer_internal_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___ *_ptr_atomic_Pointer_internal_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___;

/* 335 */
typedef concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ *_ptr_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__;

/* 337 */
typedef netip_addrDetail *_ptr_netip_addrDetail;

/* 339 */
typedef weak_Pointer_net_netip_addrDetail_ *_ptr_weak_Pointer_net_netip_addrDetail_;

/* 340 */
struct _slice__ptr_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  _ptr_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ *ptr;
  size_t len;
  size_t cap;
};

/* 345 */
typedef _ptr_concurrent_node__ptr_internal_abi_Type_comma_interface__ _0__ptr_concurrent_node__ptr_internal_abi_Type_comma_interface__[];

/* 342 */
struct atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___
{
  _0__ptr_concurrent_node__ptr_internal_abi_Type_comma_interface__ _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 343 */
typedef atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___ *_ptr_atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___;

/* 344 */
struct _slice__ptr_concurrent_node__ptr_internal_abi_Type_comma_interface__
{
  _ptr_concurrent_node__ptr_internal_abi_Type_comma_interface__ *ptr;
  size_t len;
  size_t cap;
};

/* 349 */
typedef _ptr_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ _0__ptr_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__[];

/* 346 */
struct atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___
{
  _0__ptr_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 347 */
typedef atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___ *_ptr_atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___;

/* 348 */
struct _slice__ptr_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  _ptr_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ *ptr;
  size_t len;
  size_t cap;
};

/* 353 */
typedef godebug_value *_ptr_godebug_value;

/* 360 */
typedef _ptr_godebug_value _0__ptr_godebug_value[];

/* 350 */
struct atomic_Pointer_internal_godebug_value_
{
  _0__ptr_godebug_value _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 355 */
typedef bisect_Matcher *_ptr_bisect_Matcher;

/* 352 */
struct godebug_value
{
  string text;
  _ptr_bisect_Matcher bisect;
};

/* 356 */
struct _slice_bisect_cond
{
  bisect_cond *ptr;
  size_t len;
  size_t cap;
};

/* 354 */
struct bisect_Matcher
{
  bool verbose;
  bool quiet;
  bool enable;
  _slice_bisect_cond list;
  atomic_Pointer_internal_bisect_dedup_ dedup;
};

/* 357 */
struct __attribute__((packed)) __attribute__((aligned(4))) bisect_cond
{
  uint64 mask;
  uint64 bits;
  bool result;
};

/* 351 */
typedef atomic_Pointer_internal_godebug_value_ *_ptr_atomic_Pointer_internal_godebug_value_;

/* 358 */
typedef bisect_cond *_ptr_bisect_cond;

/* 359 */
struct _slice__ptr_godebug_value
{
  _ptr_godebug_value *ptr;
  size_t len;
  size_t cap;
};

/* 364 */
typedef http_response *_ptr_http_response;

/* 679 */
typedef _ptr_http_response _0__ptr_http_response[];

/* 361 */
struct atomic_Pointer_net_http_response_
{
  _0__ptr_http_response _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 397 */
typedef http_conn *_ptr_http_conn;

/* 418 */
typedef http_Request *_ptr_http_Request;

/* 425 */
typedef BUILTIN_INTERFACE io_ReadCloser;

/* 599 */
typedef void (__gostk *PTR_context_CancelFunc)();

/* 671 */
typedef bufio_Writer *_ptr_bufio_Writer;

/* 367 */
typedef void *http_Header;

/* 672 */
struct __attribute__((aligned(4))) http_chunkWriter
{
  _ptr_http_response res;
  http_Header header;
  bool wroteHeader;
  bool chunking;
};

/* 368 */
struct _slice_string
{
  string *ptr;
  size_t len;
  size_t cap;
};

/* 674 */
typedef uint8 _29_uint8[29];

/* 675 */
typedef uint8 _10_uint8[10];

/* 676 */
typedef uint8 _3_uint8[3];

/* 677 */
typedef void *chan_bool;

/* 363 */
struct http_response
{
  _ptr_http_conn conn;
  _ptr_http_Request req;
  io_ReadCloser reqBody;
  PTR_context_CancelFunc cancelCtx;
  bool wroteHeader;
  bool wants10KeepAlive;
  bool wantsClose;
  sync_Mutex writeContinueMu;
  atomic_Bool canWriteContinue;
  _ptr_bufio_Writer w;
  http_chunkWriter cw;
  http_Header handlerHeader;
  bool calledHeader;
  __attribute__((packed)) __attribute__((aligned(4))) int64 written;
  __attribute__((packed)) __attribute__((aligned(1))) int64 contentLength;
  signed __int32 status;
  bool closeAfterReply;
  bool fullDuplex;
  bool requestBodyLimitHit;
  _slice_string trailers;
  atomic_Bool handlerDone;
  _29_uint8 dateBuf;
  _10_uint8 clenBuf;
  _3_uint8 statusBuf;
  chan_bool closeNotifyCh;
  atomic_Bool didCloseNotify;
};

/* 399 */
typedef http_Server *_ptr_http_Server;

/* 519 */
typedef BUILTIN_INTERFACE net_Conn;

/* 444 */
typedef tls_ConnectionState *_ptr_tls_ConnectionState;

/* 658 */
typedef http_connReader *_ptr_http_connReader;

/* 669 */
typedef bufio_Reader *_ptr_bufio_Reader;

/* 655 */
struct atomic_Uint64
{
  atomic_noCopy _;
  atomic_align64 __2;
  uint64 v;
};

/* 396 */
struct http_conn
{
  _ptr_http_Server server;
  PTR_context_CancelFunc cancelCtx;
  net_Conn rwc;
  string remoteAddr;
  _ptr_tls_ConnectionState tlsState;
  error werr;
  _ptr_http_connReader r;
  _ptr_bufio_Reader bufr;
  _ptr_bufio_Writer bufw;
  string lastMethod;
  atomic_Pointer_net_http_response_ curReq;
  atomic_Uint64 curState;
  sync_Mutex mu;
  bool hijackedv;
};

/* 422 */
typedef url_URL *_ptr_url_URL;

/* 428 */
struct retval_2C9BD0
{
  io_ReadCloser 0;
  error 1;
};

/* 427 */
typedef retval_2C9BD0 (__gostk *PTR_func_io_ReadCloser_comma__error)();

/* 429 */
typedef void *url_Values;

/* 432 */
typedef multipart_Form *_ptr_multipart_Form;

/* 406 */
typedef void *_chan_left_chan_struct_;

/* 491 */
typedef http_Response *_ptr_http_Response;

/* 402 */
typedef BUILTIN_INTERFACE context_Context;

/* 493 */
typedef http_pattern *_ptr_http_pattern;

/* 497 */
typedef void *map_string_string;

/* 417 */
struct __attribute__((packed)) __attribute__((aligned(4))) http_Request
{
  string Method;
  _ptr_url_URL URL;
  string Proto;
  signed __int32 ProtoMajor;
  signed __int32 ProtoMinor;
  http_Header Header;
  io_ReadCloser Body;
  PTR_func_io_ReadCloser_comma__error GetBody;
  int64 ContentLength;
  _slice_string TransferEncoding;
  bool Close;
  __attribute__((aligned(4))) string Host;
  url_Values Form;
  url_Values PostForm;
  _ptr_multipart_Form MultipartForm;
  http_Header Trailer;
  string RemoteAddr;
  string RequestURI;
  _ptr_tls_ConnectionState TLS;
  _chan_left_chan_struct_ Cancel;
  _ptr_http_Response Response;
  string Pattern;
  context_Context ctx;
  _ptr_http_pattern pat;
  _slice_string matches;
  map_string_string otherValues;
};

/* 572 */
typedef BUILTIN_INTERFACE io_Writer;

/* 670 */
struct bufio_Writer
{
  error err;
  _slice_uint8 buf;
  signed __int32 n;
  io_Writer wr;
};

/* 413 */
typedef BUILTIN_INTERFACE http_Handler;

/* 501 */
typedef tls_Config *_ptr_tls_Config;

/* 580 */
typedef signed __int64 time_Duration;

/* 582 */
typedef void *map_string_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler;

/* 621 */
typedef signed __int32 http_ConnState;

/* 620 */
typedef void (__gostk *PTR_funcnet_Conn_comma__http_ConnState)(net_Conn, http_ConnState);

/* 624 */
typedef log_Logger *_ptr_log_Logger;

/* 630 */
typedef BUILTIN_INTERFACE net_Listener;

/* 629 */
typedef context_Context (__gostk *PTR_funcnet_Listener_context_Context)(net_Listener);

/* 634 */
typedef context_Context (__gostk *PTR_funccontext_Context_comma__net_Conn_context_Context)(context_Context, net_Conn);

/* 637 */
struct atomic_Uint32
{
  atomic_noCopy _;
  uint32 v;
};

/* 635 */
struct sync_Once
{
  atomic_Uint32 done;
  sync_Mutex m;
};

/* 641 */
typedef void *map__ptr_net_Listener_struct_;

/* 647 */
typedef void *map__ptr_http_conn_struct_;

/* 653 */
struct sync_noCopy
{
};

/* 651 */
struct __attribute__((aligned(8))) sync_WaitGroup
{
  sync_noCopy noCopy;
  atomic_Uint64 state;
  uint32 sema;
};

/* 398 */
struct http_Server
{
  string Addr;
  http_Handler Handler;
  bool DisableGeneralOptionsHandler;
  _ptr_tls_Config TLSConfig;
  time_Duration ReadTimeout;
  time_Duration ReadHeaderTimeout;
  time_Duration WriteTimeout;
  time_Duration IdleTimeout;
  signed __int32 MaxHeaderBytes;
  map_string_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler TLSNextProto;
  PTR_funcnet_Conn_comma__http_ConnState ConnState;
  _ptr_log_Logger ErrorLog;
  PTR_funcnet_Listener_context_Context BaseContext;
  PTR_funccontext_Context_comma__net_Conn_context_Context ConnContext;
  atomic_Bool inShutdown;
  atomic_Bool disableKeepAlives;
  sync_Once nextProtoOnce;
  error nextProtoErr;
  sync_Mutex mu;
  map__ptr_net_Listener_struct_ listeners;
  map__ptr_http_conn_struct_ activeConn;
  _slice_func onShutdown;
  sync_WaitGroup listenerGroup;
};

/* 449 */
typedef x509_Certificate *_ptr_x509_Certificate;

/* 447 */
struct _slice__ptr_x509_Certificate
{
  _ptr_x509_Certificate *ptr;
  size_t len;
  size_t cap;
};

/* 486 */
struct _slice__slice__ptr_x509_Certificate
{
  _slice__ptr_x509_Certificate *ptr;
  size_t len;
  size_t cap;
};

/* 487 */
struct _slice__slice_uint8
{
  _slice_uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 446 */
struct retval_2D0078
{
  _slice_uint8 0;
  error 1;
};

/* 445 */
typedef retval_2D0078 (__gostk *PTR_funcstring_comma___slice_uint8_comma__int__slice_uint8_comma__error)(string, _slice_uint8, signed __int32);

/* 488 */
typedef unsigned __int16 tls_CurveID;

/* 443 */
struct tls_ConnectionState
{
  uint16 Version;
  bool HandshakeComplete;
  bool DidResume;
  uint16 CipherSuite;
  string NegotiatedProtocol;
  bool NegotiatedProtocolIsMutual;
  string ServerName;
  _slice__ptr_x509_Certificate PeerCertificates;
  _slice__slice__ptr_x509_Certificate VerifiedChains;
  _slice__slice_uint8 SignedCertificateTimestamps;
  _slice_uint8 OCSPResponse;
  _slice_uint8 TLSUnique;
  bool ECHAccepted;
  PTR_funcstring_comma___slice_uint8_comma__int__slice_uint8_comma__error ekm;
  bool testingOnlyDidHRR;
  tls_CurveID testingOnlyCurveID;
};

/* 659 */
typedef uint8 _1_uint8[1];

/* 661 */
typedef sync_Cond *_ptr_sync_Cond;

/* 657 */
struct http_connReader
{
  _ptr_http_conn conn;
  sync_Mutex mu;
  bool hasByte;
  _1_uint8 byteBuf;
  _ptr_sync_Cond cond;
  bool inRead;
  bool aborted;
  int64 remain;
};

/* 377 */
typedef BUILTIN_INTERFACE io_Reader;

/* 668 */
struct bufio_Reader
{
  _slice_uint8 buf;
  io_Reader rd;
  signed __int32 r;
  signed __int32 w;
  error err;
  signed __int32 lastByte;
  signed __int32 lastRuneSize;
};

/* 424 */
typedef url_Userinfo *_ptr_url_Userinfo;

/* 421 */
struct url_URL
{
  string Scheme;
  string Opaque;
  _ptr_url_Userinfo User;
  string Host;
  string Path;
  string RawPath;
  bool OmitHost;
  bool ForceQuery;
  string RawQuery;
  string Fragment;
  string RawFragment;
};

/* 433 */
typedef void *map_string__slice_string;

/* 434 */
typedef void *map_string__slice__ptr_multipart_FileHeader;

/* 431 */
struct multipart_Form
{
  map_string__slice_string Value;
  map_string__slice__ptr_multipart_FileHeader File;
};

/* 490 */
struct __attribute__((packed)) __attribute__((aligned(4))) http_Response
{
  string Status;
  signed __int32 StatusCode;
  string Proto;
  signed __int32 ProtoMajor;
  signed __int32 ProtoMinor;
  http_Header Header;
  io_ReadCloser Body;
  int64 ContentLength;
  _slice_string TransferEncoding;
  bool Close;
  bool Uncompressed;
  __attribute__((aligned(4))) http_Header Trailer;
  _ptr_http_Request Request;
  _ptr_tls_ConnectionState TLS;
};

/* 494 */
struct _slice_http_segment
{
  http_segment *ptr;
  size_t len;
  size_t cap;
};

/* 492 */
struct http_pattern
{
  string str;
  string method;
  string host;
  _slice_http_segment segments;
  string loc;
};

/* 387 */
typedef time_Location *_ptr_time_Location;

/* 383 */
struct __attribute__((packed)) __attribute__((aligned(4))) time_Time
{
  uint64 wall;
  int64 ext;
  _ptr_time_Location loc;
};

/* 385 */
typedef time_Time (__gostk *PTR_func_time_Time)();

/* 531 */
struct _slice_tls_Certificate
{
  tls_Certificate *ptr;
  size_t len;
  size_t cap;
};

/* 532 */
typedef void *map_string__ptr_tls_Certificate;

/* 525 */
typedef tls_Certificate *_ptr_tls_Certificate;

/* 530 */
struct retval_2CE660
{
  _ptr_tls_Certificate 0;
  error 1;
};

/* 513 */
typedef tls_ClientHelloInfo *_ptr_tls_ClientHelloInfo;

/* 511 */
typedef retval_2CE660 (__gostk *PTR_func_ptr_tls_ClientHelloInfo__ptr_tls_Certificate_comma__error)(_ptr_tls_ClientHelloInfo);

/* 539 */
struct retval_2CE690
{
  _ptr_tls_Certificate 0;
  error 1;
};

/* 538 */
typedef tls_CertificateRequestInfo *_ptr_tls_CertificateRequestInfo;

/* 536 */
typedef retval_2CE690 (__gostk *PTR_func_ptr_tls_CertificateRequestInfo__ptr_tls_Certificate_comma__error)(_ptr_tls_CertificateRequestInfo);

/* 541 */
struct retval_2CE6C0
{
  _ptr_tls_Config 0;
  error 1;
};

/* 540 */
typedef retval_2CE6C0 (__gostk *PTR_func_ptr_tls_ClientHelloInfo__ptr_tls_Config_comma__error)(_ptr_tls_ClientHelloInfo);

/* 542 */
typedef error (__gostk *PTR_func_slice__slice_uint8_comma___slice__slice__ptr_x509_Certificate_error)(_slice__slice_uint8, _slice__slice__ptr_x509_Certificate);

/* 543 */
typedef error (__gostk *PTR_functls_ConnectionState_error)(tls_ConnectionState);

/* 545 */
typedef x509_CertPool *_ptr_x509_CertPool;

/* 561 */
typedef signed __int32 tls_ClientAuthType;

/* 514 */
struct _slice_uint16
{
  uint16 *ptr;
  size_t len;
  size_t cap;
};

/* 563 */
typedef uint8 _32_uint8[32];

/* 564 */
typedef BUILTIN_INTERFACE tls_ClientSessionCache;

/* 504 */
typedef tls_SessionState *_ptr_tls_SessionState;

/* 508 */
struct retval_2CF0E0
{
  _ptr_tls_SessionState 0;
  error 1;
};

/* 502 */
typedef retval_2CF0E0 (__gostk *PTR_func_slice_uint8_comma__tls_ConnectionState__ptr_tls_SessionState_comma__error)(_slice_uint8, tls_ConnectionState);

/* 510 */
struct retval_2CF118
{
  _slice_uint8 0;
  error 1;
};

/* 509 */
typedef retval_2CF118 (__gostk *PTR_functls_ConnectionState_comma___ptr_tls_SessionState__slice_uint8_comma__error)(tls_ConnectionState, _ptr_tls_SessionState);

/* 515 */
struct _slice_tls_CurveID
{
  tls_CurveID *ptr;
  size_t len;
  size_t cap;
};

/* 570 */
typedef signed __int32 tls_RenegotiationSupport;

/* 574 */
struct sync_RWMutex
{
  sync_Mutex w;
  uint32 writerSem;
  uint32 readerSem;
  atomic_Int32 readerCount;
  atomic_Int32 readerWait;
};

/* 576 */
struct _slice_tls_ticketKey
{
  tls_ticketKey *ptr;
  size_t len;
  size_t cap;
};

/* 500 */
struct tls_Config
{
  io_Reader Rand;
  PTR_func_time_Time Time;
  _slice_tls_Certificate Certificates;
  map_string__ptr_tls_Certificate NameToCertificate;
  PTR_func_ptr_tls_ClientHelloInfo__ptr_tls_Certificate_comma__error GetCertificate;
  PTR_func_ptr_tls_CertificateRequestInfo__ptr_tls_Certificate_comma__error GetClientCertificate;
  PTR_func_ptr_tls_ClientHelloInfo__ptr_tls_Config_comma__error GetConfigForClient;
  PTR_func_slice__slice_uint8_comma___slice__slice__ptr_x509_Certificate_error VerifyPeerCertificate;
  PTR_functls_ConnectionState_error VerifyConnection;
  _ptr_x509_CertPool RootCAs;
  _slice_string NextProtos;
  string ServerName;
  tls_ClientAuthType ClientAuth;
  _ptr_x509_CertPool ClientCAs;
  bool InsecureSkipVerify;
  _slice_uint16 CipherSuites;
  bool PreferServerCipherSuites;
  bool SessionTicketsDisabled;
  _32_uint8 SessionTicketKey;
  tls_ClientSessionCache ClientSessionCache;
  PTR_func_slice_uint8_comma__tls_ConnectionState__ptr_tls_SessionState_comma__error UnwrapSession;
  PTR_functls_ConnectionState_comma___ptr_tls_SessionState__slice_uint8_comma__error WrapSession;
  uint16 MinVersion;
  uint16 MaxVersion;
  _slice_tls_CurveID CurvePreferences;
  bool DynamicRecordSizingDisabled;
  tls_RenegotiationSupport Renegotiation;
  io_Writer KeyLogWriter;
  _slice_uint8 EncryptedClientHelloConfigList;
  PTR_functls_ConnectionState_error EncryptedClientHelloRejectionVerify;
  sync_RWMutex mutex;
  _slice_tls_ticketKey sessionTicketKeys;
  _slice_tls_ticketKey autoSessionTicketKeys;
};

/* 628 */
typedef _ptr_string _0__ptr_string[];

/* 625 */
struct atomic_Pointer_string_
{
  _0__ptr_string _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 623 */
struct log_Logger
{
  sync_Mutex outMu;
  io_Writer out;
  atomic_Pointer_string_ prefix;
  atomic_Int32 flag;
  atomic_Bool isDiscard;
};

/* 450 */
typedef signed __int32 x509_SignatureAlgorithm;

/* 458 */
typedef signed __int32 x509_PublicKeyAlgorithm;

/* 462 */
struct _slice_pkix_AttributeTypeAndValue
{
  pkix_AttributeTypeAndValue *ptr;
  size_t len;
  size_t cap;
};

/* 460 */
struct pkix_Name
{
  _slice_string Country;
  _slice_string Organization;
  _slice_string OrganizationalUnit;
  _slice_string Locality;
  _slice_string Province;
  _slice_string StreetAddress;
  _slice_string PostalCode;
  string SerialNumber;
  string CommonName;
  _slice_pkix_AttributeTypeAndValue Names;
  _slice_pkix_AttributeTypeAndValue ExtraNames;
};

/* 465 */
typedef signed __int32 x509_KeyUsage;

/* 467 */
struct _slice_pkix_Extension
{
  pkix_Extension *ptr;
  size_t len;
  size_t cap;
};

/* 470 */
struct _slice_asn1_ObjectIdentifier
{
  asn1_ObjectIdentifier *ptr;
  size_t len;
  size_t cap;
};

/* 472 */
typedef signed __int32 x509_ExtKeyUsage;

/* 471 */
struct _slice_x509_ExtKeyUsage
{
  x509_ExtKeyUsage *ptr;
  size_t len;
  size_t cap;
};

/* 474 */
struct _slice_net_IP
{
  net_IP *ptr;
  size_t len;
  size_t cap;
};

/* 477 */
struct _slice__ptr_url_URL
{
  _ptr_url_URL *ptr;
  size_t len;
  size_t cap;
};

/* 480 */
typedef net_IPNet *_ptr_net_IPNet;

/* 478 */
struct _slice__ptr_net_IPNet
{
  _ptr_net_IPNet *ptr;
  size_t len;
  size_t cap;
};

/* 483 */
struct _slice_x509_OID
{
  x509_OID *ptr;
  size_t len;
  size_t cap;
};

/* 448 */
struct x509_Certificate
{
  _slice_uint8 Raw;
  _slice_uint8 RawTBSCertificate;
  _slice_uint8 RawSubjectPublicKeyInfo;
  _slice_uint8 RawSubject;
  _slice_uint8 RawIssuer;
  _slice_uint8 Signature;
  x509_SignatureAlgorithm SignatureAlgorithm;
  x509_PublicKeyAlgorithm PublicKeyAlgorithm;
  interface_ PublicKey;
  signed __int32 Version;
  _ptr_big_Int SerialNumber;
  pkix_Name Issuer;
  pkix_Name Subject;
  time_Time NotBefore;
  time_Time NotAfter;
  x509_KeyUsage KeyUsage;
  _slice_pkix_Extension Extensions;
  _slice_pkix_Extension ExtraExtensions;
  _slice_asn1_ObjectIdentifier UnhandledCriticalExtensions;
  _slice_x509_ExtKeyUsage ExtKeyUsage;
  _slice_asn1_ObjectIdentifier UnknownExtKeyUsage;
  bool BasicConstraintsValid;
  bool IsCA;
  signed __int32 MaxPathLen;
  bool MaxPathLenZero;
  _slice_uint8 SubjectKeyId;
  _slice_uint8 AuthorityKeyId;
  _slice_string OCSPServer;
  _slice_string IssuingCertificateURL;
  _slice_string DNSNames;
  _slice_string EmailAddresses;
  _slice_net_IP IPAddresses;
  _slice__ptr_url_URL URIs;
  bool PermittedDNSDomainsCritical;
  _slice_string PermittedDNSDomains;
  _slice_string ExcludedDNSDomains;
  _slice__ptr_net_IPNet PermittedIPRanges;
  _slice__ptr_net_IPNet ExcludedIPRanges;
  _slice_string PermittedEmailAddresses;
  _slice_string ExcludedEmailAddresses;
  _slice_string PermittedURIDomains;
  _slice_string ExcludedURIDomains;
  _slice_string CRLDistributionPoints;
  _slice_asn1_ObjectIdentifier PolicyIdentifiers;
  _slice_x509_OID Policies;
};

/* 662 */
typedef BUILTIN_INTERFACE sync_Locker;

/* 664 */
struct sync_notifyList
{
  uint32 wait;
  uint32 notify;
  uintptr lock;
  unsafe_Pointer head;
  unsafe_Pointer tail;
};

/* 666 */
typedef unsigned __int32 sync_copyChecker;

/* 660 */
struct sync_Cond
{
  sync_noCopy noCopy;
  sync_Locker L;
  sync_notifyList notify;
  sync_copyChecker checker;
};

/* 423 */
struct __attribute__((aligned(4))) url_Userinfo
{
  string username;
  string password;
  bool passwordSet;
};

/* 495 */
struct __attribute__((aligned(4))) http_segment
{
  string s;
  bool wild;
  bool multi;
};

/* 388 */
struct _slice_time_zone
{
  time_zone *ptr;
  size_t len;
  size_t cap;
};

/* 391 */
struct _slice_time_zoneTrans
{
  time_zoneTrans *ptr;
  size_t len;
  size_t cap;
};

/* 390 */
typedef time_zone *_ptr_time_zone;

/* 386 */
struct __attribute__((packed)) __attribute__((aligned(4))) time_Location
{
  string name;
  _slice_time_zone zone;
  _slice_time_zoneTrans tx;
  string extend;
  int64 cacheStart;
  int64 cacheEnd;
  _ptr_time_zone cacheZone;
};

/* 528 */
typedef BUILTIN_INTERFACE crypto_PrivateKey;

/* 517 */
typedef unsigned __int16 tls_SignatureScheme;

/* 516 */
struct _slice_tls_SignatureScheme
{
  tls_SignatureScheme *ptr;
  size_t len;
  size_t cap;
};

/* 524 */
struct tls_Certificate
{
  _slice__slice_uint8 Certificate;
  crypto_PrivateKey PrivateKey;
  _slice_tls_SignatureScheme SupportedSignatureAlgorithms;
  _slice_uint8 OCSPStaple;
  _slice__slice_uint8 SignedCertificateTimestamps;
  _ptr_x509_Certificate Leaf;
};

/* 512 */
struct tls_ClientHelloInfo
{
  _slice_uint16 CipherSuites;
  string ServerName;
  _slice_tls_CurveID SupportedCurves;
  _slice_uint8 SupportedPoints;
  _slice_tls_SignatureScheme SignatureSchemes;
  _slice_string SupportedProtos;
  _slice_uint16 SupportedVersions;
  net_Conn Conn;
  _ptr_tls_Config config;
  context_Context ctx;
};

/* 537 */
struct tls_CertificateRequestInfo
{
  _slice__slice_uint8 AcceptableCAs;
  _slice_tls_SignatureScheme SignatureSchemes;
  uint16 Version;
  context_Context ctx;
};

/* 547 */
typedef void *map_string__slice_int;

/* 551 */
struct _slice_x509_lazyCert
{
  x509_lazyCert *ptr;
  size_t len;
  size_t cap;
};

/* 555 */
typedef void *map_x509_sum224_bool;

/* 544 */
struct __attribute__((aligned(4))) x509_CertPool
{
  map_string__slice_int byName;
  _slice_x509_lazyCert lazyCerts;
  map_x509_sum224_bool haveSum;
  bool systemPool;
};

/* 507 */
typedef tls_activeCert *_ptr_tls_activeCert;

/* 505 */
struct _slice__ptr_tls_activeCert
{
  _ptr_tls_activeCert *ptr;
  size_t len;
  size_t cap;
};

/* 503 */
struct tls_SessionState
{
  _slice__slice_uint8 Extra;
  bool EarlyData;
  uint16 version;
  bool isClient;
  uint16 cipherSuite;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 createdAt;
  _slice_uint8 secret;
  bool extMasterSecret;
  _slice__ptr_x509_Certificate peerCertificates;
  _slice__ptr_tls_activeCert activeCertHandles;
  _slice_uint8 ocspResponse;
  _slice__slice_uint8 scts;
  _slice__slice__ptr_x509_Certificate verifiedChains;
  string alpnProtocol;
  uint64 useBy;
  uint32 ageAdd;
  _slice_uint8 ticket;
};

/* 579 */
typedef uint8 _16_uint8[16];

/* 577 */
struct tls_ticketKey
{
  _16_uint8 aesKey;
  _16_uint8 hmacKey;
  time_Time created;
};

/* 463 */
struct pkix_AttributeTypeAndValue
{
  asn1_ObjectIdentifier Type;
  interface_ Value;
};

/* 468 */
struct pkix_Extension
{
  asn1_ObjectIdentifier Id;
  bool Critical;
  _slice_uint8 Value;
};

/* 475 */
struct net_IP
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 481 */
struct net_IPMask
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 479 */
struct net_IPNet
{
  net_IP IP;
  net_IPMask Mask;
};

/* 484 */
struct x509_OID
{
  _slice_uint8 der;
};

/* 389 */
struct __attribute__((aligned(4))) time_zone
{
  string name;
  signed __int32 offset;
  bool isDST;
};

/* 392 */
struct __attribute__((packed)) __attribute__((aligned(2))) time_zoneTrans
{
  int64 when;
  uint8 index;
  bool isstd;
  bool isutc;
};

/* 554 */
typedef error (__gostk *PTR_func_slice__ptr_x509_Certificate_error)(_slice__ptr_x509_Certificate);

/* 527 */
struct retval_2CB818
{
  _ptr_x509_Certificate 0;
  error 1;
};

/* 526 */
typedef retval_2CB818 (__gostk *PTR_func__ptr_x509_Certificate_comma__error)();

/* 552 */
struct x509_lazyCert
{
  _slice_uint8 rawSubject;
  PTR_func_slice__ptr_x509_Certificate_error constraint;
  PTR_func__ptr_x509_Certificate_comma__error getCert;
};

/* 506 */
struct tls_activeCert
{
  _ptr_x509_Certificate cert;
};

/* 362 */
typedef atomic_Pointer_net_http_response_ *_ptr_atomic_Pointer_net_http_response_;

/* 365 */
typedef error (__gostk *PTR_func_error)();

/* 366 */
typedef http_Header (__gostk *PTR_func_http_Header)();

/* 370 */
typedef string _8_string[8];

/* 372 */
typedef _slice_string _8__slice_string[8];

/* 369 */
struct map_bucket_string__slice_string
{
  _8_uint8 topbits;
  _8_string keys;
  _8__slice_string elems;
  unsafe_Pointer overflow;
};

/* 371 */
struct _slice__slice_string
{
  _slice_string *ptr;
  size_t len;
  size_t cap;
};

/* 373 */
typedef void (__gostk *PTR_funcstring_comma__string)(string, string);

/* 374 */
typedef void (__gostk *PTR_funcstring)(string);

/* 375 */
typedef http_Header *_ptr_http_Header;

/* 381 */
struct retval_2CE1B0
{
  int64 0;
  error 1;
};

/* 376 */
typedef retval_2CE1B0 (__gostk *PTR_funcio_Reader_int64_comma__error)(io_Reader);

/* 379 */
struct retval_2CE120
{
  signed __int32 0;
  error 1;
};

/* 378 */
typedef retval_2CE120 (__gostk *PTR_func_slice_uint8_int_comma__error)(_slice_uint8);

/* 380 */
typedef io_Reader *_ptr_io_Reader;

/* 382 */
typedef error (__gostk *PTR_functime_Time_error)(time_Time);

/* 384 */
typedef time_Time *_ptr_time_Time;

/* 393 */
typedef time_zoneTrans *_ptr_time_zoneTrans;

/* 395 */
struct retval_2CE1E0
{
  signed __int32 0;
  error 1;
};

/* 394 */
typedef retval_2CE1E0 (__gostk *PTR_funcstring_int_comma__error)(string);

/* 400 */
typedef void (__gostk *PTR_funcfunc)(PTR_func);

/* 401 */
typedef error (__gostk *PTR_funccontext_Context_error)(context_Context);

/* 404 */
struct retval_2CB6A8
{
  time_Time 0;
  bool 1;
};

/* 403 */
typedef retval_2CB6A8 (__gostk *PTR_func_time_Time_comma__bool)();

/* 405 */
typedef _chan_left_chan_struct_ (__gostk *PTR_func__chan_left_chan_struct_)();

/* 407 */
enum __bitmask CHANDIR_ENUM : __int32
{
  RECV_DIR = 0x1,                       ///< <-chan
  SEND_DIR = 0x2,                       ///< chan<-
};

/* 408 */
struct CHAN_TYPE
{
  void *elem __offset(OFF32|NOZEROES);
  CHANDIR_ENUM dir;
};

/* 409 */
struct $8EF4127CF77ECA3DDB612FCF233DC3A8
{
};

/* 410 */
typedef context_Context *_ptr_context_Context;

/* 412 */
struct _slice_interface_
{
  interface_ *ptr;
  size_t len;
  size_t cap;
};

/* 411 */
typedef void (__gostk *PTR_funcstring_comma_____interface_)(string, _slice_interface_);

/* 415 */
typedef BUILTIN_INTERFACE http_ResponseWriter;

/* 414 */
typedef void (__gostk *PTR_funchttp_ResponseWriter_comma___ptr_http_Request)(http_ResponseWriter, _ptr_http_Request);

/* 416 */
typedef http_ResponseWriter *_ptr_http_ResponseWriter;

/* 419 */
typedef context_Context (__gostk *PTR_func_context_Context)();

/* 420 */
typedef bool (__gostk *PTR_funcint_comma__int_bool)(signed __int32, signed __int32);

/* 426 */
typedef io_ReadCloser *_ptr_io_ReadCloser;

/* 430 */
typedef url_Values *_ptr_url_Values;

/* 437 */
typedef multipart_FileHeader *_ptr_multipart_FileHeader;

/* 435 */
struct _slice__ptr_multipart_FileHeader
{
  _ptr_multipart_FileHeader *ptr;
  size_t len;
  size_t cap;
};

/* 438 */
typedef void *textproto_MIMEHeader;

/* 436 */
struct __attribute__((packed)) __attribute__((aligned(4))) multipart_FileHeader
{
  string Filename;
  textproto_MIMEHeader Header;
  int64 Size;
  _slice_uint8 content;
  string tmpfile;
  int64 tmpoff;
  bool tmpshared;
};

/* 439 */
typedef textproto_MIMEHeader *_ptr_textproto_MIMEHeader;

/* 442 */
typedef _slice__ptr_multipart_FileHeader _8__slice__ptr_multipart_FileHeader[8];

/* 440 */
struct map_bucket_string__slice__ptr_multipart_FileHeader
{
  _8_uint8 topbits;
  _8_string keys;
  _8__slice__ptr_multipart_FileHeader elems;
  unsafe_Pointer overflow;
};

/* 441 */
struct _slice__slice__ptr_multipart_FileHeader
{
  _slice__ptr_multipart_FileHeader *ptr;
  size_t len;
  size_t cap;
};

/* 452 */
typedef unsigned __int32 crypto_Hash;

/* 451 */
typedef crypto_Hash (__gostk *PTR_func_crypto_Hash)();

/* 454 */
typedef BUILTIN_INTERFACE hash_Hash;

/* 453 */
typedef hash_Hash (__gostk *PTR_func_hash_Hash)();

/* 455 */
typedef hash_Hash *_ptr_hash_Hash;

/* 456 */
typedef crypto_Hash *_ptr_crypto_Hash;

/* 457 */
typedef x509_SignatureAlgorithm *_ptr_x509_SignatureAlgorithm;

/* 459 */
typedef x509_PublicKeyAlgorithm *_ptr_x509_PublicKeyAlgorithm;

/* 461 */
typedef pkix_Name *_ptr_pkix_Name;

/* 464 */
typedef pkix_AttributeTypeAndValue *_ptr_pkix_AttributeTypeAndValue;

/* 466 */
typedef x509_KeyUsage *_ptr_x509_KeyUsage;

/* 469 */
typedef pkix_Extension *_ptr_pkix_Extension;

/* 473 */
typedef x509_ExtKeyUsage *_ptr_x509_ExtKeyUsage;

/* 476 */
typedef net_IP *_ptr_net_IP;

/* 482 */
typedef net_IPMask *_ptr_net_IPMask;

/* 485 */
typedef x509_OID *_ptr_x509_OID;

/* 489 */
typedef tls_CurveID *_ptr_tls_CurveID;

/* 496 */
typedef http_segment *_ptr_http_segment;

/* 498 */
struct map_bucket_string_string
{
  _8_uint8 topbits;
  _8_string keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 499 */
typedef http_Handler *_ptr_http_Handler;

/* 518 */
typedef tls_SignatureScheme *_ptr_tls_SignatureScheme;

/* 521 */
typedef BUILTIN_INTERFACE net_Addr;

/* 520 */
typedef net_Addr (__gostk *PTR_func_net_Addr)();

/* 522 */
typedef net_Addr *_ptr_net_Addr;

/* 523 */
typedef net_Conn *_ptr_net_Conn;

/* 529 */
typedef crypto_PrivateKey *_ptr_crypto_PrivateKey;

/* 535 */
typedef _ptr_tls_Certificate _8__ptr_tls_Certificate[8];

/* 533 */
struct map_bucket_string__ptr_tls_Certificate
{
  _8_uint8 topbits;
  _8_string keys;
  _8__ptr_tls_Certificate elems;
  unsafe_Pointer overflow;
};

/* 534 */
struct _slice__ptr_tls_Certificate
{
  _ptr_tls_Certificate *ptr;
  size_t len;
  size_t cap;
};

/* 546 */
typedef bool (__gostk *PTR_func_slice_uint8_bool)(_slice_uint8);

/* 550 */
typedef _slice_int _8__slice_int[8];

/* 548 */
struct map_bucket_string__slice_int
{
  _8_uint8 topbits;
  _8_string keys;
  _8__slice_int elems;
  unsafe_Pointer overflow;
};

/* 549 */
struct _slice__slice_int
{
  _slice_int *ptr;
  size_t len;
  size_t cap;
};

/* 553 */
typedef x509_lazyCert *_ptr_x509_lazyCert;

/* 556 */
typedef uint8 x509_sum224[28];

/* 557 */
typedef x509_sum224 *_ptr_x509_sum224;

/* 560 */
typedef x509_sum224 _8_x509_sum224[8];

/* 558 */
struct map_bucket_x509_sum224_bool
{
  _8_uint8 topbits;
  _8_x509_sum224 keys;
  _8_bool elems;
  uintptr overflow;
};

/* 559 */
struct _slice_x509_sum224
{
  x509_sum224 *ptr;
  size_t len;
  size_t cap;
};

/* 562 */
typedef tls_ClientAuthType *_ptr_tls_ClientAuthType;

/* 567 */
typedef tls_ClientSessionState *_ptr_tls_ClientSessionState;

/* 568 */
struct retval_2CE720
{
  _ptr_tls_ClientSessionState 0;
  bool 1;
};

/* 565 */
typedef retval_2CE720 (__gostk *PTR_funcstring__ptr_tls_ClientSessionState_comma__bool)(string);

/* 566 */
struct tls_ClientSessionState
{
  _ptr_tls_SessionState session;
};

/* 569 */
typedef tls_ClientSessionCache *_ptr_tls_ClientSessionCache;

/* 571 */
typedef tls_RenegotiationSupport *_ptr_tls_RenegotiationSupport;

/* 573 */
typedef io_Writer *_ptr_io_Writer;

/* 575 */
typedef sync_RWMutex *_ptr_sync_RWMutex;

/* 578 */
typedef tls_ticketKey *_ptr_tls_ticketKey;

/* 581 */
typedef time_Duration *_ptr_time_Duration;

/* 585 */
typedef tls_Conn *_ptr_tls_Conn;

/* 583 */
typedef void (__gostk *PTR_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler)(_ptr_http_Server, _ptr_tls_Conn, http_Handler);

/* 589 */
typedef tls_quicState *_ptr_tls_quicState;

/* 601 */
typedef uint8 _12_uint8[12];

/* 604 */
typedef uint8 _13_uint8[13];

/* 595 */
typedef signed __int32 tls_QUICEncryptionLevel;

/* 602 */
struct tls_halfConn
{
  sync_Mutex Mutex;
  error err;
  uint16 version;
  interface_ cipher;
  hash_Hash mac;
  _8_uint8 seq;
  _13_uint8 scratchBuf;
  interface_ nextCipher;
  hash_Hash nextMac;
  tls_QUICEncryptionLevel level;
  _slice_uint8 trafficSecret;
};

/* 611 */
typedef signed __int8 bytes_readOp;

/* 605 */
struct __attribute__((aligned(4))) bytes_Buffer
{
  _slice_uint8 buf;
  signed __int32 off;
  bytes_readOp lastRead;
};

/* 613 */
struct bytes_Reader
{
  _slice_uint8 s;
  __attribute__((packed)) __attribute__((aligned(1))) int64 i;
  signed __int32 prevRune;
};

/* 584 */
struct __attribute__((packed)) __attribute__((aligned(4))) tls_Conn
{
  net_Conn conn;
  bool isClient;
  __attribute__((aligned(4))) PTR_funccontext_Context_error handshakeFn;
  _ptr_tls_quicState quic;
  atomic_Bool isHandshakeComplete;
  sync_Mutex handshakeMutex;
  error handshakeErr;
  uint16 vers;
  bool haveVers;
  __attribute__((aligned(2))) _ptr_tls_Config config;
  signed __int32 handshakes;
  bool extMasterSecret;
  bool didResume;
  bool didHRR;
  __attribute__((aligned(2))) uint16 cipherSuite;
  tls_CurveID curveID;
  _slice_uint8 ocspResponse;
  _slice__slice_uint8 scts;
  _slice__ptr_x509_Certificate peerCertificates;
  _slice__ptr_tls_activeCert activeCertHandles;
  _slice__slice__ptr_x509_Certificate verifiedChains;
  string serverName;
  bool secureRenegotiation;
  __attribute__((aligned(4))) PTR_funcstring_comma___slice_uint8_comma__int__slice_uint8_comma__error ekm;
  _slice_uint8 resumptionSecret;
  bool echAccepted;
  __attribute__((aligned(4))) _slice_tls_ticketKey ticketKeys;
  bool clientFinishedIsFirst;
  __attribute__((aligned(4))) error closeNotifyErr;
  bool closeNotifySent;
  _12_uint8 clientFinished;
  _12_uint8 serverFinished;
  __attribute__((aligned(4))) string clientProtocol;
  tls_halfConn in;
  tls_halfConn out;
  bytes_Buffer rawInput;
  bytes_Reader input;
  bytes_Buffer hand;
  bool buffering;
  __attribute__((aligned(4))) _slice_uint8 sendBuf;
  int64 bytesSent;
  int64 packetsSent;
  signed __int32 retryCount;
  atomic_Int32 activeCall;
  _16_uint8 tmp;
};

/* 590 */
struct _slice_tls_QUICEvent
{
  tls_QUICEvent *ptr;
  size_t len;
  size_t cap;
};

/* 593 */
typedef signed __int32 tls_QUICEventKind;

/* 591 */
struct tls_QUICEvent
{
  tls_QUICEventKind Kind;
  tls_QUICEncryptionLevel Level;
  _slice_uint8 Data;
  uint16 Suite;
  _ptr_tls_SessionState SessionState;
};

/* 597 */
typedef tls_QUICEvent _8_tls_QUICEvent[8];

/* 598 */
typedef void *chan_struct_;

/* 588 */
struct __attribute__((aligned(4))) tls_quicState
{
  _slice_tls_QUICEvent events;
  signed __int32 nextEvent;
  _8_tls_QUICEvent eventArr;
  bool started;
  chan_struct_ signalc;
  chan_struct_ blockedc;
  _chan_left_chan_struct_ cancelc;
  PTR_context_CancelFunc cancel;
  bool waitingForDrain;
  _slice_uint8 readbuf;
  _slice_uint8 transportParams;
  bool enableSessionEvents;
};

/* 586 */
typedef tls_ConnectionState (__gostk *PTR_func_tls_ConnectionState)();

/* 587 */
typedef error (__gostk *PTR_funcint_error)(signed __int32);

/* 592 */
typedef tls_QUICEvent *_ptr_tls_QUICEvent;

/* 594 */
typedef tls_QUICEventKind *_ptr_tls_QUICEventKind;

/* 596 */
typedef tls_QUICEncryptionLevel *_ptr_tls_QUICEncryptionLevel;

/* 600 */
typedef PTR_context_CancelFunc *_ptr_context_CancelFunc;

/* 603 */
typedef tls_halfConn *_ptr_tls_halfConn;

/* 606 */
typedef bytes_Buffer *_ptr_bytes_Buffer;

/* 608 */
struct retval_2CA080
{
  uint8 0;
  error 1;
};

/* 607 */
typedef retval_2CA080 (__gostk *PTR_func_uint8_comma__error)();

/* 610 */
struct retval_2CE210
{
  int64 0;
  error 1;
};

/* 609 */
typedef retval_2CE210 (__gostk *PTR_funcio_Writer_int64_comma__error)(io_Writer);

/* 612 */
typedef bytes_readOp *_ptr_bytes_readOp;

/* 614 */
typedef bytes_Reader *_ptr_bytes_Reader;

/* 616 */
struct retval_2CEF30
{
  int64 0;
  error 1;
};

/* 615 */
typedef retval_2CEF30 (__gostk *PTR_funcint64_comma__int_int64_comma__error)(int64, signed __int32);

/* 619 */
typedef PTR_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler _8_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler[8];

/* 617 */
struct map_bucket_string_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler
{
  _8_uint8 topbits;
  _8_string keys;
  _8_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler elems;
  unsafe_Pointer overflow;
};

/* 618 */
struct _slice_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler
{
  PTR_func_ptr_http_Server_comma___ptr_tls_Conn_comma__http_Handler *ptr;
  size_t len;
  size_t cap;
};

/* 622 */
typedef http_ConnState *_ptr_http_ConnState;

/* 626 */
typedef atomic_Pointer_string_ *_ptr_atomic_Pointer_string_;

/* 627 */
struct _slice__ptr_string
{
  _ptr_string *ptr;
  size_t len;
  size_t cap;
};

/* 632 */
struct retval_2CAA58
{
  net_Conn 0;
  error 1;
};

/* 631 */
typedef retval_2CAA58 (__gostk *PTR_func_net_Conn_comma__error)();

/* 633 */
typedef net_Listener *_ptr_net_Listener;

/* 636 */
typedef sync_Once *_ptr_sync_Once;

/* 638 */
typedef atomic_Uint32 *_ptr_atomic_Uint32;

/* 639 */
typedef uint32 (__gostk *PTR_func_uint32)();

/* 640 */
typedef void (__gostk *PTR_funcuint32)(uint32);

/* 644 */
typedef _ptr_net_Listener _8__ptr_net_Listener[8];

/* 646 */
typedef $8EF4127CF77ECA3DDB612FCF233DC3A8 _8_struct_[8];

/* 642 */
struct map_bucket__ptr_net_Listener_struct_
{
  _8_uint8 topbits;
  _8__ptr_net_Listener keys;
  _8_struct_ elems;
  unsafe_Pointer overflow;
};

/* 643 */
struct _slice__ptr_net_Listener
{
  _ptr_net_Listener *ptr;
  size_t len;
  size_t cap;
};

/* 645 */
struct _slice_struct_
{
  $8EF4127CF77ECA3DDB612FCF233DC3A8 *ptr;
  size_t len;
  size_t cap;
};

/* 650 */
typedef _ptr_http_conn _8__ptr_http_conn[8];

/* 648 */
struct map_bucket__ptr_http_conn_struct_
{
  _8_uint8 topbits;
  _8__ptr_http_conn keys;
  _8_struct_ elems;
  unsafe_Pointer overflow;
};

/* 649 */
struct _slice__ptr_http_conn
{
  _ptr_http_conn *ptr;
  size_t len;
  size_t cap;
};

/* 652 */
typedef sync_WaitGroup *_ptr_sync_WaitGroup;

/* 654 */
typedef sync_noCopy *_ptr_sync_noCopy;

/* 656 */
typedef atomic_Uint64 *_ptr_atomic_Uint64;

/* 663 */
typedef sync_Locker *_ptr_sync_Locker;

/* 665 */
typedef sync_notifyList *_ptr_sync_notifyList;

/* 667 */
typedef sync_copyChecker *_ptr_sync_copyChecker;

/* 673 */
typedef http_chunkWriter *_ptr_http_chunkWriter;

/* 678 */
struct _slice__ptr_http_response
{
  _ptr_http_response *ptr;
  size_t len;
  size_t cap;
};

/* 683 */
typedef os_dirInfo *_ptr_os_dirInfo;

/* 685 */
typedef _ptr_os_dirInfo _0__ptr_os_dirInfo[];

/* 680 */
struct atomic_Pointer_os_dirInfo_
{
  _0__ptr_os_dirInfo _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 682 */
struct os_dirInfo
{
  sync_Mutex mu;
  _ptr__slice_uint8 buf;
  signed __int32 nbuf;
  signed __int32 bufp;
};

/* 681 */
typedef atomic_Pointer_os_dirInfo_ *_ptr_atomic_Pointer_os_dirInfo_;

/* 684 */
struct _slice__ptr_os_dirInfo
{
  _ptr_os_dirInfo *ptr;
  size_t len;
  size_t cap;
};

/* 688 */
struct atomic_UnsafePointer
{
  atomic_noCopy_0 noCopy;
  unsafe_Pointer value;
};

/* 686 */
struct atomic_Pointer_runtime__defer_
{
  atomic_UnsafePointer u;
};

/* 687 */
typedef atomic_Pointer_runtime__defer_ *_ptr_atomic_Pointer_runtime__defer_;

/* 689 */
typedef atomic_UnsafePointer *_ptr_atomic_UnsafePointer;

/* 693 */
typedef sync_poolChainElt *_ptr_sync_poolChainElt;

/* 701 */
typedef _ptr_sync_poolChainElt _0__ptr_sync_poolChainElt[];

/* 690 */
struct atomic_Pointer_sync_poolChainElt_
{
  _0__ptr_sync_poolChainElt _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 697 */
struct _slice_sync_eface
{
  sync_eface *ptr;
  size_t len;
  size_t cap;
};

/* 695 */
struct __attribute__((aligned(8))) sync_poolDequeue
{
  atomic_Uint64 headTail;
  _slice_sync_eface vals;
};

/* 692 */
struct sync_poolChainElt
{
  sync_poolDequeue poolDequeue;
  atomic_Pointer_sync_poolChainElt_ next;
  atomic_Pointer_sync_poolChainElt_ prev;
};

/* 698 */
struct sync_eface
{
  unsafe_Pointer typ;
  unsafe_Pointer val;
};

/* 691 */
typedef atomic_Pointer_sync_poolChainElt_ *_ptr_atomic_Pointer_sync_poolChainElt_;

/* 694 */
typedef bool (__gostk *PTR_funcinterface__bool)(interface_);

/* 696 */
typedef sync_poolDequeue *_ptr_sync_poolDequeue;

/* 699 */
typedef sync_eface *_ptr_sync_eface;

/* 700 */
struct _slice__ptr_sync_poolChainElt
{
  _ptr_sync_poolChainElt *ptr;
  size_t len;
  size_t cap;
};

/* 705 */
typedef sync_readOnly *_ptr_sync_readOnly;

/* 714 */
typedef _ptr_sync_readOnly _0__ptr_sync_readOnly[];

/* 702 */
struct atomic_Pointer_sync_readOnly_
{
  _0__ptr_sync_readOnly _;
  atomic_noCopy __2;
  unsafe_Pointer v;
};

/* 706 */
typedef void *map_interface___ptr_sync_entry;

/* 704 */
struct __attribute__((aligned(4))) sync_readOnly
{
  map_interface___ptr_sync_entry m;
  bool amended;
};

/* 703 */
typedef atomic_Pointer_sync_readOnly_ *_ptr_atomic_Pointer_sync_readOnly_;

/* 707 */
struct sync_entry
{
  atomic_Pointer_interface__ p;
};

/* 708 */
typedef sync_entry *_ptr_sync_entry;

/* 710 */
typedef interface_ _8_interface_[8];

/* 712 */
typedef _ptr_sync_entry _8__ptr_sync_entry[8];

/* 709 */
struct map_bucket_interface___ptr_sync_entry
{
  _8_uint8 topbits;
  _8_interface_ keys;
  _8__ptr_sync_entry elems;
  unsafe_Pointer overflow;
};

/* 711 */
struct _slice__ptr_sync_entry
{
  _ptr_sync_entry *ptr;
  size_t len;
  size_t cap;
};

/* 713 */
struct _slice__ptr_sync_readOnly
{
  _ptr_sync_readOnly *ptr;
  size_t len;
  size_t cap;
};

/* 715 */
struct atomic_Uint32_0
{
  atomic_noCopy_0 noCopy;
  uint32 value;
};

/* 716 */
typedef atomic_Uint32_0 *_ptr_atomic_Uint32_0;

/* 717 */
struct atomic_Uint64_0
{
  atomic_noCopy_0 noCopy;
  atomic_align64_0 _;
  uint64 value;
};

/* 718 */
typedef atomic_Uint64_0 *_ptr_atomic_Uint64_0;

/* 719 */
struct atomic_Uintptr
{
  atomic_noCopy_0 noCopy;
  uintptr value;
};

/* 720 */
typedef atomic_Uintptr *_ptr_atomic_Uintptr;

/* 721 */
typedef void (__gostk *PTR_funcuintptr)(uintptr);

/* 722 */
struct atomic_Value
{
  interface_ v;
};

/* 723 */
typedef atomic_Value *_ptr_atomic_Value;

/* 724 */
typedef interface_ (__gostk *PTR_func_interface_)();

/* 725 */
typedef interface_ (__gostk *PTR_funcinterface__interface_)(interface_);

/* 726 */
typedef signed __int64 base64_CorruptInputError;

/* 727 */
typedef base64_CorruptInputError *_ptr_base64_CorruptInputError;

/* 730 */
typedef uint8 _64_uint8[64];

/* 731 */
typedef uint8 _256_uint8[256];

/* 728 */
struct __attribute__((aligned(4))) base64_Encoding
{
  _64_uint8 encode;
  _256_uint8 decodeMap;
  int32 padChar;
  bool strict;
};

/* 729 */
typedef base64_Encoding *_ptr_base64_Encoding;

/* 732 */
struct big_divisor
{
  big_nat bbb;
  signed __int32 nbits;
  signed __int32 ndigits;
};

/* 733 */
typedef big_divisor *_ptr_big_divisor;

/* 737 */
typedef bigmod_Nat *_ptr_bigmod_Nat;

/* 739 */
typedef unsigned __int32 uint_0;

/* 734 */
struct bigmod_Modulus
{
  _ptr_bigmod_Nat nat;
  signed __int32 leading;
  uint_0 m0inv;
  _ptr_bigmod_Nat rr;
};

/* 738 */
struct _slice_uint
{
  uint_0 *ptr;
  size_t len;
  size_t cap;
};

/* 736 */
struct bigmod_Nat
{
  _slice_uint limbs;
};

/* 735 */
typedef bigmod_Modulus *_ptr_bigmod_Modulus;

/* 740 */
typedef uint_0 *_ptr_uint;

/* 741 */
typedef BUILTIN_INTERFACE bisect_Writer;

/* 742 */
typedef bisect_Writer *_ptr_bisect_Writer;

/* 743 */
struct bisect_parseError
{
  string text;
};

/* 744 */
typedef bisect_parseError *_ptr_bisect_parseError;

/* 745 */
struct boring_PrivateKeyECDH
{
};

/* 746 */
typedef boring_PrivateKeyECDH *_ptr_boring_PrivateKeyECDH;

/* 747 */
struct boring_PublicKeyECDH
{
};

/* 748 */
typedef boring_PublicKeyECDH *_ptr_boring_PublicKeyECDH;

/* 749 */
struct chacha20poly1305_chacha20poly1305
{
  _32_uint8 key;
};

/* 750 */
typedef chacha20poly1305_chacha20poly1305 *_ptr_chacha20poly1305_chacha20poly1305;

/* 752 */
struct retval_2D1138
{
  _slice_uint8 0;
  error 1;
};

/* 751 */
typedef retval_2D1138 (__gostk *PTR_func_slice_uint8_comma___slice_uint8_comma___slice_uint8_comma___slice_uint8__slice_uint8_comma__error)(_slice_uint8, _slice_uint8, _slice_uint8, _slice_uint8);

/* 753 */
typedef _slice_uint8 (__gostk *PTR_func_slice_uint8_comma___slice_uint8_comma___slice_uint8_comma___slice_uint8__slice_uint8)(_slice_uint8, _slice_uint8, _slice_uint8, _slice_uint8);

/* 756 */
typedef uint64 _32_uint64[32];

/* 754 */
struct __attribute__((packed)) __attribute__((aligned(4))) chacha8rand_State
{
  _32_uint64 buf;
  _4_uint64 seed;
  uint32 i;
  uint32 n;
  uint32 c;
};

/* 755 */
typedef chacha8rand_State *_ptr_chacha8rand_State;

/* 757 */
typedef BUILTIN_INTERFACE cipher_AEAD;

/* 758 */
typedef cipher_AEAD *_ptr_cipher_AEAD;

/* 759 */
typedef BUILTIN_INTERFACE cipher_Block;

/* 760 */
typedef cipher_Block *_ptr_cipher_Block;

/* 761 */
typedef BUILTIN_INTERFACE cipher_BlockMode;

/* 762 */
typedef cipher_BlockMode *_ptr_cipher_BlockMode;

/* 763 */
typedef BUILTIN_INTERFACE cipher_Stream;

/* 764 */
typedef cipher_Stream *_ptr_cipher_Stream;

/* 765 */
struct cipher_cbc
{
  cipher_Block b;
  signed __int32 blockSize;
  _slice_uint8 iv;
  _slice_uint8 tmp;
};

/* 766 */
typedef cipher_cbc *_ptr_cipher_cbc;

/* 767 */
typedef BUILTIN_INTERFACE cipher_cbcDecAble;

/* 768 */
typedef cipher_BlockMode (__gostk *PTR_func_slice_uint8_cipher_BlockMode)(_slice_uint8);

/* 769 */
typedef cipher_cbcDecAble *_ptr_cipher_cbcDecAble;

/* 770 */
struct cipher_cbcDecrypter
{
  cipher_Block b;
  signed __int32 blockSize;
  _slice_uint8 iv;
  _slice_uint8 tmp;
};

/* 771 */
typedef cipher_cbcDecrypter *_ptr_cipher_cbcDecrypter;

/* 772 */
typedef BUILTIN_INTERFACE cipher_cbcEncAble;

/* 773 */
typedef cipher_cbcEncAble *_ptr_cipher_cbcEncAble;

/* 774 */
struct cipher_cbcEncrypter
{
  cipher_Block b;
  signed __int32 blockSize;
  _slice_uint8 iv;
  _slice_uint8 tmp;
};

/* 775 */
typedef cipher_cbcEncrypter *_ptr_cipher_cbcEncrypter;

/* 778 */
struct cipher_gcmFieldElement
{
  uint64 low;
  uint64 high;
};

/* 781 */
typedef cipher_gcmFieldElement _16_cipher_gcmFieldElement[16];

/* 776 */
struct cipher_gcm
{
  cipher_Block cipher;
  signed __int32 nonceSize;
  signed __int32 tagSize;
  _16_cipher_gcmFieldElement productTable;
};

/* 777 */
typedef cipher_gcm *_ptr_cipher_gcm;

/* 779 */
typedef cipher_gcmFieldElement *_ptr_cipher_gcmFieldElement;

/* 780 */
struct _slice_cipher_gcmFieldElement
{
  cipher_gcmFieldElement *ptr;
  size_t len;
  size_t cap;
};

/* 782 */
typedef BUILTIN_INTERFACE cipher_gcmAble;

/* 784 */
struct retval_2CF310
{
  cipher_AEAD 0;
  error 1;
};

/* 783 */
typedef retval_2CF310 (__gostk *PTR_funcint_comma__int_cipher_AEAD_comma__error)(signed __int32, signed __int32);

/* 785 */
typedef cipher_gcmAble *_ptr_cipher_gcmAble;

/* 786 */
struct complex128_t
{
  double real;
  double imag;
};

/* 787 */
typedef complex128_t complex128;

/* 788 */
typedef complex128 *_ptr_complex128;

/* 789 */
struct complex64_t
{
  float real;
  float imag;
};

/* 790 */
typedef complex64_t complex64;

/* 791 */
typedef complex64 *_ptr_complex64;

/* 796 */
typedef concurrent_indirect__ptr_internal_abi_Type_comma_interface__ *_ptr_concurrent_indirect__ptr_internal_abi_Type_comma_interface__;

/* 799 */
typedef uintptr (__gostk *PTR_concurrent_hashFunc)(unsafe_Pointer, uintptr);

/* 801 */
typedef bool (__gostk *PTR_concurrent_equalFunc)(unsafe_Pointer, unsafe_Pointer);

/* 792 */
struct concurrent_HashTrieMap__ptr_internal_abi_Type_comma_interface__
{
  _ptr_concurrent_indirect__ptr_internal_abi_Type_comma_interface__ root;
  PTR_concurrent_hashFunc keyHash;
  PTR_concurrent_equalFunc keyEqual;
  PTR_concurrent_equalFunc valEqual;
  uintptr seed;
};

/* 798 */
typedef atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___ _16_atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___[16];

/* 795 */
struct concurrent_indirect__ptr_internal_abi_Type_comma_interface__
{
  concurrent_node__ptr_internal_abi_Type_comma_interface__ node;
  atomic_Bool dead;
  sync_Mutex mu;
  _ptr_concurrent_indirect__ptr_internal_abi_Type_comma_interface__ parent;
  _16_atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___ children;
};

/* 793 */
typedef concurrent_HashTrieMap__ptr_internal_abi_Type_comma_interface__ *_ptr_concurrent_HashTrieMap__ptr_internal_abi_Type_comma_interface__;

/* 794 */
typedef bool (__gostk *PTR_func_ptr_abi_Type_comma__interface__bool)(_ptr_abi_Type, interface_);

/* 797 */
struct _slice_atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___
{
  atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___ *ptr;
  size_t len;
  size_t cap;
};

/* 800 */
typedef PTR_concurrent_hashFunc *_ptr_concurrent_hashFunc;

/* 802 */
typedef PTR_concurrent_equalFunc *_ptr_concurrent_equalFunc;

/* 806 */
typedef concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *_ptr_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;

/* 803 */
struct concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  _ptr_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ root;
  PTR_concurrent_hashFunc keyHash;
  PTR_concurrent_equalFunc keyEqual;
  PTR_concurrent_equalFunc valEqual;
  uintptr seed;
};

/* 808 */
typedef atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ _16_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__[16];

/* 805 */
struct concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ node;
  atomic_Bool dead;
  sync_Mutex mu;
  _ptr_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ parent;
  _16_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ children;
};

/* 804 */
typedef concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *_ptr_concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__;

/* 807 */
struct _slice_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__
{
  atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ *ptr;
  size_t len;
  size_t cap;
};

/* 812 */
typedef concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *_ptr_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;

/* 809 */
struct concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  _ptr_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ root;
  PTR_concurrent_hashFunc keyHash;
  PTR_concurrent_equalFunc keyEqual;
  PTR_concurrent_equalFunc valEqual;
  uintptr seed;
};

/* 811 */
struct concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ node;
  atomic_Bool dead;
  sync_Mutex mu;
  _ptr_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ parent;
  _16_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ children;
};

/* 810 */
typedef concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *_ptr_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__;

/* 817 */
typedef concurrent_indirect_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ *_ptr_concurrent_indirect_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__;

/* 813 */
struct concurrent_HashTrieMap_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  _ptr_concurrent_indirect_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ root;
  PTR_concurrent_hashFunc keyHash;
  PTR_concurrent_equalFunc keyEqual;
  PTR_concurrent_equalFunc valEqual;
  uintptr seed;
};

/* 819 */
typedef atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___ _16_atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___[16];

/* 816 */
struct concurrent_indirect_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ node;
  atomic_Bool dead;
  sync_Mutex mu;
  _ptr_concurrent_indirect_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ parent;
  _16_atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___ children;
};

/* 814 */
typedef concurrent_HashTrieMap_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ *_ptr_concurrent_HashTrieMap_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__;

/* 815 */
typedef bool (__gostk *PTR_funcnetip_addrDetail_comma__weak_Pointer_net_netip_addrDetail__bool)(netip_addrDetail, weak_Pointer_net_netip_addrDetail_);

/* 818 */
struct _slice_atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___
{
  atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___ *ptr;
  size_t len;
  size_t cap;
};

/* 820 */
typedef BUILTIN_INTERFACE context_afterFuncer;

/* 821 */
typedef PTR_func_bool (__gostk *PTR_funcfunc_func_bool)(PTR_func);

/* 822 */
typedef context_afterFuncer *_ptr_context_afterFuncer;

/* 825 */
struct context_emptyCtx
{
};

/* 823 */
struct context_backgroundCtx
{
  context_emptyCtx emptyCtx;
};

/* 824 */
typedef context_backgroundCtx *_ptr_context_backgroundCtx;

/* 826 */
typedef context_emptyCtx *_ptr_context_emptyCtx;

/* 830 */
typedef void *map_context_canceler_struct_;

/* 827 */
struct context_cancelCtx
{
  context_Context Context;
  sync_Mutex mu;
  atomic_Value done;
  map_context_canceler_struct_ children;
  error err;
  error cause;
};

/* 828 */
typedef context_cancelCtx *_ptr_context_cancelCtx;

/* 829 */
typedef void (__gostk *PTR_funcbool_comma__error_comma__error)(bool, error, error);

/* 831 */
typedef BUILTIN_INTERFACE context_canceler;

/* 832 */
typedef context_canceler *_ptr_context_canceler;

/* 835 */
typedef context_canceler _8_context_canceler[8];

/* 833 */
struct map_bucket_context_canceler_struct_
{
  _8_uint8 topbits;
  _8_context_canceler keys;
  _8_struct_ elems;
  unsafe_Pointer overflow;
};

/* 834 */
struct _slice_context_canceler
{
  context_canceler *ptr;
  size_t len;
  size_t cap;
};

/* 836 */
struct context_deadlineExceededError
{
};

/* 837 */
typedef context_deadlineExceededError *_ptr_context_deadlineExceededError;

/* 838 */
struct context_stopCtx
{
  context_Context Context;
  PTR_func_bool stop;
};

/* 839 */
typedef context_stopCtx *_ptr_context_stopCtx;

/* 840 */
typedef BUILTIN_INTERFACE context_stringer;

/* 841 */
typedef context_stringer *_ptr_context_stringer;

/* 845 */
typedef time_Timer *_ptr_time_Timer;

/* 842 */
struct context_timerCtx
{
  context_cancelCtx cancelCtx;
  _ptr_time_Timer timer;
  time_Time deadline;
};

/* 847 */
typedef void *_chan_left_chan_time_Time;

/* 844 */
struct __attribute__((aligned(4))) time_Timer
{
  _chan_left_chan_time_Time C;
  bool initTimer;
};

/* 843 */
typedef context_timerCtx *_ptr_context_timerCtx;

/* 846 */
typedef bool (__gostk *PTR_functime_Duration_bool)(time_Duration);

/* 848 */
struct context_todoCtx
{
  context_emptyCtx emptyCtx;
};

/* 849 */
typedef context_todoCtx *_ptr_context_todoCtx;

/* 850 */
struct context_valueCtx
{
  context_Context Context;
  interface_ key;
  interface_ val;
};

/* 851 */
typedef context_valueCtx *_ptr_context_valueCtx;

/* 852 */
struct context_withoutCancelCtx
{
  context_Context c;
};

/* 853 */
typedef context_withoutCancelCtx *_ptr_context_withoutCancelCtx;

/* 854 */
struct __attribute__((aligned(2))) cpu_option
{
  string Name;
  _ptr_bool Feature;
  bool Specified;
  bool Enable;
  bool Required;
};

/* 855 */
typedef cpu_option *_ptr_cpu_option;

/* 856 */
struct __attribute__((aligned(4))) cpu_option_0
{
  string Name;
  _ptr_bool Feature;
  bool Specified;
  bool Enable;
};

/* 857 */
typedef cpu_option_0 *_ptr_cpu_option_0;

/* 858 */
typedef uint32 crc32_Table[256];

/* 859 */
typedef crc32_Table *_ptr_crc32_Table;

/* 860 */
struct crc32_digest
{
  uint32 crc;
  _ptr_crc32_Table tab;
};

/* 861 */
typedef crc32_digest *_ptr_crc32_digest;

/* 862 */
struct _slice_crc32_Table
{
  crc32_Table *ptr;
  size_t len;
  size_t cap;
};

/* 863 */
typedef crc32_Table crc32_slicing8Table[8];

/* 864 */
typedef crc32_slicing8Table *_ptr_crc32_slicing8Table;

/* 865 */
typedef BUILTIN_INTERFACE crypto_PublicKey;

/* 866 */
typedef crypto_PublicKey *_ptr_crypto_PublicKey;

/* 867 */
typedef BUILTIN_INTERFACE crypto_Signer;

/* 868 */
typedef crypto_PublicKey (__gostk *PTR_func_crypto_PublicKey)();

/* 869 */
typedef crypto_Signer *_ptr_crypto_Signer;

/* 870 */
typedef BUILTIN_INTERFACE crypto_SignerOpts;

/* 871 */
typedef crypto_SignerOpts *_ptr_crypto_SignerOpts;

/* 872 */
struct cryptobyte_BuildError
{
  error Err;
};

/* 873 */
typedef cryptobyte_BuildError *_ptr_cryptobyte_BuildError;

/* 875 */
typedef cryptobyte_Builder *_ptr_cryptobyte_Builder;

/* 874 */
struct cryptobyte_Builder
{
  error err;
  _slice_uint8 result;
  bool fixedSize;
  _ptr_cryptobyte_Builder child;
  signed __int32 offset;
  signed __int32 pendingLenLen;
  bool pendingIsASN1;
  _ptr_bool inContinuation;
};

/* 876 */
typedef signed __int32 des_KeySizeError;

/* 877 */
typedef des_KeySizeError *_ptr_des_KeySizeError;

/* 880 */
typedef uint64 _16_uint64[16];

/* 878 */
struct des_desCipher
{
  _16_uint64 subkeys;
};

/* 879 */
typedef des_desCipher *_ptr_des_desCipher;

/* 881 */
struct des_tripleDESCipher
{
  des_desCipher cipher1;
  des_desCipher cipher2;
  des_desCipher cipher3;
};

/* 882 */
typedef des_tripleDESCipher *_ptr_des_tripleDESCipher;

/* 883 */
struct dnsmessage_AAAAResource
{
  _16_uint8 AAAA;
};

/* 884 */
typedef dnsmessage_AAAAResource *_ptr_dnsmessage_AAAAResource;

/* 887 */
typedef uint8 _4_uint8[4];

/* 885 */
struct dnsmessage_AResource
{
  _4_uint8 A;
};

/* 886 */
typedef dnsmessage_AResource *_ptr_dnsmessage_AResource;

/* 888 */
typedef unsigned __int16 dnsmessage_Class;

/* 889 */
typedef dnsmessage_Class *_ptr_dnsmessage_Class;

/* 892 */
struct dnsmessage_header
{
  uint16 id;
  uint16 bits;
  uint16 questions;
  uint16 answers;
  uint16 authorities;
  uint16 additionals;
};

/* 894 */
typedef unsigned __int8 dnsmessage_section;

/* 896 */
typedef unsigned __int16 dnsmessage_Type;

/* 890 */
struct dnsmessage_Parser
{
  _slice_uint8 msg;
  dnsmessage_header header;
  dnsmessage_section section;
  signed __int32 off;
  signed __int32 index;
  bool resHeaderValid;
  signed __int32 resHeaderOffset;
  dnsmessage_Type resHeaderType;
  uint16 resHeaderLength;
};

/* 891 */
typedef dnsmessage_Parser *_ptr_dnsmessage_Parser;

/* 893 */
typedef dnsmessage_header *_ptr_dnsmessage_header;

/* 895 */
typedef dnsmessage_section *_ptr_dnsmessage_section;

/* 897 */
typedef dnsmessage_Type *_ptr_dnsmessage_Type;

/* 898 */
typedef unsigned __int16 dnsmessage_RCode;

/* 899 */
typedef dnsmessage_RCode *_ptr_dnsmessage_RCode;

/* 900 */
struct dnsmessage_nestedError
{
  string s;
  error err;
};

/* 901 */
typedef dnsmessage_nestedError *_ptr_dnsmessage_nestedError;

/* 902 */
struct dsa_Parameters
{
  _ptr_big_Int P;
  _ptr_big_Int Q;
  _ptr_big_Int G;
};

/* 903 */
typedef dsa_Parameters *_ptr_dsa_Parameters;

/* 904 */
struct dsa_PublicKey
{
  dsa_Parameters Parameters;
  _ptr_big_Int Y;
};

/* 905 */
typedef dsa_PublicKey *_ptr_dsa_PublicKey;

/* 906 */
typedef BUILTIN_INTERFACE ecdh_Curve;

/* 909 */
typedef ecdh_PrivateKey *_ptr_ecdh_PrivateKey;

/* 913 */
struct retval_2CE7E0
{
  _ptr_ecdh_PrivateKey 0;
  error 1;
};

/* 907 */
typedef retval_2CE7E0 (__gostk *PTR_funcio_Reader__ptr_ecdh_PrivateKey_comma__error)(io_Reader);

/* 911 */
typedef ecdh_PublicKey *_ptr_ecdh_PublicKey;

/* 908 */
struct ecdh_PrivateKey
{
  ecdh_Curve curve;
  _slice_uint8 privateKey;
  _ptr_boring_PrivateKeyECDH boring;
  _ptr_ecdh_PublicKey publicKey;
  sync_Once publicKeyOnce;
};

/* 910 */
struct ecdh_PublicKey
{
  ecdh_Curve curve;
  _slice_uint8 publicKey;
  _ptr_boring_PublicKeyECDH boring;
};

/* 912 */
typedef bool (__gostk *PTR_funccrypto_PublicKey_bool)(crypto_PublicKey);

/* 915 */
struct retval_2CE810
{
  _ptr_ecdh_PrivateKey 0;
  error 1;
};

/* 914 */
typedef retval_2CE810 (__gostk *PTR_func_slice_uint8__ptr_ecdh_PrivateKey_comma__error)(_slice_uint8);

/* 917 */
struct retval_2CE840
{
  _ptr_ecdh_PublicKey 0;
  error 1;
};

/* 916 */
typedef retval_2CE840 (__gostk *PTR_func_slice_uint8__ptr_ecdh_PublicKey_comma__error)(_slice_uint8);

/* 918 */
typedef ecdh_Curve *_ptr_ecdh_Curve;

/* 926 */
typedef nistec_P256Point *_ptr_nistec_P256Point;

/* 924 */
typedef _ptr_nistec_P256Point (__gostk *PTR_func__ptr_nistec_P256Point)();

/* 919 */
struct ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_
{
  string name;
  PTR_func__ptr_nistec_P256Point newPoint;
  _slice_uint8 scalarOrder;
};

/* 928 */
typedef fiat_P256Element *_ptr_fiat_P256Element;

/* 925 */
struct nistec_P256Point
{
  _ptr_fiat_P256Element x;
  _ptr_fiat_P256Element y;
  _ptr_fiat_P256Element z;
};

/* 929 */
typedef uint64 fiat_p256MontgomeryDomainFieldElement[4];

/* 927 */
struct fiat_P256Element
{
  fiat_p256MontgomeryDomainFieldElement x;
};

/* 920 */
typedef ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_ *_ptr_ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_;

/* 922 */
struct retval_2CF1C0
{
  _slice_uint8 0;
  error 1;
};

/* 921 */
typedef retval_2CF1C0 (__gostk *PTR_func_ptr_ecdh_PrivateKey_comma___ptr_ecdh_PublicKey__slice_uint8_comma__error)(_ptr_ecdh_PrivateKey, _ptr_ecdh_PublicKey);

/* 923 */
typedef _ptr_ecdh_PublicKey (__gostk *PTR_func_ptr_ecdh_PrivateKey__ptr_ecdh_PublicKey)(_ptr_ecdh_PrivateKey);

/* 930 */
typedef fiat_p256MontgomeryDomainFieldElement *_ptr_fiat_p256MontgomeryDomainFieldElement;

/* 935 */
typedef nistec_P384Point *_ptr_nistec_P384Point;

/* 933 */
typedef _ptr_nistec_P384Point (__gostk *PTR_func__ptr_nistec_P384Point)();

/* 931 */
struct ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_
{
  string name;
  PTR_func__ptr_nistec_P384Point newPoint;
  _slice_uint8 scalarOrder;
};

/* 937 */
typedef fiat_P384Element *_ptr_fiat_P384Element;

/* 934 */
struct nistec_P384Point
{
  _ptr_fiat_P384Element x;
  _ptr_fiat_P384Element y;
  _ptr_fiat_P384Element z;
};

/* 938 */
typedef uint64 fiat_p384MontgomeryDomainFieldElement[6];

/* 936 */
struct fiat_P384Element
{
  fiat_p384MontgomeryDomainFieldElement x;
};

/* 932 */
typedef ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_ *_ptr_ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_;

/* 939 */
typedef fiat_p384MontgomeryDomainFieldElement *_ptr_fiat_p384MontgomeryDomainFieldElement;

/* 944 */
typedef nistec_P521Point *_ptr_nistec_P521Point;

/* 942 */
typedef _ptr_nistec_P521Point (__gostk *PTR_func__ptr_nistec_P521Point)();

/* 940 */
struct ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_
{
  string name;
  PTR_func__ptr_nistec_P521Point newPoint;
  _slice_uint8 scalarOrder;
};

/* 946 */
typedef fiat_P521Element *_ptr_fiat_P521Element;

/* 943 */
struct nistec_P521Point
{
  _ptr_fiat_P521Element x;
  _ptr_fiat_P521Element y;
  _ptr_fiat_P521Element z;
};

/* 947 */
typedef uint64 fiat_p521MontgomeryDomainFieldElement[9];

/* 945 */
struct fiat_P521Element
{
  fiat_p521MontgomeryDomainFieldElement x;
};

/* 941 */
typedef ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_ *_ptr_ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_;

/* 948 */
typedef fiat_p521MontgomeryDomainFieldElement *_ptr_fiat_p521MontgomeryDomainFieldElement;

/* 949 */
struct ecdh_x25519Curve
{
};

/* 950 */
typedef ecdh_x25519Curve *_ptr_ecdh_x25519Curve;

/* 969 */
typedef BUILTIN_INTERFACE elliptic_Curve;

/* 967 */
struct ecdsa_PublicKey
{
  elliptic_Curve Curve;
  _ptr_big_Int X;
  _ptr_big_Int Y;
};

/* 951 */
struct ecdsa_PrivateKey
{
  ecdsa_PublicKey PublicKey;
  _ptr_big_Int D;
};

/* 952 */
typedef ecdsa_PrivateKey *_ptr_ecdsa_PrivateKey;

/* 954 */
struct retval_2D1278
{
  _ptr_big_Int 0;
  _ptr_big_Int 1;
};

/* 953 */
typedef retval_2D1278 (__gostk *PTR_func_ptr_big_Int_comma___ptr_big_Int_comma___ptr_big_Int_comma___ptr_big_Int__ptr_big_Int_comma___ptr_big_Int)(_ptr_big_Int, _ptr_big_Int, _ptr_big_Int, _ptr_big_Int);

/* 956 */
struct retval_2CF188
{
  _ptr_big_Int 0;
  _ptr_big_Int 1;
};

/* 955 */
typedef retval_2CF188 (__gostk *PTR_func_ptr_big_Int_comma___ptr_big_Int__ptr_big_Int_comma___ptr_big_Int)(_ptr_big_Int, _ptr_big_Int);

/* 957 */
typedef bool (__gostk *PTR_func_ptr_big_Int_comma___ptr_big_Int_bool)(_ptr_big_Int, _ptr_big_Int);

/* 960 */
typedef elliptic_CurveParams *_ptr_elliptic_CurveParams;

/* 958 */
typedef _ptr_elliptic_CurveParams (__gostk *PTR_func__ptr_elliptic_CurveParams)();

/* 959 */
struct elliptic_CurveParams
{
  _ptr_big_Int P;
  _ptr_big_Int N;
  _ptr_big_Int B;
  _ptr_big_Int Gx;
  _ptr_big_Int Gy;
  signed __int32 BitSize;
  string Name;
};

/* 962 */
struct retval_2CE7B0
{
  _ptr_big_Int 0;
  _ptr_big_Int 1;
};

/* 961 */
typedef retval_2CE7B0 (__gostk *PTR_func_slice_uint8__ptr_big_Int_comma___ptr_big_Int)(_slice_uint8);

/* 964 */
struct retval_2D00E8
{
  _ptr_big_Int 0;
  _ptr_big_Int 1;
};

/* 963 */
typedef retval_2D00E8 (__gostk *PTR_func_ptr_big_Int_comma___ptr_big_Int_comma___slice_uint8__ptr_big_Int_comma___ptr_big_Int)(_ptr_big_Int, _ptr_big_Int, _slice_uint8);

/* 966 */
struct retval_2D0628
{
  _slice_uint8 0;
  error 1;
};

/* 965 */
typedef retval_2D0628 (__gostk *PTR_funcio_Reader_comma___slice_uint8_comma__crypto_SignerOpts__slice_uint8_comma__error)(io_Reader, _slice_uint8, crypto_SignerOpts);

/* 968 */
typedef ecdsa_PublicKey *_ptr_ecdsa_PublicKey;

/* 970 */
typedef elliptic_Curve *_ptr_elliptic_Curve;

/* 975 */
typedef nistec_P224Point *_ptr_nistec_P224Point;

/* 973 */
typedef _ptr_nistec_P224Point (__gostk *PTR_func__ptr_nistec_P224Point)();

/* 971 */
struct ecdsa_nistCurve__ptr_crypto_internal_nistec_P224Point_
{
  PTR_func__ptr_nistec_P224Point newPoint;
  elliptic_Curve curve;
  _ptr_bigmod_Modulus N;
  _slice_uint8 nMinus2;
};

/* 977 */
typedef fiat_P224Element *_ptr_fiat_P224Element;

/* 974 */
struct nistec_P224Point
{
  _ptr_fiat_P224Element x;
  _ptr_fiat_P224Element y;
  _ptr_fiat_P224Element z;
};

/* 978 */
typedef uint64 fiat_p224MontgomeryDomainFieldElement[4];

/* 976 */
struct fiat_P224Element
{
  fiat_p224MontgomeryDomainFieldElement x;
};

/* 972 */
typedef ecdsa_nistCurve__ptr_crypto_internal_nistec_P224Point_ *_ptr_ecdsa_nistCurve__ptr_crypto_internal_nistec_P224Point_;

/* 979 */
typedef fiat_p224MontgomeryDomainFieldElement *_ptr_fiat_p224MontgomeryDomainFieldElement;

/* 980 */
struct ecdsa_nistCurve__ptr_crypto_internal_nistec_P256Point_
{
  PTR_func__ptr_nistec_P256Point newPoint;
  elliptic_Curve curve;
  _ptr_bigmod_Modulus N;
  _slice_uint8 nMinus2;
};

/* 981 */
typedef ecdsa_nistCurve__ptr_crypto_internal_nistec_P256Point_ *_ptr_ecdsa_nistCurve__ptr_crypto_internal_nistec_P256Point_;

/* 982 */
struct ecdsa_nistCurve__ptr_crypto_internal_nistec_P384Point_
{
  PTR_func__ptr_nistec_P384Point newPoint;
  elliptic_Curve curve;
  _ptr_bigmod_Modulus N;
  _slice_uint8 nMinus2;
};

/* 983 */
typedef ecdsa_nistCurve__ptr_crypto_internal_nistec_P384Point_ *_ptr_ecdsa_nistCurve__ptr_crypto_internal_nistec_P384Point_;

/* 984 */
struct ecdsa_nistCurve__ptr_crypto_internal_nistec_P521Point_
{
  PTR_func__ptr_nistec_P521Point newPoint;
  elliptic_Curve curve;
  _ptr_bigmod_Modulus N;
  _slice_uint8 nMinus2;
};

/* 985 */
typedef ecdsa_nistCurve__ptr_crypto_internal_nistec_P521Point_ *_ptr_ecdsa_nistCurve__ptr_crypto_internal_nistec_P521Point_;

/* 986 */
struct ed25519_PrivateKey
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 987 */
typedef ed25519_PrivateKey *_ptr_ed25519_PrivateKey;

/* 988 */
struct ed25519_PublicKey
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 989 */
typedef ed25519_PublicKey *_ptr_ed25519_PublicKey;

/* 992 */
typedef PTR_func edwards25519_incomparable[];

/* 994 */
struct field_Element
{
  uint64 l0;
  uint64 l1;
  uint64 l2;
  uint64 l3;
  uint64 l4;
};

/* 990 */
struct edwards25519_Point
{
  edwards25519_incomparable _;
  field_Element x;
  field_Element y;
  field_Element z;
  field_Element t;
};

/* 991 */
typedef edwards25519_Point *_ptr_edwards25519_Point;

/* 993 */
typedef edwards25519_incomparable *_ptr_edwards25519_incomparable;

/* 995 */
typedef field_Element *_ptr_field_Element;

/* 996 */
struct elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_
{
  PTR_func__ptr_nistec_P224Point newPoint;
  _ptr_elliptic_CurveParams params;
};

/* 997 */
typedef elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_ *_ptr_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_;

/* 998 */
struct elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_
{
  PTR_func__ptr_nistec_P256Point newPoint;
  _ptr_elliptic_CurveParams params;
};

/* 999 */
typedef elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ *_ptr_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_;

/* 1000 */
struct elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_
{
  PTR_func__ptr_nistec_P384Point newPoint;
  _ptr_elliptic_CurveParams params;
};

/* 1001 */
typedef elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_ *_ptr_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_;

/* 1002 */
struct elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_
{
  PTR_func__ptr_nistec_P521Point newPoint;
  _ptr_elliptic_CurveParams params;
};

/* 1003 */
typedef elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_ *_ptr_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_;

/* 1004 */
struct elliptic_p256Curve
{
  elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ nistCurve;
};

/* 1005 */
typedef elliptic_p256Curve *_ptr_elliptic_p256Curve;

/* 1006 */
typedef BUILTIN_INTERFACE elliptic_unmarshaler;

/* 1007 */
typedef elliptic_unmarshaler *_ptr_elliptic_unmarshaler;

/* 1008 */
struct errors_errorString
{
  string s;
};

/* 1009 */
typedef errors_errorString *_ptr_errors_errorString;

/* 1014 */
typedef os_File *_ptr_os_File;

/* 1012 */
struct _slice__ptr_os_File
{
  _ptr_os_File *ptr;
  size_t len;
  size_t cap;
};

/* 1048 */
typedef syscall_SysProcAttr *_ptr_syscall_SysProcAttr;

/* 1057 */
typedef os_Process *_ptr_os_Process;

/* 1061 */
typedef os_ProcessState *_ptr_os_ProcessState;

/* 1069 */
typedef BUILTIN_INTERFACE io_Closer;

/* 1068 */
struct _slice_io_Closer
{
  io_Closer *ptr;
  size_t len;
  size_t cap;
};

/* 1071 */
struct _slice_func_error
{
  PTR_func_error *ptr;
  size_t len;
  size_t cap;
};

/* 1072 */
typedef void *_chan_left_chan_error;

/* 1073 */
typedef void *_chan_left_chan_exec_ctxResult;

/* 1076 */
struct $5587F0FBB2631140503F6B6E0F5CD7B3
{
  string in;
  string out;
};

/* 1010 */
struct __attribute__((packed)) __attribute__((aligned(4))) exec_Cmd
{
  string Path;
  _slice_string Args;
  _slice_string Env;
  string Dir;
  io_Reader Stdin;
  io_Writer Stdout;
  io_Writer Stderr;
  _slice__ptr_os_File ExtraFiles;
  _ptr_syscall_SysProcAttr SysProcAttr;
  _ptr_os_Process Process;
  _ptr_os_ProcessState ProcessState;
  context_Context ctx;
  error Err;
  PTR_func_error Cancel;
  time_Duration WaitDelay;
  _slice_io_Closer childIOFiles;
  _slice_io_Closer parentIOPipes;
  _slice_func_error goroutine;
  _chan_left_chan_error goroutineErr;
  _chan_left_chan_exec_ctxResult ctxResult;
  _slice_uint8 createdByStack;
  error lookPathErr;
  $5587F0FBB2631140503F6B6E0F5CD7B3 cachedLookExtensions;
};

/* 1038 */
typedef os_file *_ptr_os_file;

/* 1013 */
struct os_File
{
  _ptr_os_file file;
};

/* 1050 */
typedef syscall_Credential *_ptr_syscall_Credential;

/* 1051 */
typedef signed __int32 syscall_Signal;

/* 1053 */
struct _slice_syscall_SysProcIDMap
{
  syscall_SysProcIDMap *ptr;
  size_t len;
  size_t cap;
};

/* 1047 */
struct syscall_SysProcAttr
{
  string Chroot;
  _ptr_syscall_Credential Credential;
  bool Ptrace;
  bool Setsid;
  bool Setpgid;
  bool Setctty;
  bool Noctty;
  signed __int32 Ctty;
  bool Foreground;
  signed __int32 Pgid;
  syscall_Signal Pdeathsig;
  uintptr Cloneflags;
  uintptr Unshareflags;
  _slice_syscall_SysProcIDMap UidMappings;
  _slice_syscall_SysProcIDMap GidMappings;
  bool GidMappingsEnableSetgroups;
  _slice_uintptr AmbientCaps;
  bool UseCgroupFD;
  signed __int32 CgroupFD;
  _ptr_int PidFD;
};

/* 1058 */
typedef unsigned __int8 os_processMode;

/* 1056 */
struct __attribute__((aligned(8))) os_Process
{
  signed __int32 Pid;
  os_processMode mode;
  atomic_Uint64 state;
  sync_RWMutex sigMu;
  uintptr handle;
};

/* 1062 */
typedef unsigned __int32 syscall_WaitStatus;

/* 1065 */
typedef syscall_Rusage *_ptr_syscall_Rusage;

/* 1060 */
struct os_ProcessState
{
  signed __int32 pid;
  syscall_WaitStatus status;
  _ptr_syscall_Rusage rusage;
};

/* 1041 */
struct poll_fdMutex
{
  uint64 state;
  uint32 rsema;
  uint32 wsema;
};

/* 1043 */
struct poll_SysFile
{
  _ptr__slice_syscall_Iovec iovecs;
};

/* 1045 */
struct poll_pollDesc
{
  uintptr runtimeCtx;
};

/* 1039 */
struct __attribute__((aligned(2))) poll_FD
{
  poll_fdMutex fdmu;
  signed __int32 Sysfd;
  poll_SysFile SysFile;
  poll_pollDesc pd;
  uint32 csema;
  uint32 isBlocking;
  bool IsStream;
  bool ZeroReadIsEOF;
  bool isFile;
};

/* 1037 */
struct __attribute__((aligned(2))) os_file
{
  poll_FD pfd;
  string name;
  atomic_Pointer_os_dirInfo_ dirinfo;
  bool nonblock;
  bool stdoutOrErr;
  bool appendMode;
};

/* 1049 */
struct __attribute__((aligned(4))) syscall_Credential
{
  uint32 Uid;
  uint32 Gid;
  _slice_uint32 Groups;
  bool NoSetGroups;
};

/* 1054 */
struct syscall_SysProcIDMap
{
  signed __int32 ContainerID;
  signed __int32 HostID;
  signed __int32 Size;
};

/* 1066 */
struct syscall_Timeval
{
  int32 Sec;
  int32 Usec;
};

/* 1064 */
struct syscall_Rusage
{
  syscall_Timeval Utime;
  syscall_Timeval Stime;
  int32 Maxrss;
  int32 Ixrss;
  int32 Idrss;
  int32 Isrss;
  int32 Minflt;
  int32 Majflt;
  int32 Nswap;
  int32 Inblock;
  int32 Oublock;
  int32 Msgsnd;
  int32 Msgrcv;
  int32 Nsignals;
  int32 Nvcsw;
  int32 Nivcsw;
};

/* 1011 */
typedef exec_Cmd *_ptr_exec_Cmd;

/* 1017 */
typedef BUILTIN_INTERFACE fs_DirEntry;

/* 1016 */
struct _slice_fs_DirEntry
{
  fs_DirEntry *ptr;
  size_t len;
  size_t cap;
};

/* 1026 */
struct retval_2CE150
{
  _slice_fs_DirEntry 0;
  error 1;
};

/* 1015 */
typedef retval_2CE150 (__gostk *PTR_funcint__slice_fs_DirEntry_comma__error)(signed __int32);

/* 1019 */
typedef BUILTIN_INTERFACE fs_FileInfo;

/* 1024 */
struct retval_2C9B40
{
  fs_FileInfo 0;
  error 1;
};

/* 1018 */
typedef retval_2C9B40 (__gostk *PTR_func_fs_FileInfo_comma__error)();

/* 1021 */
typedef unsigned __int32 fs_FileMode;

/* 1020 */
typedef fs_FileMode (__gostk *PTR_func_fs_FileMode)();

/* 1022 */
typedef fs_FileMode *_ptr_fs_FileMode;

/* 1023 */
typedef fs_FileInfo *_ptr_fs_FileInfo;

/* 1025 */
typedef fs_DirEntry *_ptr_fs_DirEntry;

/* 1028 */
struct _slice_fs_FileInfo
{
  fs_FileInfo *ptr;
  size_t len;
  size_t cap;
};

/* 1029 */
struct retval_2CE3F0
{
  _slice_fs_FileInfo 0;
  error 1;
};

/* 1027 */
typedef retval_2CE3F0 (__gostk *PTR_funcint__slice_fs_FileInfo_comma__error)(signed __int32);

/* 1031 */
typedef BUILTIN_INTERFACE syscall_RawConn;

/* 1036 */
struct retval_2CADE8
{
  syscall_RawConn 0;
  error 1;
};

/* 1030 */
typedef retval_2CADE8 (__gostk *PTR_func_syscall_RawConn_comma__error)();

/* 1032 */
typedef error (__gostk *PTR_funcfuncuintptr_error)(PTR_funcuintptr);

/* 1034 */
typedef bool (__gostk *PTR_funcuintptr_bool)(uintptr);

/* 1033 */
typedef error (__gostk *PTR_funcfuncuintptr_bool_error)(PTR_funcuintptr_bool);

/* 1035 */
typedef syscall_RawConn *_ptr_syscall_RawConn;

/* 1040 */
typedef poll_FD *_ptr_poll_FD;

/* 1042 */
typedef poll_fdMutex *_ptr_poll_fdMutex;

/* 1044 */
typedef poll_SysFile *_ptr_poll_SysFile;

/* 1046 */
typedef poll_pollDesc *_ptr_poll_pollDesc;

/* 1052 */
typedef syscall_Signal *_ptr_syscall_Signal;

/* 1055 */
typedef syscall_SysProcIDMap *_ptr_syscall_SysProcIDMap;

/* 1059 */
typedef os_processMode *_ptr_os_processMode;

/* 1063 */
typedef syscall_WaitStatus *_ptr_syscall_WaitStatus;

/* 1067 */
typedef syscall_Timeval *_ptr_syscall_Timeval;

/* 1070 */
typedef io_Closer *_ptr_io_Closer;

/* 1074 */
struct exec_ctxResult
{
  error err;
  _ptr_time_Timer timer;
};

/* 1075 */
typedef exec_ctxResult *_ptr_exec_ctxResult;

/* 1077 */
struct exec_Error
{
  string Name;
  error Err;
};

/* 1078 */
typedef exec_Error *_ptr_exec_Error;

/* 1079 */
struct exec_ExitError
{
  _ptr_os_ProcessState ProcessState;
  _slice_uint8 Stderr;
};

/* 1080 */
typedef exec_ExitError *_ptr_exec_ExitError;

/* 1081 */
struct exec_goroutineStatus
{
  signed __int32 running;
  error firstErr;
};

/* 1082 */
typedef exec_goroutineStatus *_ptr_exec_goroutineStatus;

/* 1083 */
struct exec_prefixSuffixSaver
{
  signed __int32 N;
  _slice_uint8 prefix;
  _slice_uint8 suffix;
  signed __int32 suffixOff;
  int64 skipped;
};

/* 1084 */
typedef exec_prefixSuffixSaver *_ptr_exec_prefixSuffixSaver;

/* 1085 */
struct exec_wrappedError
{
  string prefix;
  error err;
};

/* 1086 */
typedef exec_wrappedError *_ptr_exec_wrappedError;

/* 1087 */
typedef signed __int64 flate_CorruptInputError;

/* 1088 */
typedef flate_CorruptInputError *_ptr_flate_CorruptInputError;

/* 1089 */
typedef BUILTIN_STRING flate_InternalError;

/* 1090 */
typedef flate_InternalError *_ptr_flate_InternalError;

/* 1091 */
typedef BUILTIN_INTERFACE flate_Reader;

/* 1092 */
typedef flate_Reader *_ptr_flate_Reader;

/* 1093 */
typedef BUILTIN_INTERFACE flate_Resetter;

/* 1094 */
typedef error (__gostk *PTR_funcio_Reader_comma___slice_uint8_error)(io_Reader, _slice_uint8);

/* 1095 */
typedef flate_Resetter *_ptr_flate_Resetter;

/* 1100 */
struct flate_compressionLevel
{
  signed __int32 level;
  signed __int32 good;
  signed __int32 lazy;
  signed __int32 nice;
  signed __int32 chain;
  signed __int32 fastSkipHashing;
};

/* 1103 */
typedef flate_huffmanBitWriter *_ptr_flate_huffmanBitWriter;

/* 1121 */
typedef void (__gostk *PTR_func_slice_uint8_comma___slice_uint32)(_slice_uint8, _slice_uint32);

/* 1099 */
typedef flate_compressor *_ptr_flate_compressor;

/* 1122 */
typedef signed __int32 (__gostk *PTR_func_ptr_flate_compressor_comma___slice_uint8_int)(_ptr_flate_compressor, _slice_uint8);

/* 1123 */
typedef void (__gostk *PTR_func_ptr_flate_compressor)(_ptr_flate_compressor);

/* 1125 */
typedef flate_deflateFast *_ptr_flate_deflateFast;

/* 1130 */
typedef uint32 _131072_uint32[131072];

/* 1131 */
typedef uint32 _32768_uint32[32768];

/* 1133 */
typedef unsigned __int32 flate_token;

/* 1132 */
struct _slice_flate_token
{
  flate_token *ptr;
  size_t len;
  size_t cap;
};

/* 1135 */
typedef uint32 _257_uint32[257];

/* 1098 */
struct flate_compressor
{
  flate_compressionLevel compressionLevel;
  _ptr_flate_huffmanBitWriter w;
  PTR_func_slice_uint8_comma___slice_uint32 bulkHasher;
  PTR_func_ptr_flate_compressor_comma___slice_uint8_int fill;
  PTR_func_ptr_flate_compressor step;
  _ptr_flate_deflateFast bestSpeed;
  signed __int32 chainHead;
  _131072_uint32 hashHead;
  _32768_uint32 hashPrev;
  signed __int32 hashOffset;
  signed __int32 index;
  _slice_uint8 window;
  signed __int32 windowEnd;
  signed __int32 blockStart;
  bool byteAvailable;
  bool sync;
  _slice_flate_token tokens;
  signed __int32 length;
  signed __int32 offset;
  signed __int32 maxInsertIndex;
  error err;
  _257_uint32 hashMatch;
};

/* 1096 */
struct flate_Writer
{
  flate_compressor d;
  _slice_uint8 dict;
};

/* 1104 */
typedef uint8 _248_uint8[248];

/* 1106 */
typedef int32 _19_int32[19];

/* 1105 */
struct _slice_int32
{
  int32 *ptr;
  size_t len;
  size_t cap;
};

/* 1108 */
typedef flate_huffmanEncoder *_ptr_flate_huffmanEncoder;

/* 1102 */
struct __attribute__((packed)) __attribute__((aligned(4))) flate_huffmanBitWriter
{
  io_Writer writer;
  uint64 bits;
  uint_0 nbits;
  _248_uint8 bytes;
  _19_int32 codegenFreq;
  signed __int32 nbytes;
  _slice_int32 literalFreq;
  _slice_int32 offsetFreq;
  _slice_uint8 codegen;
  _ptr_flate_huffmanEncoder literalEncoding;
  _ptr_flate_huffmanEncoder offsetEncoding;
  _ptr_flate_huffmanEncoder codegenEncoding;
  error err;
};

/* 1126 */
struct flate_tableEntry
{
  uint32 val;
  int32 offset;
};

/* 1129 */
typedef flate_tableEntry _16384_flate_tableEntry[16384];

/* 1124 */
struct flate_deflateFast
{
  _16384_flate_tableEntry table;
  _slice_uint8 prev;
  int32 cur;
};

/* 1109 */
struct _slice_flate_hcode
{
  flate_hcode *ptr;
  size_t len;
  size_t cap;
};

/* 1112 */
struct _slice_flate_literalNode
{
  flate_literalNode *ptr;
  size_t len;
  size_t cap;
};

/* 1115 */
typedef int32 _17_int32[17];

/* 1116 */
struct flate_byLiteral
{
  flate_literalNode *ptr;
  size_t len;
  size_t cap;
};

/* 1119 */
struct flate_byFreq
{
  flate_literalNode *ptr;
  size_t len;
  size_t cap;
};

/* 1107 */
struct flate_huffmanEncoder
{
  _slice_flate_hcode codes;
  _slice_flate_literalNode freqcache;
  _17_int32 bitCount;
  flate_byLiteral lns;
  flate_byFreq lfs;
};

/* 1110 */
struct flate_hcode
{
  uint16 code;
  uint16 len;
};

/* 1113 */
struct flate_literalNode
{
  uint16 literal;
  int32 freq;
};

/* 1097 */
typedef flate_Writer *_ptr_flate_Writer;

/* 1101 */
typedef flate_compressionLevel *_ptr_flate_compressionLevel;

/* 1111 */
typedef flate_hcode *_ptr_flate_hcode;

/* 1114 */
typedef flate_literalNode *_ptr_flate_literalNode;

/* 1117 */
typedef void (__gostk *PTR_funcint_comma__int)(signed __int32, signed __int32);

/* 1118 */
typedef flate_byLiteral *_ptr_flate_byLiteral;

/* 1120 */
typedef flate_byFreq *_ptr_flate_byFreq;

/* 1127 */
typedef flate_tableEntry *_ptr_flate_tableEntry;

/* 1128 */
struct _slice_flate_tableEntry
{
  flate_tableEntry *ptr;
  size_t len;
  size_t cap;
};

/* 1134 */
typedef flate_token *_ptr_flate_token;

/* 1140 */
typedef uint32 _512_uint32[512];

/* 1141 */
struct _slice__slice_uint32
{
  _slice_uint32 *ptr;
  size_t len;
  size_t cap;
};

/* 1138 */
struct flate_huffmanDecoder
{
  signed __int32 min;
  _512_uint32 chunks;
  _slice__slice_uint32 links;
  uint32 linkMask;
};

/* 1142 */
struct __attribute__((aligned(4))) flate_dictDecoder
{
  _slice_uint8 hist;
  signed __int32 wrPos;
  signed __int32 rdPos;
  bool full;
};

/* 1137 */
typedef flate_decompressor *_ptr_flate_decompressor;

/* 1144 */
typedef void (__gostk *PTR_func_ptr_flate_decompressor)(_ptr_flate_decompressor);

/* 1139 */
typedef flate_huffmanDecoder *_ptr_flate_huffmanDecoder;

/* 1136 */
struct flate_decompressor
{
  flate_Reader r;
  _ptr_bufio_Reader rBuf;
  __attribute__((packed)) __attribute__((aligned(1))) int64 roffset;
  uint32 b;
  uint_0 nb;
  flate_huffmanDecoder h1;
  flate_huffmanDecoder h2;
  _ptr__316_int bits;
  _ptr__19_int codebits;
  flate_dictDecoder dict;
  _4_uint8 buf;
  PTR_func_ptr_flate_decompressor step;
  signed __int32 stepState;
  bool final;
  error err;
  _slice_uint8 toRead;
  _ptr_flate_huffmanDecoder hl;
  _ptr_flate_huffmanDecoder hd;
  signed __int32 copyLen;
  signed __int32 copyDist;
};

/* 1143 */
typedef flate_dictDecoder *_ptr_flate_dictDecoder;

/* 1145 */
struct flate_dictWriter
{
  io_Writer w;
};

/* 1146 */
typedef flate_dictWriter *_ptr_flate_dictWriter;

/* 1147 */
typedef float float32;

/* 1148 */
typedef float32 *_ptr_float32;

/* 1149 */
typedef double float64;

/* 1150 */
typedef float64 *_ptr_float64;

/* 1151 */
typedef BUILTIN_INTERFACE fmt_Formatter;

/* 1152 */
typedef fmt_Formatter *_ptr_fmt_Formatter;

/* 1153 */
typedef BUILTIN_INTERFACE fmt_GoStringer;

/* 1154 */
typedef fmt_GoStringer *_ptr_fmt_GoStringer;

/* 1155 */
typedef BUILTIN_INTERFACE fmt_Stringer;

/* 1156 */
typedef fmt_Stringer *_ptr_fmt_Stringer;

/* 1157 */
struct fmt_buffer
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 1158 */
typedef fmt_buffer *_ptr_fmt_buffer;

/* 1161 */
struct fmt_fmtFlags
{
  bool widPresent;
  bool precPresent;
  bool minus;
  bool plus;
  bool sharp;
  bool space;
  bool zero;
  bool plusV;
  bool sharpV;
};

/* 1163 */
typedef uint8 _68_uint8[68];

/* 1159 */
struct fmt_fmt
{
  _ptr_fmt_buffer buf;
  fmt_fmtFlags fmtFlags;
  signed __int32 wid;
  signed __int32 prec;
  _68_uint8 intbuf;
};

/* 1160 */
typedef fmt_fmt *_ptr_fmt_fmt;

/* 1162 */
typedef fmt_fmtFlags *_ptr_fmt_fmtFlags;

/* 1171 */
typedef unsigned __int32 reflect_flag;

/* 1166 */
struct reflect_Value
{
  _ptr_abi_Type typ_;
  unsafe_Pointer ptr;
  reflect_flag flag;
};

/* 1164 */
struct fmt_pp
{
  fmt_buffer buf;
  interface_ arg;
  reflect_Value value;
  fmt_fmt fmt;
  bool reordered;
  bool goodArgNum;
  bool panicking;
  bool erroring;
  bool wrapErrs;
  _slice_int wrappedErrs;
};

/* 1165 */
typedef fmt_pp *_ptr_fmt_pp;

/* 1167 */
typedef reflect_Value *_ptr_reflect_Value;

/* 1168 */
typedef bool (__gostk *PTR_funccomplex128_bool)(complex128);

/* 1169 */
typedef bool (__gostk *PTR_funcfloat64_bool)(float64);

/* 1170 */
typedef bool (__gostk *PTR_funcint64_bool)(int64);

/* 1172 */
typedef reflect_flag *_ptr_reflect_flag;

/* 1173 */
struct fmt_wrapError
{
  string msg;
  error err;
};

/* 1174 */
typedef fmt_wrapError *_ptr_fmt_wrapError;

/* 1178 */
struct _slice_error
{
  error *ptr;
  size_t len;
  size_t cap;
};

/* 1175 */
struct fmt_wrapErrors
{
  string msg;
  _slice_error errs;
};

/* 1176 */
typedef fmt_wrapErrors *_ptr_fmt_wrapErrors;

/* 1177 */
typedef _slice_error (__gostk *PTR_func__slice_error)();

/* 1179 */
struct fmtsort_KeyValue
{
  reflect_Value Key;
  reflect_Value Value;
};

/* 1180 */
typedef fmtsort_KeyValue *_ptr_fmtsort_KeyValue;

/* 1181 */
struct fs_PathError
{
  string Op;
  string Path;
  error Err;
};

/* 1182 */
typedef fs_PathError *_ptr_fs_PathError;

/* 1183 */
typedef BUILTIN_INTERFACE fs_ReadDirFile;

/* 1184 */
typedef fs_ReadDirFile *_ptr_fs_ReadDirFile;

/* 1186 */
typedef bool go_shape_bool;

/* 1185 */
typedef go_shape_bool (__gostk *PTR_func_go_shape_bool)();

/* 1187 */
typedef go_shape_bool *_ptr_go_shape_bool;

/* 1188 */
typedef PTR_func_go_shape_bool *_ptr_func_go_shape_bool;

/* 1190 */
typedef BUILTIN_INTERFACE go_shape_interface__Error_string_;

/* 1189 */
typedef go_shape_interface__Error_string_ (__gostk *PTR_func_go_shape_interface__Error_string_)();

/* 1191 */
typedef go_shape_interface__Error_string_ *_ptr_go_shape_interface__Error_string_;

/* 1192 */
typedef PTR_func_go_shape_interface__Error_string_ *_ptr_func_go_shape_interface__Error_string_;

/* 1194 */
typedef BUILTIN_STRING go_shape_string;

/* 1193 */
struct go_shape__slice_go_shape_string
{
  go_shape_string *ptr;
  size_t len;
  size_t cap;
};

/* 1195 */
typedef go_shape_string *_ptr_go_shape_string;

/* 1196 */
typedef go_shape__slice_go_shape_string *_ptr_go_shape__slice_go_shape_string;

/* 1197 */
struct go_shape_struct__Key_reflect_Value_Value_reflect_Value_
{
  reflect_Value Key;
  reflect_Value Value;
};

/* 1198 */
typedef go_shape_struct__Key_reflect_Value_Value_reflect_Value_ *_ptr_go_shape_struct__Key_reflect_Value_Value_reflect_Value_;

/* 1199 */
struct go_shape_struct__net_http_key_string_net_http_values__slice_string_
{
  string key;
  _slice_string values;
};

/* 1200 */
typedef go_shape_struct__net_http_key_string_net_http_values__slice_string_ *_ptr_go_shape_struct__net_http_key_string_net_http_values__slice_string_;

/* 1204 */
typedef godebug_setting *_ptr_godebug_setting;

/* 1201 */
struct godebug_Setting
{
  string name;
  sync_Once once;
  _ptr_godebug_setting setting;
};

/* 1206 */
typedef godebugs_Info *_ptr_godebugs_Info;

/* 1203 */
struct __attribute__((aligned(8))) godebug_setting
{
  atomic_Pointer_internal_godebug_value_ value;
  sync_Once nonDefaultOnce;
  atomic_Uint64 nonDefault;
  _ptr_godebugs_Info info;
};

/* 1205 */
struct __attribute__((aligned(4))) godebugs_Info
{
  string Name;
  string Package;
  signed __int32 Changed;
  string Old;
  bool Opaque;
};

/* 1202 */
typedef godebug_Setting *_ptr_godebug_Setting;

/* 1207 */
struct godebug_runtimeStderr
{
};

/* 1208 */
typedef godebug_runtimeStderr *_ptr_godebug_runtimeStderr;

/* 1209 */
typedef BUILTIN_INTERFACE hash_Hash32;

/* 1210 */
typedef hash_Hash32 *_ptr_hash_Hash32;

/* 1211 */
struct hkdf_hkdf
{
  hash_Hash expander;
  signed __int32 size;
  _slice_uint8 info;
  uint8 counter;
  _slice_uint8 prev;
  _slice_uint8 buf;
};

/* 1212 */
typedef hkdf_hkdf *_ptr_hkdf_hkdf;

/* 1213 */
struct __attribute__((aligned(4))) hmac_hmac
{
  _slice_uint8 opad;
  _slice_uint8 ipad;
  hash_Hash outer;
  hash_Hash inner;
  bool marshaled;
};

/* 1214 */
typedef hmac_hmac *_ptr_hmac_hmac;

/* 1215 */
typedef BUILTIN_INTERFACE hmac_marshalable;

/* 1216 */
typedef hmac_marshalable *_ptr_hmac_marshalable;

/* 1226 */
struct _slice_hpack_HeaderField
{
  hpack_HeaderField *ptr;
  size_t len;
  size_t cap;
};

/* 1227 */
typedef void *map_string_uint64;

/* 1229 */
typedef void *map_hpack_pairNameValue_uint64;

/* 1224 */
struct __attribute__((packed)) __attribute__((aligned(4))) hpack_headerFieldTable
{
  _slice_hpack_HeaderField ents;
  uint64 evictCount;
  map_string_uint64 byName;
  map_hpack_pairNameValue_uint64 byNameValue;
};

/* 1219 */
struct hpack_dynamicTable
{
  hpack_headerFieldTable table;
  uint32 size;
  uint32 maxSize;
  uint32 allowedMaxSize;
};

/* 1222 */
struct __attribute__((aligned(4))) hpack_HeaderField
{
  string Name;
  string Value;
  bool Sensitive;
};

/* 1221 */
typedef void (__gostk *PTR_funchpack_HeaderField)(hpack_HeaderField);

/* 1217 */
struct __attribute__((aligned(4))) hpack_Decoder
{
  hpack_dynamicTable dynTab;
  PTR_funchpack_HeaderField emit;
  bool emitEnabled;
  signed __int32 maxStrLen;
  _slice_uint8 buf;
  bytes_Buffer saveBuf;
  bool firstField;
};

/* 1218 */
typedef hpack_Decoder *_ptr_hpack_Decoder;

/* 1220 */
typedef hpack_dynamicTable *_ptr_hpack_dynamicTable;

/* 1223 */
typedef hpack_HeaderField *_ptr_hpack_HeaderField;

/* 1225 */
typedef hpack_headerFieldTable *_ptr_hpack_headerFieldTable;

/* 1228 */
struct __attribute__((packed)) __attribute__((aligned(4))) map_bucket_string_uint64
{
  _8_uint8 topbits;
  _8_string keys;
  _8_uint64 elems;
  unsafe_Pointer overflow;
};

/* 1230 */
struct hpack_pairNameValue
{
  string name;
  string value;
};

/* 1231 */
typedef hpack_pairNameValue *_ptr_hpack_pairNameValue;

/* 1234 */
typedef hpack_pairNameValue _8_hpack_pairNameValue[8];

/* 1232 */
struct __attribute__((packed)) __attribute__((aligned(4))) map_bucket_hpack_pairNameValue_uint64
{
  _8_uint8 topbits;
  _8_hpack_pairNameValue keys;
  _8_uint64 elems;
  unsafe_Pointer overflow;
};

/* 1233 */
struct _slice_hpack_pairNameValue
{
  hpack_pairNameValue *ptr;
  size_t len;
  size_t cap;
};

/* 1235 */
struct hpack_DecodingError
{
  error Err;
};

/* 1236 */
typedef hpack_DecodingError *_ptr_hpack_DecodingError;

/* 1237 */
struct hpack_Encoder
{
  hpack_dynamicTable dynTab;
  uint32 minSize;
  uint32 maxSizeLimit;
  bool tableSizeUpdate;
  io_Writer w;
  _slice_uint8 buf;
};

/* 1238 */
typedef hpack_Encoder *_ptr_hpack_Encoder;

/* 1239 */
typedef signed __int32 hpack_InvalidIndexError;

/* 1240 */
typedef hpack_InvalidIndexError *_ptr_hpack_InvalidIndexError;

/* 1244 */
typedef hpke_dhKEM *_ptr_hpke_dhKEM;

/* 1247 */
struct hpke_uint128
{
  uint64 hi;
  uint64 lo;
};

/* 1241 */
struct hpke_Sender
{
  cipher_AEAD aead;
  _ptr_hpke_dhKEM kem;
  _slice_uint8 sharedSecret;
  _slice_uint8 suiteID;
  _slice_uint8 key;
  _slice_uint8 baseNonce;
  _slice_uint8 exporterSecret;
  hpke_uint128 seqNum;
};

/* 1245 */
struct hpke_hkdfKDF
{
  crypto_Hash hash;
};

/* 1243 */
struct __attribute__((aligned(4))) hpke_dhKEM
{
  ecdh_Curve dh;
  hpke_hkdfKDF kdf;
  _slice_uint8 suiteID;
  uint16 nSecret;
};

/* 1242 */
typedef hpke_Sender *_ptr_hpke_Sender;

/* 1246 */
typedef hpke_hkdfKDF *_ptr_hpke_hkdfKDF;

/* 1248 */
typedef hpke_uint128 *_ptr_hpke_uint128;

/* 1249 */
typedef BUILTIN_STRING http_Dir;

/* 1251 */
typedef BUILTIN_INTERFACE http_File;

/* 1253 */
struct retval_2CE420
{
  http_File 0;
  error 1;
};

/* 1250 */
typedef retval_2CE420 (__gostk *PTR_funcstring_http_File_comma__error)(string);

/* 1252 */
typedef http_File *_ptr_http_File;

/* 1254 */
typedef http_Dir *_ptr_http_Dir;

/* 1255 */
typedef BUILTIN_INTERFACE http_FileSystem;

/* 1256 */
typedef http_FileSystem *_ptr_http_FileSystem;

/* 1257 */
typedef void (__gostk *PTR_http_HandlerFunc)(http_ResponseWriter, _ptr_http_Request);

/* 1258 */
typedef PTR_http_HandlerFunc *_ptr_http_HandlerFunc;

/* 1259 */
typedef BUILTIN_INTERFACE http_I;

/* 1260 */
typedef http_I *_ptr_http_I;

/* 1261 */
struct http_MaxBytesError
{
  int64 Limit;
};

/* 1262 */
typedef http_MaxBytesError *_ptr_http_MaxBytesError;

/* 1263 */
struct http_ProtocolError
{
  string ErrorString;
};

/* 1264 */
typedef http_ProtocolError *_ptr_http_ProtocolError;

/* 1265 */
typedef bool (__gostk *PTR_funcerror_bool)(error);

/* 1272 */
struct _slice_http_entry_string_comma__ptr_net_http_routingNode_
{
  http_entry_string_comma__ptr_net_http_routingNode_ *ptr;
  size_t len;
  size_t cap;
};

/* 1275 */
typedef void *map_string__ptr_http_routingNode;

/* 1270 */
struct http_mapping_string_comma__ptr_net_http_routingNode_
{
  _slice_http_entry_string_comma__ptr_net_http_routingNode_ s;
  map_string__ptr_http_routingNode m;
};

/* 1269 */
typedef http_routingNode *_ptr_http_routingNode;

/* 1268 */
struct http_routingNode
{
  _ptr_http_pattern pattern;
  http_Handler handler;
  http_mapping_string_comma__ptr_net_http_routingNode_ children;
  _ptr_http_routingNode multiChild;
  _ptr_http_routingNode emptyChild;
};

/* 1281 */
typedef void *map_http_routingIndexKey__slice__ptr_http_pattern;

/* 1284 */
struct _slice__ptr_http_pattern
{
  _ptr_http_pattern *ptr;
  size_t len;
  size_t cap;
};

/* 1279 */
struct http_routingIndex
{
  map_http_routingIndexKey__slice__ptr_http_pattern segments;
  _slice__ptr_http_pattern multis;
};

/* 1292 */
typedef void *map_string_http_muxEntry;

/* 1296 */
struct _slice_http_muxEntry
{
  http_muxEntry *ptr;
  size_t len;
  size_t cap;
};

/* 1290 */
struct __attribute__((aligned(4))) http_serveMux121
{
  sync_RWMutex mu;
  map_string_http_muxEntry m;
  _slice_http_muxEntry es;
  bool hosts;
};

/* 1266 */
struct http_ServeMux
{
  sync_RWMutex mu;
  http_routingNode tree;
  http_routingIndex index;
  _slice__ptr_http_pattern patterns;
  http_serveMux121 mux121;
};

/* 1273 */
struct http_entry_string_comma__ptr_net_http_routingNode_
{
  string key;
  _ptr_http_routingNode value;
};

/* 1293 */
struct http_muxEntry
{
  http_Handler h;
  string pattern;
};

/* 1267 */
typedef http_ServeMux *_ptr_http_ServeMux;

/* 1271 */
typedef http_mapping_string_comma__ptr_net_http_routingNode_ *_ptr_http_mapping_string_comma__ptr_net_http_routingNode_;

/* 1274 */
typedef http_entry_string_comma__ptr_net_http_routingNode_ *_ptr_http_entry_string_comma__ptr_net_http_routingNode_;

/* 1278 */
typedef _ptr_http_routingNode _8__ptr_http_routingNode[8];

/* 1276 */
struct map_bucket_string__ptr_http_routingNode
{
  _8_uint8 topbits;
  _8_string keys;
  _8__ptr_http_routingNode elems;
  unsafe_Pointer overflow;
};

/* 1277 */
struct _slice__ptr_http_routingNode
{
  _ptr_http_routingNode *ptr;
  size_t len;
  size_t cap;
};

/* 1280 */
typedef http_routingIndex *_ptr_http_routingIndex;

/* 1282 */
struct http_routingIndexKey
{
  signed __int32 pos;
  string s;
};

/* 1283 */
typedef http_routingIndexKey *_ptr_http_routingIndexKey;

/* 1287 */
typedef http_routingIndexKey _8_http_routingIndexKey[8];

/* 1289 */
typedef _slice__ptr_http_pattern _8__slice__ptr_http_pattern[8];

/* 1285 */
struct map_bucket_http_routingIndexKey__slice__ptr_http_pattern
{
  _8_uint8 topbits;
  _8_http_routingIndexKey keys;
  _8__slice__ptr_http_pattern elems;
  unsafe_Pointer overflow;
};

/* 1286 */
struct _slice_http_routingIndexKey
{
  http_routingIndexKey *ptr;
  size_t len;
  size_t cap;
};

/* 1288 */
struct _slice__slice__ptr_http_pattern
{
  _slice__ptr_http_pattern *ptr;
  size_t len;
  size_t cap;
};

/* 1291 */
typedef http_serveMux121 *_ptr_http_serveMux121;

/* 1294 */
typedef http_muxEntry *_ptr_http_muxEntry;

/* 1297 */
typedef http_muxEntry _8_http_muxEntry[8];

/* 1295 */
struct map_bucket_string_http_muxEntry
{
  _8_uint8 topbits;
  _8_string keys;
  _8_http_muxEntry elems;
  unsafe_Pointer overflow;
};

/* 1298 */
typedef BUILTIN_INTERFACE http_anyDirs;

/* 1299 */
typedef http_anyDirs *_ptr_http_anyDirs;

/* 1300 */
typedef BUILTIN_INTERFACE http_baseContexter;

/* 1301 */
typedef http_baseContexter *_ptr_http_baseContexter;

/* 1302 */
struct http_body
{
  io_Reader src;
  interface_ hdr;
  _ptr_bufio_Reader r;
  bool closing;
  bool doEarlyClose;
  sync_Mutex mu;
  bool sawEOF;
  bool closed;
  bool earlyClose;
  PTR_func onHitEOF;
};

/* 1303 */
typedef http_body *_ptr_http_body;

/* 1304 */
struct http_bodyLocked
{
  _ptr_http_body b;
};

/* 1305 */
typedef http_bodyLocked *_ptr_http_bodyLocked;

/* 1306 */
struct http_checkConnErrorWriter
{
  _ptr_http_conn c;
};

/* 1307 */
typedef http_checkConnErrorWriter *_ptr_http_checkConnErrorWriter;

/* 1308 */
typedef BUILTIN_INTERFACE http_closeWriter;

/* 1309 */
typedef http_closeWriter *_ptr_http_closeWriter;

/* 1310 */
struct http_contextKey
{
  string name;
};

/* 1311 */
typedef http_contextKey *_ptr_http_contextKey;

/* 1312 */
typedef signed __int64 http_countingWriter;

/* 1313 */
typedef http_countingWriter *_ptr_http_countingWriter;

/* 1314 */
struct http_dirEntryDirs
{
  fs_DirEntry *ptr;
  size_t len;
  size_t cap;
};

/* 1315 */
typedef http_dirEntryDirs *_ptr_http_dirEntryDirs;

/* 1316 */
struct http_exactSig
{
  _slice_uint8 sig;
  string ct;
};

/* 1317 */
typedef http_exactSig *_ptr_http_exactSig;

/* 1318 */
typedef string (__gostk *PTR_func_slice_uint8_comma__int_string)(_slice_uint8, signed __int32);

/* 1319 */
struct http_expectContinueReader
{
  _ptr_http_response resp;
  io_ReadCloser readCloser;
  atomic_Bool closed;
  atomic_Bool sawEOF;
};

/* 1320 */
typedef http_expectContinueReader *_ptr_http_expectContinueReader;

/* 1321 */
struct http_fileHandler
{
  http_FileSystem root;
};

/* 1322 */
typedef http_fileHandler *_ptr_http_fileHandler;

/* 1323 */
struct http_fileInfoDirs
{
  fs_FileInfo *ptr;
  size_t len;
  size_t cap;
};

/* 1324 */
typedef http_fileInfoDirs *_ptr_http_fileInfoDirs;

/* 1325 */
struct http_globalOptionsHandler
{
};

/* 1326 */
typedef http_globalOptionsHandler *_ptr_http_globalOptionsHandler;

/* 1329 */
struct _slice_http_keyValues
{
  http_keyValues *ptr;
  size_t len;
  size_t cap;
};

/* 1327 */
struct http_headerSorter
{
  _slice_http_keyValues kvs;
};

/* 1330 */
struct http_keyValues
{
  string key;
  _slice_string values;
};

/* 1328 */
typedef http_headerSorter *_ptr_http_headerSorter;

/* 1331 */
typedef http_keyValues *_ptr_http_keyValues;

/* 1332 */
struct http_htmlSig
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 1333 */
typedef http_htmlSig *_ptr_http_htmlSig;

/* 1334 */
typedef unsigned __int32 http_http2ConnectionError;

/* 1335 */
typedef http_http2ConnectionError *_ptr_http_http2ConnectionError;

/* 1341 */
typedef unsigned __int8 http_http2FrameType;

/* 1343 */
typedef unsigned __int8 http_http2Flags;

/* 1339 */
struct http_http2FrameHeader
{
  bool valid;
  http_http2FrameType Type;
  http_http2Flags Flags;
  uint32 Length;
  uint32 StreamID;
};

/* 1336 */
struct http_http2ContinuationFrame
{
  http_http2FrameHeader http2FrameHeader;
  _slice_uint8 headerFragBuf;
};

/* 1337 */
typedef http_http2ContinuationFrame *_ptr_http_http2ContinuationFrame;

/* 1338 */
typedef http_http2FrameHeader (__gostk *PTR_func_http_http2FrameHeader)();

/* 1340 */
typedef http_http2FrameHeader *_ptr_http_http2FrameHeader;

/* 1342 */
typedef http_http2FrameType *_ptr_http_http2FrameType;

/* 1344 */
typedef http_http2Flags *_ptr_http_http2Flags;

/* 1345 */
struct http_http2DataFrame
{
  http_http2FrameHeader http2FrameHeader;
  _slice_uint8 data;
};

/* 1346 */
typedef http_http2DataFrame *_ptr_http_http2DataFrame;

/* 1347 */
typedef unsigned __int32 http_http2ErrCode;

/* 1348 */
typedef http_http2ErrCode *_ptr_http_http2ErrCode;

/* 1349 */
typedef BUILTIN_INTERFACE http_http2Frame;

/* 1350 */
typedef http_http2Frame *_ptr_http_http2Frame;

/* 1353 */
typedef BUILTIN_INTERFACE http_http2writeFramer;

/* 1356 */
typedef http_http2stream *_ptr_http_http2stream;

/* 1436 */
typedef void *chan_error;

/* 1351 */
struct http_http2FrameWriteRequest
{
  http_http2writeFramer write;
  _ptr_http_http2stream stream;
  chan_error done;
};

/* 1358 */
typedef http_http2serverConn *_ptr_http_http2serverConn;

/* 1429 */
typedef http_http2pipe *_ptr_http_http2pipe;

/* 1432 */
typedef void *http_http2closeWaiter;

/* 1397 */
typedef PTR_func http_http2incomparable[];

/* 1411 */
typedef http_http2outflow *_ptr_http_http2outflow;

/* 1410 */
struct http_http2outflow
{
  http_http2incomparable _;
  int32 n;
  _ptr_http_http2outflow conn;
};

/* 1412 */
struct http_http2inflow
{
  int32 avail;
  int32 unsent;
};

/* 1434 */
typedef signed __int32 http_http2streamState;

/* 1372 */
typedef BUILTIN_INTERFACE interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_;

/* 1355 */
struct __attribute__((packed)) __attribute__((aligned(4))) http_http2stream
{
  _ptr_http_http2serverConn sc;
  uint32 id;
  _ptr_http_http2pipe body;
  http_http2closeWaiter cw;
  context_Context ctx;
  PTR_func cancelCtx;
  int64 bodyBytes;
  int64 declBodyBytes;
  http_http2outflow flow;
  http_http2inflow inflow;
  http_http2streamState state;
  bool resetQueued;
  bool gotTrailerHeader;
  bool wroteHeaders;
  __attribute__((aligned(2))) interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_ readDeadline;
  interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_ writeDeadline;
  error closeErr;
  http_Header trailer;
  http_Header reqTrailer;
};

/* 1370 */
typedef http_http2Server *_ptr_http_http2Server;

/* 1396 */
typedef http_http2bufferedWriter *_ptr_http_http2bufferedWriter;

/* 1361 */
typedef http_http2Framer *_ptr_http_http2Framer;

/* 1399 */
typedef void *chan_http_http2readFrameResult;

/* 1402 */
typedef void *chan_http_http2FrameWriteRequest;

/* 1403 */
typedef void *chan_http_http2frameWriteResult;

/* 1406 */
typedef void *chan_http_http2bodyReadMsg;

/* 1409 */
typedef void *chan_interface_;

/* 1376 */
typedef BUILTIN_INTERFACE http_http2WriteScheduler;

/* 1414 */
typedef unsigned __int64 http_http2goroutineLock;

/* 1416 */
typedef void *map_uint32__ptr_http_http2stream;

/* 1421 */
struct _slice_http_http2unstartedHandler
{
  http_http2unstartedHandler *ptr;
  size_t len;
  size_t cap;
};

/* 1357 */
struct http_http2serverConn
{
  _ptr_http_http2Server srv;
  _ptr_http_Server hs;
  net_Conn conn;
  _ptr_http_http2bufferedWriter bw;
  http_Handler handler;
  context_Context baseCtx;
  _ptr_http_http2Framer framer;
  chan_struct_ doneServing;
  chan_http_http2readFrameResult readFrameCh;
  chan_http_http2FrameWriteRequest wantWriteFrameCh;
  chan_http_http2frameWriteResult wroteFrameCh;
  chan_http_http2bodyReadMsg bodyReadCh;
  chan_interface_ serveMsgCh;
  http_http2outflow flow;
  http_http2inflow inflow;
  _ptr_tls_ConnectionState tlsState;
  string remoteAddrStr;
  http_http2WriteScheduler writeSched;
  __attribute__((packed)) __attribute__((aligned(1))) http_http2goroutineLock serveG;
  bool pushEnabled;
  bool sawClientPreface;
  bool sawFirstSettings;
  bool needToSendSettingsAck;
  signed __int32 unackedSettings;
  signed __int32 queuedControlFrames;
  uint32 clientMaxStreams;
  uint32 advMaxStreams;
  uint32 curClientStreams;
  uint32 curPushedStreams;
  uint32 curHandlers;
  uint32 maxClientStreamID;
  uint32 maxPushPromiseID;
  map_uint32__ptr_http_http2stream streams;
  _slice_http_http2unstartedHandler unstartedHandlers;
  int32 initialStreamSendWindowSize;
  int32 maxFrameSize;
  uint32 peerMaxHeaderListSize;
  map_string_string canonHeader;
  signed __int32 canonHeaderKeysSize;
  bool writingFrame;
  bool writingFrameAsync;
  bool needsFrameFlush;
  bool inGoAway;
  bool inFrameScheduleLoop;
  bool needToSendGoAway;
  http_http2ErrCode goAwayCode;
  interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_ shutdownTimer;
  interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_ idleTimer;
  bytes_Buffer headerWriteBuf;
  _ptr_hpack_Encoder hpackEncoder;
  sync_Once shutdownOnce;
};

/* 1430 */
typedef BUILTIN_INTERFACE http_http2pipeBuffer;

/* 1428 */
struct http_http2pipe
{
  sync_Mutex mu;
  sync_Cond c;
  http_http2pipeBuffer b;
  signed __int32 unread;
  error err;
  error breakErr;
  chan_struct_ donec;
  PTR_func readFn;
};

/* 1375 */
typedef http_http2WriteScheduler (__gostk *PTR_func_http_http2WriteScheduler)();

/* 1385 */
typedef http_http2serverInternalState *_ptr_http_http2serverInternalState;

/* 1391 */
typedef BUILTIN_INTERFACE http_http2synctestGroupInterface;

/* 1369 */
struct __attribute__((packed)) __attribute__((aligned(4))) http_http2Server
{
  signed __int32 MaxHandlers;
  uint32 MaxConcurrentStreams;
  uint32 MaxDecoderHeaderTableSize;
  uint32 MaxEncoderHeaderTableSize;
  uint32 MaxReadFrameSize;
  bool PermitProhibitedCipherSuites;
  __attribute__((aligned(4))) time_Duration IdleTimeout;
  int32 MaxUploadBufferPerConnection;
  int32 MaxUploadBufferPerStream;
  PTR_func_http_http2WriteScheduler NewWriteScheduler;
  PTR_funcstring CountError;
  _ptr_http_http2serverInternalState state;
  http_http2synctestGroupInterface group;
};

/* 1395 */
struct http_http2bufferedWriter
{
  http_http2incomparable _;
  io_Writer w;
  _ptr_bufio_Writer bw;
};

/* 1362 */
typedef uint8 _9_uint8[9];

/* 1363 */
typedef _slice_uint8 (__gostk *PTR_funcuint32__slice_uint8)(uint32);

/* 1365 */
typedef http_http2frameCache *_ptr_http_http2frameCache;

/* 1360 */
struct http_http2Framer
{
  io_Reader r;
  http_http2Frame lastFrame;
  error errDetail;
  PTR_funcstring countError;
  uint32 lastHeaderStream;
  uint32 maxReadSize;
  _9_uint8 headerBuf;
  PTR_funcuint32__slice_uint8 getReadBuf;
  _slice_uint8 readBuf;
  uint32 maxWriteSize;
  io_Writer w;
  _slice_uint8 wbuf;
  bool AllowIllegalWrites;
  bool AllowIllegalReads;
  _ptr_hpack_Decoder ReadMetaHeaders;
  uint32 MaxHeaderListSize;
  bool logReads;
  bool logWrites;
  _ptr_http_http2Framer debugFramer;
  _ptr_bytes_Buffer debugFramerBuf;
  PTR_funcstring_comma_____interface_ debugReadLoggerf;
  PTR_funcstring_comma_____interface_ debugWriteLoggerf;
  _ptr_http_http2frameCache frameCache;
};

/* 1425 */
typedef http_http2responseWriter *_ptr_http_http2responseWriter;

/* 1422 */
struct http_http2unstartedHandler
{
  uint32 streamID;
  _ptr_http_http2responseWriter rw;
  _ptr_http_Request req;
  PTR_funchttp_ResponseWriter_comma___ptr_http_Request handler;
};

/* 1387 */
typedef void *map__ptr_http_http2serverConn_struct_;

/* 1384 */
struct http_http2serverInternalState
{
  sync_Mutex mu;
  map__ptr_http_http2serverConn_struct_ activeConns;
};

/* 1364 */
struct http_http2frameCache
{
  http_http2DataFrame dataFrame;
};

/* 1427 */
typedef http_http2responseWriterState *_ptr_http_http2responseWriterState;

/* 1424 */
struct http_http2responseWriter
{
  _ptr_http_http2responseWriterState rws;
};

/* 1426 */
struct http_http2responseWriterState
{
  _ptr_http_http2stream stream;
  _ptr_http_Request req;
  _ptr_http_http2serverConn conn;
  _ptr_bufio_Writer bw;
  http_Header handlerHeader;
  http_Header snapHeader;
  _slice_string trailers;
  signed __int32 status;
  bool wroteHeader;
  bool sentHeader;
  bool handlerDone;
  __attribute__((packed)) __attribute__((aligned(2))) int64 sentContentLen;
  __attribute__((packed)) __attribute__((aligned(1))) int64 wroteBytes;
  sync_Mutex closeNotifierMu;
  chan_bool closeNotifierCh;
};

/* 1352 */
typedef http_http2FrameWriteRequest *_ptr_http_http2FrameWriteRequest;

/* 1354 */
typedef http_http2writeFramer *_ptr_http_http2writeFramer;

/* 1359 */
typedef _ptr_http_http2Framer (__gostk *PTR_func__ptr_http_http2Framer)();

/* 1367 */
struct retval_2CA518
{
  _ptr_hpack_Encoder 0;
  _ptr_bytes_Buffer 1;
};

/* 1366 */
typedef retval_2CA518 (__gostk *PTR_func__ptr_hpack_Encoder_comma___ptr_bytes_Buffer)();

/* 1368 */
typedef void (__gostk *PTR_funchttp_http2FrameWriteRequest)(http_http2FrameWriteRequest);

/* 1371 */
typedef interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_ (__gostk *PTR_functime_Duration_comma__func_interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_)(time_Duration, PTR_func);

/* 1373 */
typedef _chan_left_chan_time_Time (__gostk *PTR_func__chan_left_chan_time_Time)();

/* 1374 */
typedef interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_ (__gostk *PTR_functime_Duration_interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool_)(time_Duration);

/* 1378 */
struct __attribute__((aligned(4))) http_http2PriorityParam
{
  uint32 StreamDep;
  bool Exclusive;
  uint8 Weight;
};

/* 1377 */
typedef void (__gostk *PTR_funcuint32_comma__http_http2PriorityParam)(uint32, http_http2PriorityParam);

/* 1379 */
typedef http_http2PriorityParam *_ptr_http_http2PriorityParam;

/* 1381 */
struct http_http2OpenStreamOptions
{
  uint32 PusherID;
};

/* 1380 */
typedef void (__gostk *PTR_funcuint32_comma__http_http2OpenStreamOptions)(uint32, http_http2OpenStreamOptions);

/* 1382 */
typedef http_http2OpenStreamOptions *_ptr_http_http2OpenStreamOptions;

/* 1383 */
typedef http_http2WriteScheduler *_ptr_http_http2WriteScheduler;

/* 1386 */
typedef void (__gostk *PTR_func_ptr_http_http2serverConn)(_ptr_http_http2serverConn);

/* 1390 */
typedef _ptr_http_http2serverConn _8__ptr_http_http2serverConn[8];

/* 1388 */
struct map_bucket__ptr_http_http2serverConn_struct_
{
  _8_uint8 topbits;
  _8__ptr_http_http2serverConn keys;
  _8_struct_ elems;
  unsafe_Pointer overflow;
};

/* 1389 */
struct _slice__ptr_http_http2serverConn
{
  _ptr_http_http2serverConn *ptr;
  size_t len;
  size_t cap;
};

/* 1393 */
struct retval_2CEF68
{
  context_Context 0;
  PTR_context_CancelFunc 1;
};

/* 1392 */
typedef retval_2CEF68 (__gostk *PTR_funccontext_Context_comma__time_Duration_context_Context_comma__context_CancelFunc)(context_Context, time_Duration);

/* 1394 */
typedef http_http2synctestGroupInterface *_ptr_http_http2synctestGroupInterface;

/* 1398 */
typedef http_http2incomparable *_ptr_http_http2incomparable;

/* 1400 */
struct http_http2readFrameResult
{
  http_http2Frame f;
  error err;
  PTR_func readMore;
};

/* 1401 */
typedef http_http2readFrameResult *_ptr_http_http2readFrameResult;

/* 1404 */
struct http_http2frameWriteResult
{
  http_http2incomparable _;
  http_http2FrameWriteRequest wr;
  error err;
};

/* 1405 */
typedef http_http2frameWriteResult *_ptr_http_http2frameWriteResult;

/* 1407 */
struct http_http2bodyReadMsg
{
  _ptr_http_http2stream st;
  signed __int32 n;
};

/* 1408 */
typedef http_http2bodyReadMsg *_ptr_http_http2bodyReadMsg;

/* 1413 */
typedef http_http2inflow *_ptr_http_http2inflow;

/* 1415 */
typedef http_http2goroutineLock *_ptr_http_http2goroutineLock;

/* 1418 */
typedef uint32 _8_uint32[8];

/* 1420 */
typedef _ptr_http_http2stream _8__ptr_http_http2stream[8];

/* 1417 */
struct map_bucket_uint32__ptr_http_http2stream
{
  _8_uint8 topbits;
  _8_uint32 keys;
  _8__ptr_http_http2stream elems;
  unsafe_Pointer overflow;
};

/* 1419 */
struct _slice__ptr_http_http2stream
{
  _ptr_http_http2stream *ptr;
  size_t len;
  size_t cap;
};

/* 1423 */
typedef http_http2unstartedHandler *_ptr_http_http2unstartedHandler;

/* 1431 */
typedef http_http2pipeBuffer *_ptr_http_http2pipeBuffer;

/* 1433 */
typedef http_http2closeWaiter *_ptr_http_http2closeWaiter;

/* 1435 */
typedef http_http2streamState *_ptr_http_http2streamState;

/* 1437 */
struct http_http2GoAwayFrame
{
  http_http2FrameHeader http2FrameHeader;
  uint32 LastStreamID;
  http_http2ErrCode ErrCode;
  _slice_uint8 debugData;
};

/* 1438 */
typedef http_http2GoAwayFrame *_ptr_http_http2GoAwayFrame;

/* 1439 */
struct http_http2HeadersFrame
{
  http_http2FrameHeader http2FrameHeader;
  http_http2PriorityParam Priority;
  _slice_uint8 headerFragBuf;
};

/* 1440 */
typedef http_http2HeadersFrame *_ptr_http_http2HeadersFrame;

/* 1441 */
struct __attribute__((aligned(4))) http_http2MetaHeadersFrame
{
  _ptr_http_http2HeadersFrame http2HeadersFrame;
  _slice_hpack_HeaderField Fields;
  bool Truncated;
};

/* 1442 */
typedef http_http2MetaHeadersFrame *_ptr_http_http2MetaHeadersFrame;

/* 1443 */
struct http_http2PingFrame
{
  http_http2FrameHeader http2FrameHeader;
  _8_uint8 Data;
};

/* 1444 */
typedef http_http2PingFrame *_ptr_http_http2PingFrame;

/* 1445 */
struct http_http2PriorityFrame
{
  http_http2FrameHeader http2FrameHeader;
  http_http2PriorityParam http2PriorityParam;
};

/* 1446 */
typedef http_http2PriorityFrame *_ptr_http_http2PriorityFrame;

/* 1447 */
struct http_http2PushPromiseFrame
{
  http_http2FrameHeader http2FrameHeader;
  uint32 PromiseID;
  _slice_uint8 headerFragBuf;
};

/* 1448 */
typedef http_http2PushPromiseFrame *_ptr_http_http2PushPromiseFrame;

/* 1449 */
struct http_http2RSTStreamFrame
{
  http_http2FrameHeader http2FrameHeader;
  http_http2ErrCode ErrCode;
};

/* 1450 */
typedef http_http2RSTStreamFrame *_ptr_http_http2RSTStreamFrame;

/* 1453 */
typedef unsigned __int16 http_http2SettingID;

/* 1451 */
struct http_http2Setting
{
  http_http2SettingID ID;
  uint32 Val;
};

/* 1452 */
typedef http_http2Setting *_ptr_http_http2Setting;

/* 1454 */
typedef http_http2SettingID *_ptr_http_http2SettingID;

/* 1455 */
struct http_http2SettingsFrame
{
  http_http2FrameHeader http2FrameHeader;
  _slice_uint8 p;
};

/* 1456 */
typedef http_http2SettingsFrame *_ptr_http_http2SettingsFrame;

/* 1457 */
struct http_http2StreamError
{
  uint32 StreamID;
  http_http2ErrCode Code;
  error Cause;
};

/* 1458 */
typedef http_http2StreamError *_ptr_http_http2StreamError;

/* 1460 */
typedef BUILTIN_INTERFACE http_http2writeContext;

/* 1459 */
typedef error (__gostk *PTR_funchttp_http2writeContext_error)(http_http2writeContext);

/* 1461 */
typedef http_http2writeContext *_ptr_http_http2writeContext;

/* 1462 */
struct http_http2UnknownFrame
{
  http_http2FrameHeader http2FrameHeader;
  _slice_uint8 p;
};

/* 1463 */
typedef http_http2UnknownFrame *_ptr_http_http2UnknownFrame;

/* 1464 */
struct http_http2WindowUpdateFrame
{
  http_http2FrameHeader http2FrameHeader;
  uint32 Increment;
};

/* 1465 */
typedef http_http2WindowUpdateFrame *_ptr_http_http2WindowUpdateFrame;

/* 1466 */
struct http_http2chunkWriter
{
  _ptr_http_http2responseWriterState rws;
};

/* 1467 */
typedef http_http2chunkWriter *_ptr_http_http2chunkWriter;

/* 1468 */
struct http_http2connError
{
  http_http2ErrCode Code;
  string Reason;
};

/* 1469 */
typedef http_http2connError *_ptr_http_http2connError;

/* 1470 */
typedef BUILTIN_INTERFACE http_http2connectionStater;

/* 1471 */
typedef http_http2connectionStater *_ptr_http_http2connectionStater;

/* 1472 */
struct http_http2dataBuffer
{
  _slice__slice_uint8 chunks;
  signed __int32 r;
  signed __int32 w;
  signed __int32 size;
  int64 expected;
};

/* 1473 */
typedef http_http2dataBuffer *_ptr_http_http2dataBuffer;

/* 1474 */
typedef BUILTIN_STRING http_http2duplicatePseudoHeaderError;

/* 1475 */
typedef http_http2duplicatePseudoHeaderError *_ptr_http_http2duplicatePseudoHeaderError;

/* 1476 */
struct http_http2flushFrameWriter
{
};

/* 1477 */
typedef http_http2flushFrameWriter *_ptr_http_http2flushFrameWriter;

/* 1479 */
struct retval_2D71D0
{
  http_http2Frame 0;
  error 1;
};

/* 1478 */
typedef retval_2D71D0 (__gostk *PTR_http_http2frameParser)(_ptr_http_http2frameCache, http_http2FrameHeader, PTR_funcstring, _slice_uint8);

/* 1480 */
typedef PTR_http_http2frameParser *_ptr_http_http2frameParser;

/* 1481 */
struct http_http2goAwayFlowError
{
};

/* 1482 */
typedef http_http2goAwayFlowError *_ptr_http_http2goAwayFlowError;

/* 1483 */
struct http_http2handlerPanicRST
{
  uint32 StreamID;
};

/* 1484 */
typedef http_http2handlerPanicRST *_ptr_http_http2handlerPanicRST;

/* 1485 */
typedef BUILTIN_STRING http_http2headerFieldNameError;

/* 1486 */
typedef http_http2headerFieldNameError *_ptr_http_http2headerFieldNameError;

/* 1487 */
typedef BUILTIN_STRING http_http2headerFieldValueError;

/* 1488 */
typedef http_http2headerFieldValueError *_ptr_http_http2headerFieldValueError;

/* 1489 */
typedef BUILTIN_INTERFACE http_http2headersOrContinuation;

/* 1490 */
typedef http_http2headersOrContinuation *_ptr_http_http2headersOrContinuation;

/* 1491 */
typedef BUILTIN_STRING http_http2pseudoHeaderError;

/* 1492 */
typedef http_http2pseudoHeaderError *_ptr_http_http2pseudoHeaderError;

/* 1493 */
struct __attribute__((aligned(4))) http_http2requestBody
{
  http_http2incomparable _;
  _ptr_http_http2stream stream;
  _ptr_http_http2serverConn conn;
  sync_Once closeOnce;
  bool sawEOF;
  _ptr_http_http2pipe pipe;
  bool needsContinue;
};

/* 1494 */
typedef http_http2requestBody *_ptr_http_http2requestBody;

/* 1501 */
struct _slice_http_http2FrameWriteRequest
{
  http_http2FrameWriteRequest *ptr;
  size_t len;
  size_t cap;
};

/* 1500 */
typedef http_http2writeQueue *_ptr_http_http2writeQueue;

/* 1499 */
struct http_http2writeQueue
{
  _slice_http_http2FrameWriteRequest s;
  _ptr_http_http2writeQueue prev;
  _ptr_http_http2writeQueue next;
};

/* 1502 */
typedef void *map_uint32__ptr_http_http2writeQueue;

/* 1506 */
struct http_http2writeQueuePool
{
  _ptr_http_http2writeQueue *ptr;
  size_t len;
  size_t cap;
};

/* 1495 */
struct http_http2roundRobinWriteScheduler
{
  http_http2writeQueue control;
  map_uint32__ptr_http_http2writeQueue streams;
  _ptr_http_http2writeQueue head;
  http_http2writeQueuePool queuePool;
};

/* 1496 */
typedef http_http2roundRobinWriteScheduler *_ptr_http_http2roundRobinWriteScheduler;

/* 1498 */
struct retval_2CA578
{
  http_http2FrameWriteRequest 0;
  bool 1;
};

/* 1497 */
typedef retval_2CA578 (__gostk *PTR_func_http_http2FrameWriteRequest_comma__bool)();

/* 1505 */
typedef _ptr_http_http2writeQueue _8__ptr_http_http2writeQueue[8];

/* 1503 */
struct map_bucket_uint32__ptr_http_http2writeQueue
{
  _8_uint8 topbits;
  _8_uint32 keys;
  _8__ptr_http_http2writeQueue elems;
  unsafe_Pointer overflow;
};

/* 1504 */
struct _slice__ptr_http_http2writeQueue
{
  _ptr_http_http2writeQueue *ptr;
  size_t len;
  size_t cap;
};

/* 1507 */
typedef http_http2writeQueuePool *_ptr_http_http2writeQueuePool;

/* 1508 */
typedef signed __int32 http_http2serverMessage;

/* 1509 */
typedef http_http2serverMessage *_ptr_http_http2serverMessage;

/* 1510 */
struct http_http2sorter
{
  _slice_string v;
};

/* 1511 */
typedef http_http2sorter *_ptr_http_http2sorter;

/* 1512 */
struct http_http2startPushRequest
{
  _ptr_http_http2stream parent;
  string method;
  _ptr_url_URL url;
  http_Header header;
  chan_error done;
};

/* 1513 */
typedef http_http2startPushRequest *_ptr_http_http2startPushRequest;

/* 1514 */
struct http_http2timeTimer
{
  _ptr_time_Timer Timer;
};

/* 1515 */
typedef http_http2timeTimer *_ptr_http_http2timeTimer;

/* 1516 */
struct http_http2write100ContinueHeadersFrame
{
  uint32 streamID;
};

/* 1517 */
typedef http_http2write100ContinueHeadersFrame *_ptr_http_http2write100ContinueHeadersFrame;

/* 1518 */
struct __attribute__((aligned(4))) http_http2writeData
{
  uint32 streamID;
  _slice_uint8 p;
  bool endStream;
};

/* 1519 */
typedef http_http2writeData *_ptr_http_http2writeData;

/* 1520 */
struct http_http2writeGoAway
{
  uint32 maxStreamID;
  http_http2ErrCode code;
};

/* 1521 */
typedef http_http2writeGoAway *_ptr_http_http2writeGoAway;

/* 1522 */
struct http_http2writePingAck
{
  _ptr_http_http2PingFrame pf;
};

/* 1523 */
typedef http_http2writePingAck *_ptr_http_http2writePingAck;

/* 1527 */
struct retval_2CAA28
{
  uint32 0;
  error 1;
};

/* 1526 */
typedef retval_2CAA28 (__gostk *PTR_func_uint32_comma__error)();

/* 1524 */
struct http_http2writePushPromise
{
  uint32 streamID;
  string method;
  _ptr_url_URL url;
  http_Header h;
  PTR_func_uint32_comma__error allocatePromisedID;
  uint32 promisedID;
};

/* 1525 */
typedef http_http2writePushPromise *_ptr_http_http2writePushPromise;

/* 1528 */
struct http_http2writeResHeaders
{
  uint32 streamID;
  signed __int32 httpResCode;
  http_Header h;
  _slice_string trailers;
  bool endStream;
  string date;
  string contentType;
  string contentLength;
};

/* 1529 */
typedef http_http2writeResHeaders *_ptr_http_http2writeResHeaders;

/* 1530 */
struct http_http2writeSettings
{
  http_http2Setting *ptr;
  size_t len;
  size_t cap;
};

/* 1531 */
typedef http_http2writeSettings *_ptr_http_http2writeSettings;

/* 1532 */
struct http_http2writeSettingsAck
{
};

/* 1533 */
typedef http_http2writeSettingsAck *_ptr_http_http2writeSettingsAck;

/* 1534 */
struct http_http2writeWindowUpdate
{
  uint32 streamID;
  uint32 n;
};

/* 1535 */
typedef http_http2writeWindowUpdate *_ptr_http_http2writeWindowUpdate;

/* 1536 */
struct http_httpRange
{
  int64 start;
  int64 length;
};

/* 1537 */
typedef http_httpRange *_ptr_http_httpRange;

/* 1540 */
struct http_serverHandler
{
  _ptr_http_Server srv;
};

/* 1538 */
struct http_initALPNRequest
{
  context_Context ctx;
  _ptr_tls_Conn c;
  http_serverHandler h;
};

/* 1539 */
typedef http_initALPNRequest *_ptr_http_initALPNRequest;

/* 1541 */
typedef http_serverHandler *_ptr_http_serverHandler;

/* 1542 */
struct http_maskedSig
{
  _slice_uint8 mask;
  _slice_uint8 pat;
  bool skipWS;
  string ct;
};

/* 1543 */
typedef http_maskedSig *_ptr_http_maskedSig;

/* 1544 */
struct http_maxBytesReader
{
  http_ResponseWriter w;
  io_ReadCloser r;
  int64 i;
  int64 n;
  error err;
};

/* 1545 */
typedef http_maxBytesReader *_ptr_http_maxBytesReader;

/* 1546 */
struct http_mp4Sig
{
};

/* 1547 */
typedef http_mp4Sig *_ptr_http_mp4Sig;

/* 1548 */
struct http_noBody
{
};

/* 1549 */
typedef http_noBody *_ptr_http_noBody;

/* 1550 */
struct http_onceCloseListener
{
  net_Listener Listener;
  sync_Once once;
  error closeErr;
};

/* 1551 */
typedef http_onceCloseListener *_ptr_http_onceCloseListener;

/* 1552 */
struct http_redirectHandler
{
  string url;
  signed __int32 code;
};

/* 1553 */
typedef http_redirectHandler *_ptr_http_redirectHandler;

/* 1554 */
typedef BUILTIN_STRING http_relationship;

/* 1555 */
typedef http_relationship *_ptr_http_relationship;

/* 1556 */
typedef BUILTIN_INTERFACE http_requestTooLarger;

/* 1557 */
typedef http_requestTooLarger *_ptr_http_requestTooLarger;

/* 1558 */
typedef BUILTIN_INTERFACE http_sniffSig;

/* 1559 */
typedef http_sniffSig *_ptr_http_sniffSig;

/* 1560 */
struct http_statusError
{
  signed __int32 code;
  string text;
};

/* 1561 */
typedef http_statusError *_ptr_http_statusError;

/* 1562 */
struct http_stringWriter
{
  io_Writer w;
};

/* 1563 */
typedef http_stringWriter *_ptr_http_stringWriter;

/* 1564 */
struct http_textSig
{
};

/* 1565 */
typedef http_textSig *_ptr_http_textSig;

/* 1566 */
struct http_unsupportedTEError
{
  string err;
};

/* 1567 */
typedef http_unsupportedTEError *_ptr_http_unsupportedTEError;

/* 1568 */
struct http_writerOnly
{
  io_Writer Writer;
};

/* 1569 */
typedef http_writerOnly *_ptr_http_writerOnly;

/* 1570 */
struct __attribute__((aligned(4))) httpproxy_Config
{
  string HTTPProxy;
  string HTTPSProxy;
  string NoProxy;
  bool CGI;
};

/* 1571 */
typedef httpproxy_Config *_ptr_httpproxy_Config;

/* 1572 */
struct httpproxy_allMatch
{
};

/* 1573 */
typedef httpproxy_allMatch *_ptr_httpproxy_allMatch;

/* 1574 */
typedef bool (__gostk *PTR_funcstring_comma__string_comma__net_IP_bool)(string, string, net_IP);

/* 1575 */
struct httpproxy_cidrMatch
{
  _ptr_net_IPNet cidr;
};

/* 1576 */
typedef httpproxy_cidrMatch *_ptr_httpproxy_cidrMatch;

/* 1580 */
typedef BUILTIN_INTERFACE httpproxy_matcher;

/* 1579 */
struct _slice_httpproxy_matcher
{
  httpproxy_matcher *ptr;
  size_t len;
  size_t cap;
};

/* 1577 */
struct httpproxy_config
{
  httpproxy_Config Config;
  _ptr_url_URL httpsProxy;
  _ptr_url_URL httpProxy;
  _slice_httpproxy_matcher ipMatchers;
  _slice_httpproxy_matcher domainMatchers;
};

/* 1578 */
typedef httpproxy_config *_ptr_httpproxy_config;

/* 1581 */
typedef httpproxy_matcher *_ptr_httpproxy_matcher;

/* 1582 */
struct __attribute__((aligned(4))) httpproxy_domainMatch
{
  string host;
  string port;
  bool matchHost;
};

/* 1583 */
typedef httpproxy_domainMatch *_ptr_httpproxy_domainMatch;

/* 1584 */
struct httpproxy_ipMatch
{
  net_IP ip;
  string port;
};

/* 1585 */
typedef httpproxy_ipMatch *_ptr_httpproxy_ipMatch;

/* 1586 */
struct idna_labelError
{
  string label;
  string code_;
};

/* 1587 */
typedef idna_labelError *_ptr_idna_labelError;

/* 1588 */
typedef signed __int32 idna_runeError;

/* 1589 */
typedef idna_runeError *_ptr_idna_runeError;

/* 1590 */
typedef signed __int16 int16;

/* 1591 */
typedef int16 *_ptr_int16;

/* 1592 */
typedef signed __int8 int8;

/* 1593 */
typedef int8 *_ptr_int8;

/* 1596 */
typedef uint8 _2_uint8[2];

/* 1594 */
struct internal_chunkedReader
{
  _ptr_bufio_Reader r;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 n;
  error err;
  _2_uint8 buf;
  bool checkEnd;
  int64 excess;
};

/* 1595 */
typedef internal_chunkedReader *_ptr_internal_chunkedReader;

/* 1597 */
typedef BUILTIN_INTERFACE io_ByteScanner;

/* 1598 */
typedef io_ByteScanner *_ptr_io_ByteScanner;

/* 1599 */
struct io_LimitedReader
{
  io_Reader R;
  int64 N;
};

/* 1600 */
typedef io_LimitedReader *_ptr_io_LimitedReader;

/* 1605 */
typedef void *chan__slice_uint8;

/* 1606 */
typedef void *chan_int;

/* 1607 */
struct io_onceError
{
  sync_Mutex Mutex;
  error err;
};

/* 1603 */
struct io_pipe
{
  sync_Mutex wrMu;
  chan__slice_uint8 wrCh;
  chan_int rdCh;
  sync_Once once;
  chan_struct_ done;
  io_onceError rerr;
  io_onceError werr;
};

/* 1601 */
struct io_PipeReader
{
  io_pipe pipe;
};

/* 1602 */
typedef io_PipeReader *_ptr_io_PipeReader;

/* 1604 */
typedef io_pipe *_ptr_io_pipe;

/* 1608 */
typedef io_onceError *_ptr_io_onceError;

/* 1609 */
struct io_PipeWriter
{
  io_PipeReader r;
};

/* 1610 */
typedef io_PipeWriter *_ptr_io_PipeWriter;

/* 1611 */
typedef BUILTIN_INTERFACE io_ReadSeeker;

/* 1612 */
typedef io_ReadSeeker *_ptr_io_ReadSeeker;

/* 1613 */
typedef BUILTIN_INTERFACE io_ReaderFrom;

/* 1614 */
typedef io_ReaderFrom *_ptr_io_ReaderFrom;

/* 1615 */
typedef BUILTIN_INTERFACE io_StringWriter;

/* 1616 */
typedef io_StringWriter *_ptr_io_StringWriter;

/* 1617 */
typedef BUILTIN_INTERFACE io_WriteCloser;

/* 1618 */
typedef io_WriteCloser *_ptr_io_WriteCloser;

/* 1619 */
typedef BUILTIN_INTERFACE io_WriterTo;

/* 1620 */
typedef io_WriterTo *_ptr_io_WriterTo;

/* 1621 */
struct io_discard
{
};

/* 1622 */
typedef io_discard *_ptr_io_discard;

/* 1623 */
struct io_nopCloser
{
  io_Reader Reader;
};

/* 1624 */
typedef io_nopCloser *_ptr_io_nopCloser;

/* 1625 */
struct io_nopCloserWriterTo
{
  io_Reader Reader;
};

/* 1626 */
typedef io_nopCloserWriterTo *_ptr_io_nopCloserWriterTo;

/* 1627 */
typedef void (__gostk *PTR_iter_Seq_string_)(PTR_funcstring_bool);

/* 1628 */
typedef PTR_iter_Seq_string_ *_ptr_iter_Seq_string_;

/* 1629 */
struct main_fIList
{
  main_fInfo *ptr;
  size_t len;
  size_t cap;
};

/* 1630 */
struct __attribute__((packed)) __attribute__((aligned(4))) main_fInfo
{
  string name;
  time_Time modTime;
  int64 size;
};

/* 1631 */
typedef main_fInfo *_ptr_main_fInfo;

/* 1632 */
typedef main_fIList *_ptr_main_fIList;

/* 1635 */
typedef uint32 _4_uint32[4];

/* 1633 */
struct __attribute__((packed)) __attribute__((aligned(4))) md5_digest
{
  _4_uint32 s;
  _64_uint8 x;
  signed __int32 nx;
  uint64 len;
};

/* 1634 */
typedef md5_digest *_ptr_md5_digest;

/* 1638 */
typedef uint8 _2400_uint8[2400];

/* 1641 */
typedef unsigned __int16 mlkem768_fieldElement;

/* 1644 */
typedef mlkem768_fieldElement mlkem768_nttElement[256];

/* 1647 */
typedef mlkem768_nttElement _3_mlkem768_nttElement[3];

/* 1648 */
typedef mlkem768_nttElement _9_mlkem768_nttElement[9];

/* 1639 */
struct mlkem768_encryptionKey
{
  _3_mlkem768_nttElement t;
  _9_mlkem768_nttElement A;
};

/* 1649 */
struct mlkem768_decryptionKey
{
  _3_mlkem768_nttElement s;
};

/* 1636 */
struct mlkem768_DecapsulationKey
{
  _2400_uint8 dk;
  mlkem768_encryptionKey encryptionKey;
  mlkem768_decryptionKey decryptionKey;
};

/* 1637 */
typedef mlkem768_DecapsulationKey *_ptr_mlkem768_DecapsulationKey;

/* 1640 */
typedef mlkem768_encryptionKey *_ptr_mlkem768_encryptionKey;

/* 1642 */
typedef mlkem768_fieldElement *_ptr_mlkem768_fieldElement;

/* 1643 */
struct _slice_mlkem768_fieldElement
{
  mlkem768_fieldElement *ptr;
  size_t len;
  size_t cap;
};

/* 1645 */
typedef mlkem768_nttElement *_ptr_mlkem768_nttElement;

/* 1646 */
struct _slice_mlkem768_nttElement
{
  mlkem768_nttElement *ptr;
  size_t len;
  size_t cap;
};

/* 1650 */
typedef mlkem768_decryptionKey *_ptr_mlkem768_decryptionKey;

/* 1654 */
typedef multipart_part *_ptr_multipart_part;

/* 1651 */
struct multipart_Writer
{
  io_Writer w;
  string boundary;
  _ptr_multipart_part lastpart;
};

/* 1652 */
typedef multipart_Writer *_ptr_multipart_Writer;

/* 1653 */
struct multipart_part
{
  _ptr_multipart_Writer mw;
  bool closed;
  error we;
};

/* 1655 */
struct net_AddrError
{
  string Err;
  string Addr;
};

/* 1656 */
typedef net_AddrError *_ptr_net_AddrError;

/* 1657 */
struct __attribute__((aligned(2))) net_DNSError
{
  error UnwrapErr;
  string Err;
  string Name;
  string Server;
  bool IsTimeout;
  bool IsTemporary;
  bool IsNotFound;
};

/* 1658 */
typedef net_DNSError *_ptr_net_DNSError;

/* 1663 */
struct net_KeepAliveConfig
{
  bool Enable;
  __attribute__((packed)) __attribute__((aligned(4))) time_Duration Idle;
  __attribute__((packed)) __attribute__((aligned(1))) time_Duration Interval;
  signed __int32 Count;
};

/* 1666 */
typedef net_Resolver *_ptr_net_Resolver;

/* 1695 */
typedef error (__gostk *PTR_funcstring_comma__string_comma__syscall_RawConn_error)(string, string, syscall_RawConn);

/* 1696 */
typedef error (__gostk *PTR_funccontext_Context_comma__string_comma__string_comma__syscall_RawConn_error)(context_Context, string, string, syscall_RawConn);

/* 1697 */
typedef unsigned __int8 net_mptcpStatus;

/* 1659 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_Dialer
{
  time_Duration Timeout;
  time_Time Deadline;
  net_Addr LocalAddr;
  bool DualStack;
  __attribute__((aligned(4))) time_Duration FallbackDelay;
  time_Duration KeepAlive;
  net_KeepAliveConfig KeepAliveConfig;
  _ptr_net_Resolver Resolver;
  _chan_left_chan_struct_ Cancel;
  PTR_funcstring_comma__string_comma__syscall_RawConn_error Control;
  PTR_funccontext_Context_comma__string_comma__string_comma__syscall_RawConn_error ControlContext;
  net_mptcpStatus mptcpStatus;
};

/* 1662 */
struct retval_2CFC18
{
  net_Conn 0;
  error 1;
};

/* 1661 */
typedef retval_2CFC18 (__gostk *PTR_funccontext_Context_comma__string_comma__string_net_Conn_comma__error)(context_Context, string, string);

/* 1685 */
typedef void *map_string__ptr_singleflight_call;

/* 1683 */
struct singleflight_Group
{
  sync_Mutex mu;
  map_string__ptr_singleflight_call m;
};

/* 1665 */
struct net_Resolver
{
  bool PreferGo;
  bool StrictErrors;
  PTR_funccontext_Context_comma__string_comma__string_net_Conn_comma__error Dial;
  singleflight_Group lookupGroup;
};

/* 1660 */
typedef net_Dialer *_ptr_net_Dialer;

/* 1664 */
typedef net_KeepAliveConfig *_ptr_net_KeepAliveConfig;

/* 1668 */
struct _slice_net_IPAddr
{
  net_IPAddr *ptr;
  size_t len;
  size_t cap;
};

/* 1682 */
struct retval_2D0350
{
  _slice_net_IPAddr 0;
  error 1;
};

/* 1667 */
typedef retval_2D0350 (__gostk *PTR_funccontext_Context_comma__string_comma__string__slice_net_IPAddr_comma__error)(context_Context, string, string);

/* 1669 */
struct net_IPAddr
{
  net_IP IP;
  string Zone;
};

/* 1670 */
typedef net_IPAddr *_ptr_net_IPAddr;

/* 1672 */
typedef BUILTIN_INTERFACE syscall_Sockaddr;

/* 1678 */
struct retval_2CE8A0
{
  syscall_Sockaddr 0;
  error 1;
};

/* 1671 */
typedef retval_2CE8A0 (__gostk *PTR_funcint_syscall_Sockaddr_comma__error)(signed __int32);

/* 1674 */
typedef unsigned __int32 syscall__Socklen;

/* 1676 */
struct retval_2CE9C0
{
  unsafe_Pointer 0;
  syscall__Socklen 1;
  error 2;
};

/* 1673 */
typedef retval_2CE9C0 (__gostk *PTR_func_unsafe_Pointer_comma__syscall__Socklen_comma__error)();

/* 1675 */
typedef syscall__Socklen *_ptr_syscall__Socklen;

/* 1677 */
typedef syscall_Sockaddr *_ptr_syscall_Sockaddr;

/* 1680 */
typedef BUILTIN_INTERFACE net_sockaddr;

/* 1679 */
typedef net_sockaddr (__gostk *PTR_funcstring_net_sockaddr)(string);

/* 1681 */
typedef net_sockaddr *_ptr_net_sockaddr;

/* 1684 */
typedef singleflight_Group *_ptr_singleflight_Group;

/* 1689 */
typedef void *chan_chan_left__singleflight_Result;

/* 1688 */
struct _slice_chan_chan_left__singleflight_Result
{
  chan_chan_left__singleflight_Result *ptr;
  size_t len;
  size_t cap;
};

/* 1686 */
struct singleflight_call
{
  sync_WaitGroup wg;
  interface_ val;
  error err;
  signed __int32 dups;
  _slice_chan_chan_left__singleflight_Result chans;
};

/* 1687 */
typedef singleflight_call *_ptr_singleflight_call;

/* 1690 */
struct __attribute__((aligned(4))) singleflight_Result
{
  interface_ Val;
  error Err;
  bool Shared;
};

/* 1691 */
typedef singleflight_Result *_ptr_singleflight_Result;

/* 1694 */
typedef _ptr_singleflight_call _8__ptr_singleflight_call[8];

/* 1692 */
struct map_bucket_string__ptr_singleflight_call
{
  _8_uint8 topbits;
  _8_string keys;
  _8__ptr_singleflight_call elems;
  unsafe_Pointer overflow;
};

/* 1693 */
struct _slice__ptr_singleflight_call
{
  _ptr_singleflight_call *ptr;
  size_t len;
  size_t cap;
};

/* 1698 */
typedef net_mptcpStatus *_ptr_net_mptcpStatus;

/* 1699 */
typedef BUILTIN_INTERFACE net_Error;

/* 1700 */
typedef net_Error *_ptr_net_Error;

/* 1701 */
typedef unsigned __int32 net_Flags;

/* 1702 */
typedef net_Flags *_ptr_net_Flags;

/* 1703 */
struct net_HardwareAddr
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 1704 */
typedef net_HardwareAddr *_ptr_net_HardwareAddr;

/* 1714 */
typedef net_netFD *_ptr_net_netFD;

/* 1711 */
struct net_conn
{
  _ptr_net_netFD fd;
};

/* 1705 */
struct net_IPConn
{
  net_conn conn;
};

/* 1713 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_netFD
{
  poll_FD pfd;
  signed __int32 family;
  signed __int32 sotype;
  bool isConnected;
  __attribute__((aligned(4))) string net;
  net_Addr laddr;
  net_Addr raddr;
};

/* 1706 */
typedef net_IPConn *_ptr_net_IPConn;

/* 1708 */
struct retval_2CF230
{
  signed __int32 0;
  net_Addr 1;
  error 2;
};

/* 1707 */
typedef retval_2CF230 (__gostk *PTR_func_slice_uint8_int_comma__net_Addr_comma__error)(_slice_uint8);

/* 1710 */
struct retval_2CF268
{
  signed __int32 0;
  error 1;
};

/* 1709 */
typedef retval_2CF268 (__gostk *PTR_func_slice_uint8_comma__net_Addr_int_comma__error)(_slice_uint8, net_Addr);

/* 1712 */
typedef net_conn *_ptr_net_conn;

/* 1715 */
struct net_Interface
{
  signed __int32 Index;
  signed __int32 MTU;
  string Name;
  net_HardwareAddr HardwareAddr;
  net_Flags Flags;
};

/* 1716 */
typedef net_Interface *_ptr_net_Interface;

/* 1717 */
struct __attribute__((aligned(4))) net_ListenConfig
{
  PTR_funcstring_comma__string_comma__syscall_RawConn_error Control;
  __attribute__((packed)) __attribute__((aligned(1))) time_Duration KeepAlive;
  net_KeepAliveConfig KeepAliveConfig;
  net_mptcpStatus mptcpStatus;
};

/* 1718 */
typedef net_ListenConfig *_ptr_net_ListenConfig;

/* 1719 */
struct net_OpError
{
  string Op;
  string Net;
  net_Addr Source;
  net_Addr Addr;
  error Err;
};

/* 1720 */
typedef net_OpError *_ptr_net_OpError;

/* 1721 */
typedef BUILTIN_INTERFACE net_PacketConn;

/* 1722 */
typedef net_PacketConn *_ptr_net_PacketConn;

/* 1723 */
struct net_ParseError
{
  string Type;
  string Text;
};

/* 1724 */
typedef net_ParseError *_ptr_net_ParseError;

/* 1725 */
struct net_TCPAddr
{
  net_IP IP;
  signed __int32 Port;
  string Zone;
};

/* 1726 */
typedef net_TCPAddr *_ptr_net_TCPAddr;

/* 1727 */
struct net_TCPConn
{
  net_conn conn;
};

/* 1728 */
typedef net_TCPConn *_ptr_net_TCPConn;

/* 1729 */
struct net_TCPListener
{
  _ptr_net_netFD fd;
  net_ListenConfig lc;
};

/* 1730 */
typedef net_TCPListener *_ptr_net_TCPListener;

/* 1731 */
struct net_UDPAddr
{
  net_IP IP;
  signed __int32 Port;
  string Zone;
};

/* 1732 */
typedef net_UDPAddr *_ptr_net_UDPAddr;

/* 1733 */
struct net_UDPConn
{
  net_conn conn;
};

/* 1734 */
typedef net_UDPConn *_ptr_net_UDPConn;

/* 1735 */
struct net_UnixAddr
{
  string Name;
  string Net;
};

/* 1736 */
typedef net_UnixAddr *_ptr_net_UnixAddr;

/* 1737 */
struct net_UnixConn
{
  net_conn conn;
};

/* 1738 */
typedef net_UnixConn *_ptr_net_UnixConn;

/* 1739 */
struct net_UnixListener
{
  _ptr_net_netFD fd;
  string path;
  bool unlink;
  sync_Once unlinkOnce;
};

/* 1740 */
typedef net_UnixListener *_ptr_net_UnixListener;

/* 1741 */
typedef BUILTIN_STRING net_UnknownNetworkError;

/* 1742 */
typedef net_UnknownNetworkError *_ptr_net_UnknownNetworkError;

/* 1743 */
struct net_addrList
{
  net_Addr *ptr;
  size_t len;
  size_t cap;
};

/* 1744 */
typedef net_addrList *_ptr_net_addrList;

/* 1745 */
struct net_byName
{
  _slice_string addrs;
  string canonicalName;
};

/* 1746 */
typedef net_byName *_ptr_net_byName;

/* 1749 */
struct _slice_net_ipAttr
{
  net_ipAttr *ptr;
  size_t len;
  size_t cap;
};

/* 1754 */
struct _slice_netip_Addr
{
  netip_Addr *ptr;
  size_t len;
  size_t cap;
};

/* 1747 */
struct net_byRFC6724
{
  _slice_net_IPAddr addrs;
  _slice_net_ipAttr addrAttr;
  _slice_netip_Addr srcs;
  _slice_net_ipAttr srcAttr;
};

/* 1752 */
typedef unsigned __int8 net_scope;

/* 1750 */
struct net_ipAttr
{
  net_scope Scope;
  uint8 Precedence;
  uint8 Label;
};

/* 1757 */
struct netip_uint128
{
  uint64 hi;
  uint64 lo;
};

/* 1759 */
struct unique_Handle_net_netip_addrDetail_
{
  _ptr_netip_addrDetail value;
};

/* 1755 */
struct __attribute__((packed)) __attribute__((aligned(4))) netip_Addr
{
  netip_uint128 addr;
  unique_Handle_net_netip_addrDetail_ z;
};

/* 1748 */
typedef net_byRFC6724 *_ptr_net_byRFC6724;

/* 1751 */
typedef net_ipAttr *_ptr_net_ipAttr;

/* 1753 */
typedef net_scope *_ptr_net_scope;

/* 1756 */
typedef netip_Addr *_ptr_netip_Addr;

/* 1758 */
typedef netip_uint128 *_ptr_netip_uint128;

/* 1760 */
typedef unique_Handle_net_netip_addrDetail_ *_ptr_unique_Handle_net_netip_addrDetail_;

/* 1761 */
struct net_canceledError
{
};

/* 1762 */
typedef net_canceledError *_ptr_net_canceledError;

/* 1763 */
struct __attribute__((aligned(4))) net_dialResult
{
  net_Conn Conn;
  error error;
  bool primary;
  bool done;
};

/* 1764 */
typedef net_dialResult *_ptr_net_dialResult;

/* 1765 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_dnsConfig
{
  _slice_string servers;
  _slice_string search;
  signed __int32 ndots;
  time_Duration timeout;
  signed __int32 attempts;
  bool rotate;
  bool unknownOpt;
  __attribute__((aligned(4))) _slice_string lookup;
  error err;
  time_Time mtime;
  uint32 soffset;
  bool singleRequest;
  bool useTCP;
  bool trustAD;
  bool noReload;
};

/* 1766 */
typedef net_dnsConfig *_ptr_net_dnsConfig;

/* 1767 */
struct __attribute__((aligned(4))) net_file
{
  _ptr_os_File file;
  _slice_uint8 data;
  bool atEOF;
};

/* 1768 */
typedef net_file *_ptr_net_file;

/* 1769 */
typedef signed __int32 net_hostLookupOrder;

/* 1770 */
typedef net_hostLookupOrder *_ptr_net_hostLookupOrder;

/* 1771 */
struct net_noReadFrom
{
};

/* 1772 */
typedef net_noReadFrom *_ptr_net_noReadFrom;

/* 1773 */
struct net_noWriteTo
{
};

/* 1774 */
typedef net_noWriteTo *_ptr_net_noWriteTo;

/* 1775 */
struct net_notFoundError
{
  string s;
};

/* 1776 */
typedef net_notFoundError *_ptr_net_notFoundError;

/* 1779 */
typedef void *map_string__slice_net_nssSource;

/* 1777 */
struct net_nssConf
{
  time_Time mtime;
  error err;
  map_string__slice_net_nssSource sources;
};

/* 1778 */
typedef net_nssConf *_ptr_net_nssConf;

/* 1780 */
struct _slice_net_nssSource
{
  net_nssSource *ptr;
  size_t len;
  size_t cap;
};

/* 1783 */
struct _slice_net_nssCriterion
{
  net_nssCriterion *ptr;
  size_t len;
  size_t cap;
};

/* 1781 */
struct net_nssSource
{
  string source;
  _slice_net_nssCriterion criteria;
};

/* 1784 */
struct net_nssCriterion
{
  bool negate;
  string status;
  string action;
};

/* 1782 */
typedef net_nssSource *_ptr_net_nssSource;

/* 1785 */
typedef net_nssCriterion *_ptr_net_nssCriterion;

/* 1788 */
typedef _slice_net_nssSource _8__slice_net_nssSource[8];

/* 1786 */
struct map_bucket_string__slice_net_nssSource
{
  _8_uint8 topbits;
  _8_string keys;
  _8__slice_net_nssSource elems;
  unsafe_Pointer overflow;
};

/* 1787 */
struct _slice__slice_net_nssSource
{
  _slice_net_nssSource *ptr;
  size_t len;
  size_t cap;
};

/* 1789 */
struct net_onlyValuesCtx
{
  context_Context Context;
  context_Context lookupValues;
};

/* 1790 */
typedef net_onlyValuesCtx *_ptr_net_onlyValuesCtx;

/* 1791 */
struct net_rawConn
{
  _ptr_net_netFD fd;
};

/* 1792 */
typedef net_rawConn *_ptr_net_rawConn;

/* 1794 */
typedef BUILTIN_STRING poll_String;

/* 1793 */
typedef poll_String (__gostk *PTR_func_poll_String)();

/* 1795 */
typedef poll_String *_ptr_poll_String;

/* 1796 */
typedef _ptr_poll_FD (__gostk *PTR_func__ptr_poll_FD)();

/* 1797 */
struct net_rawListener
{
  net_rawConn rawConn;
};

/* 1798 */
typedef net_rawListener *_ptr_net_rawListener;

/* 1799 */
struct net_result
{
  dnsmessage_Parser p;
  string server;
  error error;
};

/* 1800 */
typedef net_result *_ptr_net_result;

/* 1804 */
struct retval_2D12B8
{
  _ptr_net_TCPConn 0;
  error 1;
};

/* 1803 */
typedef retval_2D12B8 (__gostk *PTR_funccontext_Context_comma__string_comma___ptr_net_TCPAddr_comma___ptr_net_TCPAddr__ptr_net_TCPConn_comma__error)(context_Context, string, _ptr_net_TCPAddr, _ptr_net_TCPAddr);

/* 1801 */
struct net_sysDialer
{
  net_Dialer Dialer;
  string network;
  string address;
  PTR_funccontext_Context_comma__string_comma___ptr_net_TCPAddr_comma___ptr_net_TCPAddr__ptr_net_TCPConn_comma__error testHookDialTCP;
};

/* 1802 */
typedef net_sysDialer *_ptr_net_sysDialer;

/* 1805 */
struct net_tcpConnWithoutReadFrom
{
  net_noReadFrom noReadFrom;
  _ptr_net_TCPConn TCPConn;
};

/* 1806 */
typedef net_tcpConnWithoutReadFrom *_ptr_net_tcpConnWithoutReadFrom;

/* 1807 */
struct net_tcpConnWithoutWriteTo
{
  net_noWriteTo noWriteTo;
  _ptr_net_TCPConn TCPConn;
};

/* 1808 */
typedef net_tcpConnWithoutWriteTo *_ptr_net_tcpConnWithoutWriteTo;

/* 1809 */
typedef BUILTIN_INTERFACE net_temporary;

/* 1810 */
typedef net_temporary *_ptr_net_temporary;

/* 1811 */
struct net_temporaryError
{
  string s;
};

/* 1812 */
typedef net_temporaryError *_ptr_net_temporaryError;

/* 1813 */
typedef BUILTIN_INTERFACE net_timeout;

/* 1814 */
typedef net_timeout *_ptr_net_timeout;

/* 1815 */
struct net_timeoutError
{
};

/* 1816 */
typedef net_timeoutError *_ptr_net_timeoutError;

/* 1817 */
struct __attribute__((aligned(4))) netip_Prefix
{
  netip_Addr ip;
  uint8 bitsPlusOne;
};

/* 1818 */
typedef netip_Prefix *_ptr_netip_Prefix;

/* 1819 */
struct netip_parseAddrError
{
  string in;
  string msg;
  string at;
};

/* 1820 */
typedef netip_parseAddrError *_ptr_netip_parseAddrError;

/* 1821 */
struct nettrace_LookupIPAltResolverKey
{
};

/* 1822 */
typedef nettrace_LookupIPAltResolverKey *_ptr_nettrace_LookupIPAltResolverKey;

/* 1825 */
typedef void (__gostk *PTR_func_slice_interface__comma__bool_comma__error)(_slice_interface_, bool, error);

/* 1826 */
typedef void (__gostk *PTR_funcstring_comma__string_comma__error)(string, string, error);

/* 1823 */
struct nettrace_Trace
{
  PTR_funcstring DNSStart;
  PTR_func_slice_interface__comma__bool_comma__error DNSDone;
  PTR_funcstring_comma__string ConnectStart;
  PTR_funcstring_comma__string_comma__error ConnectDone;
};

/* 1824 */
typedef nettrace_Trace *_ptr_nettrace_Trace;

/* 1827 */
struct nettrace_TraceKey
{
};

/* 1828 */
typedef nettrace_TraceKey *_ptr_nettrace_TraceKey;

/* 1829 */
struct _slice__ptr_nistec_P224Point
{
  _ptr_nistec_P224Point *ptr;
  size_t len;
  size_t cap;
};

/* 1830 */
typedef _ptr_nistec_P224Point nistec_p224Table[15];

/* 1831 */
typedef nistec_p224Table *_ptr_nistec_p224Table;

/* 1832 */
struct _slice__ptr_nistec_P256Point
{
  _ptr_nistec_P256Point *ptr;
  size_t len;
  size_t cap;
};

/* 1833 */
typedef _ptr_nistec_P256Point nistec_p256Table[15];

/* 1834 */
typedef nistec_p256Table *_ptr_nistec_p256Table;

/* 1835 */
struct _slice__ptr_nistec_P384Point
{
  _ptr_nistec_P384Point *ptr;
  size_t len;
  size_t cap;
};

/* 1836 */
typedef _ptr_nistec_P384Point nistec_p384Table[15];

/* 1837 */
typedef nistec_p384Table *_ptr_nistec_p384Table;

/* 1838 */
struct _slice__ptr_nistec_P521Point
{
  _ptr_nistec_P521Point *ptr;
  size_t len;
  size_t cap;
};

/* 1839 */
typedef _ptr_nistec_P521Point nistec_p521Table[15];

/* 1840 */
typedef nistec_p521Table *_ptr_nistec_p521Table;

/* 1841 */
typedef signed __int32 norm_Form;

/* 1842 */
typedef norm_Form *_ptr_norm_Form;

/* 1849 */
typedef unsigned __int8 norm_qcInfo;

/* 1847 */
struct norm_Properties
{
  uint8 pos;
  uint8 size;
  uint8 ccc;
  uint8 tccc;
  uint8 nLead;
  norm_qcInfo flags;
  uint16 index;
};

/* 1852 */
typedef norm_Properties _32_norm_Properties[32];

/* 1853 */
typedef uint8 _128_uint8[128];

/* 1854 */
typedef unsigned __int8 norm_streamSafe;

/* 1859 */
struct norm_input
{
  string str;
  _slice_uint8 bytes;
};

/* 1858 */
typedef norm_Properties (__gostk *PTR_norm_lookupFunc)(norm_input, signed __int32);

/* 1844 */
typedef norm_Iter *_ptr_norm_Iter;

/* 1862 */
typedef _slice_uint8 (__gostk *PTR_norm_iterFunc)(_ptr_norm_Iter);

/* 1856 */
struct norm_formInfo
{
  norm_Form form;
  bool composing;
  bool compatibility;
  PTR_norm_lookupFunc info;
  PTR_norm_iterFunc nextMain;
};

/* 1846 */
typedef norm_reorderBuffer *_ptr_norm_reorderBuffer;

/* 1864 */
typedef bool (__gostk *PTR_func_ptr_norm_reorderBuffer_bool)(_ptr_norm_reorderBuffer);

/* 1845 */
struct norm_reorderBuffer
{
  _32_norm_Properties rune;
  _128_uint8 byte;
  uint8 nbyte;
  norm_streamSafe ss;
  signed __int32 nrune;
  norm_formInfo f;
  norm_input src;
  signed __int32 nsrc;
  norm_input tmpBytes;
  _slice_uint8 out;
  PTR_func_ptr_norm_reorderBuffer_bool flushF;
};

/* 1843 */
struct norm_Iter
{
  norm_reorderBuffer rb;
  _128_uint8 buf;
  norm_Properties info;
  PTR_norm_iterFunc next;
  PTR_norm_iterFunc asciiF;
  signed __int32 p;
  _slice_uint8 multiSeg;
};

/* 1848 */
typedef norm_Properties *_ptr_norm_Properties;

/* 1850 */
typedef norm_qcInfo *_ptr_norm_qcInfo;

/* 1851 */
struct _slice_norm_Properties
{
  norm_Properties *ptr;
  size_t len;
  size_t cap;
};

/* 1855 */
typedef norm_streamSafe *_ptr_norm_streamSafe;

/* 1857 */
typedef norm_formInfo *_ptr_norm_formInfo;

/* 1860 */
typedef norm_input *_ptr_norm_input;

/* 1861 */
typedef PTR_norm_lookupFunc *_ptr_norm_lookupFunc;

/* 1863 */
typedef PTR_norm_iterFunc *_ptr_norm_iterFunc;

/* 1865 */
struct os_LinkError
{
  string Op;
  string Old;
  string New;
  error Err;
};

/* 1866 */
typedef os_LinkError *_ptr_os_LinkError;

/* 1867 */
typedef BUILTIN_INTERFACE os_Signal;

/* 1868 */
typedef os_Signal *_ptr_os_Signal;

/* 1869 */
struct os_SyscallError
{
  string Syscall;
  error Err;
};

/* 1870 */
typedef os_SyscallError *_ptr_os_SyscallError;

/* 1875 */
typedef uint8 _6_uint8[6];

/* 1876 */
struct syscall_Timespec
{
  int32 Sec;
  int32 Nsec;
};

/* 1873 */
struct syscall_Stat_t
{
  uint64 Dev;
  uint16 X__pad1;
  _2_uint8 Pad_cgo_0;
  uint32 X__st_ino;
  uint32 Mode;
  uint32 Nlink;
  uint32 Uid;
  uint32 Gid;
  uint64 Rdev;
  uint16 X__pad2;
  _6_uint8 Pad_cgo_1;
  int64 Size;
  int32 Blksize;
  _4_uint8 Pad_cgo_2;
  int64 Blocks;
  syscall_Timespec Atim;
  syscall_Timespec Mtim;
  syscall_Timespec Ctim;
  uint64 Ino;
};

/* 1871 */
struct os_fileStat
{
  string name;
  int64 size;
  fs_FileMode mode;
  time_Time modTime;
  syscall_Stat_t sys;
};

/* 1872 */
typedef os_fileStat *_ptr_os_fileStat;

/* 1874 */
typedef syscall_Stat_t *_ptr_syscall_Stat_t;

/* 1877 */
typedef syscall_Timespec *_ptr_syscall_Timespec;

/* 1880 */
struct os_noReadFrom
{
};

/* 1878 */
struct os_fileWithoutReadFrom
{
  os_noReadFrom noReadFrom;
  _ptr_os_File File;
};

/* 1879 */
typedef os_fileWithoutReadFrom *_ptr_os_fileWithoutReadFrom;

/* 1881 */
typedef os_noReadFrom *_ptr_os_noReadFrom;

/* 1884 */
struct os_noWriteTo
{
};

/* 1882 */
struct os_fileWithoutWriteTo
{
  os_noWriteTo noWriteTo;
  _ptr_os_File File;
};

/* 1883 */
typedef os_fileWithoutWriteTo *_ptr_os_fileWithoutWriteTo;

/* 1885 */
typedef os_noWriteTo *_ptr_os_noWriteTo;

/* 1886 */
struct os_rawConn
{
  _ptr_os_File file;
};

/* 1887 */
typedef os_rawConn *_ptr_os_rawConn;

/* 1888 */
typedef BUILTIN_INTERFACE os_timeout;

/* 1889 */
typedef os_timeout *_ptr_os_timeout;

/* 1890 */
struct os_unixDirent
{
  string parent;
  string name;
  fs_FileMode typ;
  fs_FileInfo info;
};

/* 1891 */
typedef os_unixDirent *_ptr_os_unixDirent;

/* 1892 */
struct pem_Block
{
  string Type;
  map_string_string Headers;
  _slice_uint8 Bytes;
};

/* 1893 */
typedef pem_Block *_ptr_pem_Block;

/* 1894 */
struct pkix_AlgorithmIdentifier
{
  asn1_ObjectIdentifier Algorithm;
  asn1_RawValue Parameters;
};

/* 1895 */
typedef pkix_AlgorithmIdentifier *_ptr_pkix_AlgorithmIdentifier;

/* 1896 */
struct pkix_RDNSequence
{
  pkix_RelativeDistinguishedNameSET *ptr;
  size_t len;
  size_t cap;
};

/* 1897 */
struct pkix_RelativeDistinguishedNameSET
{
  pkix_AttributeTypeAndValue *ptr;
  size_t len;
  size_t cap;
};

/* 1898 */
typedef pkix_RelativeDistinguishedNameSET *_ptr_pkix_RelativeDistinguishedNameSET;

/* 1899 */
typedef pkix_RDNSequence *_ptr_pkix_RDNSequence;

/* 1900 */
struct poll_DeadlineExceededError
{
};

/* 1901 */
typedef poll_DeadlineExceededError *_ptr_poll_DeadlineExceededError;

/* 1902 */
struct poll_errNetClosing
{
};

/* 1903 */
typedef poll_errNetClosing *_ptr_poll_errNetClosing;

/* 1906 */
struct poll_splicePipeFields
{
  signed __int32 rfd;
  signed __int32 wfd;
  signed __int32 data;
};

/* 1904 */
struct poll_splicePipe
{
  poll_splicePipeFields splicePipeFields;
  _12_uint8 _;
};

/* 1905 */
typedef poll_splicePipe *_ptr_poll_splicePipe;

/* 1907 */
typedef poll_splicePipeFields *_ptr_poll_splicePipeFields;

/* 1908 */
typedef BUILTIN_INTERFACE rand_Source;

/* 1909 */
typedef rand_Source *_ptr_rand_Source;

/* 1910 */
struct rand_hideAgainReader
{
  io_Reader r;
};

/* 1911 */
typedef rand_hideAgainReader *_ptr_rand_hideAgainReader;

/* 1912 */
struct rand_reader
{
  io_Reader f;
  sync_Mutex mu;
  atomic_Uint32 used;
};

/* 1913 */
typedef rand_reader *_ptr_rand_reader;

/* 1914 */
struct rand_runtimeSource
{
};

/* 1915 */
typedef rand_runtimeSource *_ptr_rand_runtimeSource;

/* 1918 */
typedef uint32 _256_uint32[256];

/* 1916 */
struct __attribute__((aligned(4))) rc4_Cipher
{
  _256_uint32 s;
  uint8 i;
  uint8 j;
};

/* 1917 */
typedef rc4_Cipher *_ptr_rc4_Cipher;

/* 1919 */
typedef signed __int32 rc4_KeySizeError;

/* 1920 */
typedef rc4_KeySizeError *_ptr_rc4_KeySizeError;

/* 1921 */
struct reflect_Method
{
  string Name;
  string PkgPath;
  reflect_Type Type;
  reflect_Value Func;
  signed __int32 Index;
};

/* 1922 */
typedef reflect_Method *_ptr_reflect_Method;

/* 1923 */
struct reflect_ValueError
{
  string Method;
  reflect_Kind Kind;
};

/* 1924 */
typedef reflect_ValueError *_ptr_reflect_ValueError;

/* 1929 */
struct _slice_reflect_abiStep
{
  reflect_abiStep *ptr;
  size_t len;
  size_t cap;
};

/* 1927 */
struct reflect_abiSeq
{
  _slice_reflect_abiStep steps;
  _slice_int valueStart;
  uintptr stackBytes;
  signed __int32 iregs;
  signed __int32 fregs;
};

/* 1935 */
typedef reflect_bitVector *_ptr_reflect_bitVector;

/* 1925 */
struct __attribute__((aligned(4))) reflect_abiDesc
{
  reflect_abiSeq call;
  reflect_abiSeq ret;
  uintptr stackCallArgsSize;
  uintptr retOffset;
  uintptr spill;
  _ptr_reflect_bitVector stackPtrs;
  abi_IntArgRegBitmap inRegPtrs;
  abi_IntArgRegBitmap outRegPtrs;
  _BYTE gap58[4];
};

/* 1932 */
typedef signed __int32 reflect_abiStepKind;

/* 1930 */
struct reflect_abiStep
{
  reflect_abiStepKind kind;
  uintptr offset;
  uintptr size;
  uintptr stkOff;
  signed __int32 ireg;
  signed __int32 freg;
};

/* 1934 */
struct reflect_bitVector
{
  uint32 n;
  _slice_uint8 data;
};

/* 1926 */
typedef reflect_abiDesc *_ptr_reflect_abiDesc;

/* 1928 */
typedef reflect_abiSeq *_ptr_reflect_abiSeq;

/* 1931 */
typedef reflect_abiStep *_ptr_reflect_abiStep;

/* 1933 */
typedef reflect_abiStepKind *_ptr_reflect_abiStepKind;

/* 1936 */
struct reflect_layoutKey
{
  _ptr_abi_FuncType ftyp;
  _ptr_abi_Type rcvr;
};

/* 1937 */
typedef reflect_layoutKey *_ptr_reflect_layoutKey;

/* 1941 */
typedef sync_Pool *_ptr_sync_Pool;

/* 1938 */
struct reflect_layoutType
{
  _ptr_abi_Type t;
  _ptr_sync_Pool framePool;
  reflect_abiDesc abid;
};

/* 1940 */
struct sync_Pool
{
  sync_noCopy noCopy;
  unsafe_Pointer local;
  uintptr localSize;
  unsafe_Pointer victim;
  uintptr victimSize;
  PTR_func_interface_ New;
};

/* 1939 */
typedef reflect_layoutType *_ptr_reflect_layoutType;

/* 1942 */
struct __attribute__((aligned(8))) reflect_makeFuncCtxt
{
  uintptr fn;
  _ptr_reflect_bitVector stack;
  uintptr argLen;
  abi_IntArgRegBitmap regPtrs;
};

/* 1943 */
typedef reflect_makeFuncCtxt *_ptr_reflect_makeFuncCtxt;

/* 1944 */
struct reflect_methodValue
{
  reflect_makeFuncCtxt makeFuncCtxt;
  signed __int32 method;
  reflect_Value rcvr;
};

/* 1945 */
typedef reflect_methodValue *_ptr_reflect_methodValue;

/* 1946 */
struct reflect_ptrType
{
  abi_PtrType PtrType;
};

/* 1947 */
typedef reflect_ptrType *_ptr_reflect_ptrType;

/* 1948 */
struct reflect_rtype
{
  abi_Type t;
};

/* 1949 */
typedef reflect_rtype *_ptr_reflect_rtype;

/* 1950 */
typedef reflect_Method (__gostk *PTR_funcint_reflect_Method)(signed __int32);

/* 1952 */
struct retval_2CE5A0
{
  reflect_Method 0;
  bool 1;
};

/* 1951 */
typedef retval_2CE5A0 (__gostk *PTR_funcstring_reflect_Method_comma__bool)(string);

/* 1953 */
struct reflect_visit
{
  unsafe_Pointer a1;
  unsafe_Pointer a2;
  reflect_Type typ;
};

/* 1954 */
typedef reflect_visit *_ptr_reflect_visit;

/* 1955 */
typedef BUILTIN_INTERFACE reflectlite_Type;

/* 1956 */
typedef bool (__gostk *PTR_funcreflectlite_Type_bool)(reflectlite_Type);

/* 1957 */
typedef reflectlite_Type (__gostk *PTR_func_reflectlite_Type)();

/* 1958 */
typedef reflectlite_Type *_ptr_reflectlite_Type;

/* 1959 */
struct __attribute__((aligned(4))) reflectlite_ValueError
{
  string Method;
  abi_Kind Kind;
};

/* 1960 */
typedef reflectlite_ValueError *_ptr_reflectlite_ValueError;

/* 1961 */
struct reflectlite_rtype
{
  _ptr_abi_Type Type;
};

/* 1962 */
typedef reflectlite_rtype *_ptr_reflectlite_rtype;

/* 1963 */
struct rsa_CRTValue
{
  _ptr_big_Int Exp;
  _ptr_big_Int Coeff;
  _ptr_big_Int R;
};

/* 1964 */
typedef rsa_CRTValue *_ptr_rsa_CRTValue;

/* 1965 */
struct rsa_PSSOptions
{
  signed __int32 SaltLength;
  crypto_Hash Hash;
};

/* 1966 */
typedef rsa_PSSOptions *_ptr_rsa_PSSOptions;

/* 1969 */
struct _slice_rsa_CRTValue
{
  rsa_CRTValue *ptr;
  size_t len;
  size_t cap;
};

/* 1967 */
struct rsa_PrecomputedValues
{
  _ptr_big_Int Dp;
  _ptr_big_Int Dq;
  _ptr_big_Int Qinv;
  _slice_rsa_CRTValue CRTValues;
  _ptr_bigmod_Modulus n;
  _ptr_bigmod_Modulus p;
  _ptr_bigmod_Modulus q;
};

/* 1968 */
typedef rsa_PrecomputedValues *_ptr_rsa_PrecomputedValues;

/* 1972 */
struct rsa_PublicKey
{
  _ptr_big_Int N;
  signed __int32 E;
};

/* 1974 */
struct _slice__ptr_big_Int
{
  _ptr_big_Int *ptr;
  size_t len;
  size_t cap;
};

/* 1970 */
struct rsa_PrivateKey
{
  rsa_PublicKey PublicKey;
  _ptr_big_Int D;
  _slice__ptr_big_Int Primes;
  rsa_PrecomputedValues Precomputed;
};

/* 1971 */
typedef rsa_PrivateKey *_ptr_rsa_PrivateKey;

/* 1973 */
typedef rsa_PublicKey *_ptr_rsa_PublicKey;

/* 1978 */
typedef runtime_Func *_ptr_runtime_Func;

/* 1982 */
typedef runtime__func *_ptr_runtime__func;

/* 1988 */
typedef runtime_moduledata *_ptr_runtime_moduledata;

/* 1979 */
struct runtime_funcInfo
{
  _ptr_runtime__func _func;
  _ptr_runtime_moduledata datap;
};

/* 1975 */
struct runtime_Frame
{
  uintptr PC;
  _ptr_runtime_Func Func;
  string Function;
  string File;
  signed __int32 Line;
  signed __int32 startLine;
  uintptr Entry;
  runtime_funcInfo funcInfo;
};

/* 1977 */
struct runtime_Func
{
  $8EF4127CF77ECA3DDB612FCF233DC3A8 opaque;
};

/* 1985 */
struct sys_nih
{
};

/* 1983 */
struct sys_NotInHeap
{
  sys_nih _;
};

/* 1981 */
struct runtime__func
{
  sys_NotInHeap NotInHeap;
  uint32 entryOff;
  int32 nameOff;
  int32 args;
  uint32 deferreturn;
  uint32 pcsp;
  uint32 pcfile;
  uint32 pcln;
  uint32 npcdata;
  uint32 cuOffset;
  int32 startLine;
  abi_FuncID funcID;
  abi_FuncFlag flag;
  _1_uint8 _;
  uint8 nfuncdata;
};

/* 1990 */
typedef runtime_pcHeader *_ptr_runtime_pcHeader;

/* 1991 */
struct _slice_runtime_functab
{
  runtime_functab *ptr;
  size_t len;
  size_t cap;
};

/* 1994 */
struct _slice_runtime_textsect
{
  runtime_textsect *ptr;
  size_t len;
  size_t cap;
};

/* 1997 */
struct _slice__ptr_abi_ITab
{
  _ptr_abi_ITab *ptr;
  size_t len;
  size_t cap;
};

/* 1998 */
struct _slice_runtime_ptabEntry
{
  runtime_ptabEntry *ptr;
  size_t len;
  size_t cap;
};

/* 2001 */
struct _slice_runtime_modulehash
{
  runtime_modulehash *ptr;
  size_t len;
  size_t cap;
};

/* 2006 */
typedef runtime_initTask *_ptr_runtime_initTask;

/* 2004 */
struct _slice__ptr_runtime_initTask
{
  _ptr_runtime_initTask *ptr;
  size_t len;
  size_t cap;
};

/* 2007 */
struct runtime_bitvector
{
  int32 n;
  _ptr_uint8 bytedata;
};

/* 2009 */
typedef void *map_abi_TypeOff__ptr_abi_Type;

/* 1987 */
struct runtime_moduledata
{
  sys_NotInHeap NotInHeap;
  _ptr_runtime_pcHeader pcHeader;
  _slice_uint8 funcnametab;
  _slice_uint32 cutab;
  _slice_uint8 filetab;
  _slice_uint8 pctab;
  _slice_uint8 pclntable;
  _slice_runtime_functab ftab;
  uintptr findfunctab;
  uintptr minpc;
  uintptr maxpc;
  uintptr text;
  uintptr etext;
  uintptr noptrdata;
  uintptr enoptrdata;
  uintptr data;
  uintptr edata;
  uintptr bss;
  uintptr ebss;
  uintptr noptrbss;
  uintptr enoptrbss;
  uintptr covctrs;
  uintptr ecovctrs;
  uintptr end;
  uintptr gcdata;
  uintptr gcbss;
  uintptr types;
  uintptr etypes;
  uintptr rodata;
  uintptr gofunc;
  _slice_runtime_textsect textsectmap;
  _slice_int32 typelinks;
  _slice__ptr_abi_ITab itablinks;
  _slice_runtime_ptabEntry ptab;
  string pluginpath;
  _slice_runtime_modulehash pkghashes;
  _slice__ptr_runtime_initTask inittasks;
  string modulename;
  _slice_runtime_modulehash modulehashes;
  uint8 hasmain;
  bool bad;
  runtime_bitvector gcdatamask;
  runtime_bitvector gcbssmask;
  map_abi_TypeOff__ptr_abi_Type typemap;
  _ptr_runtime_moduledata next;
};

/* 1989 */
struct runtime_pcHeader
{
  uint32 magic;
  uint8 pad1;
  uint8 pad2;
  uint8 minLC;
  uint8 ptrSize;
  signed __int32 nfunc;
  uint_0 nfiles;
  uintptr textStart;
  uintptr funcnameOffset;
  uintptr cuOffset;
  uintptr filetabOffset;
  uintptr pctabOffset;
  uintptr pclnOffset;
};

/* 1992 */
struct runtime_functab
{
  uint32 entryoff;
  uint32 funcoff;
};

/* 1995 */
struct runtime_textsect
{
  uintptr vaddr;
  uintptr end;
  uintptr baseaddr;
};

/* 1999 */
struct runtime_ptabEntry
{
  abi_NameOff name;
  abi_TypeOff typ;
};

/* 2002 */
struct runtime_modulehash
{
  string modulename;
  string linktimehash;
  _ptr_string runtimehash;
};

/* 2005 */
struct runtime_initTask
{
  uint32 state;
  uint32 nfns;
};

/* 1976 */
typedef runtime_Frame *_ptr_runtime_Frame;

/* 1980 */
typedef runtime_funcInfo *_ptr_runtime_funcInfo;

/* 1984 */
typedef sys_NotInHeap *_ptr_sys_NotInHeap;

/* 1986 */
typedef sys_nih *_ptr_sys_nih;

/* 1993 */
typedef runtime_functab *_ptr_runtime_functab;

/* 1996 */
typedef runtime_textsect *_ptr_runtime_textsect;

/* 2000 */
typedef runtime_ptabEntry *_ptr_runtime_ptabEntry;

/* 2003 */
typedef runtime_modulehash *_ptr_runtime_modulehash;

/* 2008 */
typedef runtime_bitvector *_ptr_runtime_bitvector;

/* 2012 */
typedef abi_TypeOff _8_abi_TypeOff[8];

/* 2014 */
typedef _ptr_abi_Type _8__ptr_abi_Type[8];

/* 2010 */
struct map_bucket_abi_TypeOff__ptr_abi_Type
{
  _8_uint8 topbits;
  _8_abi_TypeOff keys;
  _8__ptr_abi_Type elems;
  unsafe_Pointer overflow;
};

/* 2011 */
struct _slice_abi_TypeOff
{
  abi_TypeOff *ptr;
  size_t len;
  size_t cap;
};

/* 2013 */
struct _slice__ptr_abi_Type
{
  _ptr_abi_Type *ptr;
  size_t len;
  size_t cap;
};

/* 2017 */
struct _slice_runtime_Frame
{
  runtime_Frame *ptr;
  size_t len;
  size_t cap;
};

/* 2018 */
typedef runtime_Frame _2_runtime_Frame[2];

/* 2015 */
struct runtime_Frames
{
  _slice_uintptr callers;
  uintptr nextPC;
  _slice_runtime_Frame frames;
  _2_runtime_Frame frameStore;
};

/* 2016 */
typedef runtime_Frames *_ptr_runtime_Frames;

/* 2020 */
typedef runtime_PanicNilError *_ptr_runtime_PanicNilError;

/* 2022 */
typedef _ptr_runtime_PanicNilError _0__ptr_runtime_PanicNilError[];

/* 2019 */
struct runtime_PanicNilError
{
  _0__ptr_runtime_PanicNilError _;
};

/* 2021 */
struct _slice__ptr_runtime_PanicNilError
{
  _ptr_runtime_PanicNilError *ptr;
  size_t len;
  size_t cap;
};

/* 2023 */
struct runtime_TypeAssertionError
{
  _ptr_abi_Type _interface;
  _ptr_abi_Type concrete;
  _ptr_abi_Type asserted;
  string missingMethod;
};

/* 2024 */
typedef runtime_TypeAssertionError *_ptr_runtime_TypeAssertionError;

/* 2026 */
typedef runtime__defer *_ptr_runtime__defer;

/* 2025 */
struct runtime__defer
{
  bool heap;
  bool rangefunc;
  uintptr sp;
  uintptr pc;
  PTR_func fn;
  _ptr_runtime__defer link;
  _ptr_atomic_Pointer_runtime__defer_ head;
};

/* 2028 */
typedef runtime__panic *_ptr_runtime__panic;

/* 2027 */
struct __attribute__((aligned(2))) runtime__panic
{
  unsafe_Pointer argp;
  interface_ arg;
  _ptr_runtime__panic link;
  uintptr startPC;
  unsafe_Pointer startSP;
  unsafe_Pointer sp;
  uintptr lr;
  unsafe_Pointer fp;
  uintptr retpc;
  _ptr_uint8 deferBitsPtr;
  unsafe_Pointer slotsPtr;
  bool recovered;
  bool goexit;
  bool deferreturn;
};

/* 2029 */
struct runtime__typePair
{
  _ptr_abi_Type t1;
  _ptr_abi_Type t2;
};

/* 2030 */
typedef runtime__typePair *_ptr_runtime__typePair;

/* 2033 */
struct runtime_offAddr
{
  uintptr a;
};

/* 2031 */
struct runtime_addrRange
{
  runtime_offAddr base;
  runtime_offAddr limit;
};

/* 2032 */
typedef runtime_addrRange *_ptr_runtime_addrRange;

/* 2034 */
typedef runtime_offAddr *_ptr_runtime_offAddr;

/* 2037 */
typedef unsigned __int8 runtime_boundsErrorCode;

/* 2035 */
struct __attribute__((aligned(4))) runtime_boundsError
{
  int64 x;
  signed __int32 y;
  bool signed;
  runtime_boundsErrorCode code;
};

/* 2036 */
typedef runtime_boundsError *_ptr_runtime_boundsError;

/* 2038 */
typedef runtime_boundsErrorCode *_ptr_runtime_boundsErrorCode;

/* 2039 */
typedef uintptr runtime_cgoCallers[32];

/* 2040 */
typedef runtime_cgoCallers *_ptr_runtime_cgoCallers;

/* 2043 */
typedef unsigned __int32 runtime_guintptr;

/* 2042 */
typedef runtime_coro *_ptr_runtime_coro;

/* 2045 */
typedef void (__gostk *PTR_func_ptr_runtime_coro)(_ptr_runtime_coro);

/* 2047 */
typedef runtime_m *_ptr_runtime_m;

/* 2041 */
struct runtime_coro
{
  runtime_guintptr gp;
  PTR_func_ptr_runtime_coro f;
  _ptr_runtime_m mp;
  uint32 lockedExt;
  uint32 lockedInt;
};

/* 2049 */
typedef runtime_g *_ptr_runtime_g;

/* 2052 */
struct runtime_gobuf
{
  uintptr sp;
  uintptr pc;
  runtime_guintptr g;
  unsafe_Pointer ctxt;
  uintptr ret;
  uintptr lr;
  uintptr bp;
};

/* 2050 */
struct runtime_stack
{
  uintptr lo;
  uintptr hi;
};

/* 2085 */
struct runtime_gsignalStack
{
  runtime_stack stack;
  uintptr stackguard0;
  uintptr stackguard1;
  uintptr stktopsp;
};

/* 2087 */
typedef uint32 runtime_sigset[2];

/* 2089 */
typedef uintptr _6_uintptr[6];

/* 2090 */
typedef unsigned __int32 runtime_puintptr;

/* 2092 */
typedef unsigned __int32 runtime_throwType;

/* 2094 */
struct runtime_note
{
  uintptr key;
};

/* 2056 */
typedef unsigned __int32 runtime_muintptr;

/* 2096 */
typedef uintptr _32_uintptr[32];

/* 2097 */
struct __attribute__((aligned(8))) runtime_mLockProfile
{
  atomic_Int64_0 waitTime;
  _slice_uintptr stack;
  uintptr pending;
  int64 cycles;
  int64 cyclesLost;
  bool disabled;
};

/* 2099 */
typedef bool (__gostk *PTR_func_ptr_runtime_g_comma__unsafe_Pointer_bool)(_ptr_runtime_g, unsafe_Pointer);

/* 2100 */
typedef unsigned __int8 runtime_traceBlockReason;

/* 2105 */
typedef runtime_traceBuf *_ptr_runtime_traceBuf;

/* 2112 */
typedef _ptr_runtime_traceBuf _2__ptr_runtime_traceBuf[2];

/* 2102 */
struct runtime_mTraceState
{
  atomic_Uintptr seqlock;
  _2__ptr_runtime_traceBuf buf;
  _ptr_runtime_m link;
};

/* 2113 */
struct runtime_libcall
{
  uintptr fn;
  uintptr n;
  uintptr args;
  uintptr r1;
  uintptr r2;
  uintptr err;
};

/* 2115 */
struct runtime_winlibcall
{
};

/* 2119 */
struct runtime_pcvalueCacheEnt
{
  uintptr targetpc;
  uint32 off;
  int32 val;
  uintptr valPC;
};

/* 2122 */
typedef runtime_pcvalueCacheEnt _8_runtime_pcvalueCacheEnt[8];

/* 2124 */
typedef _8_runtime_pcvalueCacheEnt _2__8_runtime_pcvalueCacheEnt[2];

/* 2117 */
struct runtime_pcvalueCache
{
  _2__8_runtime_pcvalueCacheEnt entries;
  signed __int32 inUse;
};

/* 2125 */
struct runtime_dlogPerM
{
};

/* 2127 */
struct __attribute__((aligned(4))) runtime_mOS
{
  int32 profileTimer;
  atomic_Bool_0 profileTimerValid;
  atomic_Uint8 needPerThreadSyscall;
};

/* 2131 */
typedef signed __int32 runtime_lockRank;

/* 2129 */
struct runtime_heldLockInfo
{
  uintptr lockAddr;
  runtime_lockRank rank;
};

/* 2134 */
typedef runtime_heldLockInfo _10_runtime_heldLockInfo[10];

/* 2046 */
struct __attribute__((aligned(8))) runtime_m
{
  _ptr_runtime_g g0;
  runtime_gobuf morebuf;
  uint32 divmod;
  uint32 _;
  uint64 procid;
  _ptr_runtime_g gsignal;
  runtime_gsignalStack goSigStack;
  runtime_sigset sigmask;
  _6_uintptr tls;
  PTR_func mstartfn;
  _ptr_runtime_g curg;
  runtime_guintptr caughtsig;
  runtime_puintptr p;
  runtime_puintptr nextp;
  runtime_puintptr oldp;
  int64 id;
  int32 mallocing;
  runtime_throwType throwing;
  string preemptoff;
  int32 locks;
  int32 dying;
  int32 profilehz;
  bool spinning;
  bool blocked;
  bool newSigstack;
  int8 printlock;
  bool incgo;
  bool isextra;
  bool isExtraInC;
  bool isExtraInSig;
  atomic_Uint32_0 freeWait;
  bool needextram;
  bool g0StackAccurate;
  uint8 traceback;
  __attribute__((packed)) __attribute__((aligned(2))) uint64 ncgocall;
  int32 ncgo;
  atomic_Uint32_0 cgoCallersUse;
  _ptr_runtime_cgoCallers cgoCallers;
  runtime_note park;
  _ptr_runtime_m alllink;
  runtime_muintptr schedlink;
  runtime_guintptr lockedg;
  _32_uintptr createstack;
  uint32 lockedExt;
  uint32 lockedInt;
  runtime_muintptr nextwaitm;
  runtime_mLockProfile mLockProfile;
  _slice_uintptr profStack;
  PTR_func_ptr_runtime_g_comma__unsafe_Pointer_bool waitunlockf;
  unsafe_Pointer waitlock;
  signed __int32 waitTraceSkip;
  runtime_traceBlockReason waitTraceBlockReason;
  uint32 syscalltick;
  _ptr_runtime_m freelink;
  runtime_mTraceState trace;
  runtime_libcall libcall;
  uintptr libcallpc;
  uintptr libcallsp;
  runtime_guintptr libcallg;
  runtime_winlibcall winsyscall;
  uintptr vdsoSP;
  uintptr vdsoPC;
  atomic_Uint32_0 preemptGen;
  atomic_Uint32_0 signalPending;
  runtime_pcvalueCache pcvalueCache;
  runtime_dlogPerM dlogPerM;
  runtime_mOS mOS;
  chacha8rand_State chacha8;
  uint64 cheaprand;
  signed __int32 locksHeldLen;
  _10_runtime_heldLockInfo locksHeld;
};

/* 2054 */
typedef unsigned __int8 runtime_waitReason;

/* 2059 */
typedef runtime_sudog *_ptr_runtime_sudog;

/* 2063 */
typedef runtime_timer *_ptr_runtime_timer;

/* 2076 */
struct runtime_goroutineProfileStateHolder
{
  atomic_noCopy_0 noCopy;
  uint32 value;
};

/* 2083 */
typedef atomic_Uint32_0 _3_atomic_Uint32[3];

/* 2084 */
typedef uint64 _2_uint64[2];

/* 2080 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_traceSchedResourceState
{
  _3_atomic_Uint32 statusTraced;
  _2_uint64 seq;
};

/* 2078 */
struct runtime_gTraceState
{
  runtime_traceSchedResourceState traceSchedResourceState;
};

/* 2048 */
struct runtime_g
{
  runtime_stack stack;
  uintptr stackguard0;
  uintptr stackguard1;
  _ptr_runtime__panic _panic;
  _ptr_runtime__defer _defer;
  _ptr_runtime_m m;
  runtime_gobuf sched;
  uintptr syscallsp;
  uintptr syscallpc;
  uintptr syscallbp;
  uintptr stktopsp;
  unsafe_Pointer param;
  atomic_Uint32_0 atomicstatus;
  uint32 stackLock;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 goid;
  runtime_guintptr schedlink;
  int64 waitsince;
  runtime_waitReason waitreason;
  bool preempt;
  bool preemptStop;
  bool preemptShrink;
  bool asyncSafePoint;
  bool paniconfault;
  bool gcscandone;
  bool throwsplit;
  bool activeStackChans;
  atomic_Bool_0 parkingOnChan;
  bool inMarkAssist;
  bool coroexit;
  int8 raceignore;
  bool nocgocallback;
  bool tracking;
  uint8 trackingSeq;
  int64 trackingStamp;
  int64 runnableTime;
  runtime_muintptr lockedm;
  uint32 sig;
  _slice_uint8 writebuf;
  uintptr sigcode0;
  uintptr sigcode1;
  uintptr sigpc;
  uint64 parentGoid;
  uintptr gopc;
  _ptr__slice_runtime_ancestorInfo ancestors;
  uintptr startpc;
  uintptr racectx;
  _ptr_runtime_sudog waiting;
  _slice_uintptr cgoCtxt;
  unsafe_Pointer labels;
  _ptr_runtime_timer timer;
  int64 sleepWhen;
  atomic_Uint32_0 selectDone;
  runtime_goroutineProfileStateHolder goroutineProfiled;
  _ptr_runtime_coro coroarg;
  runtime_gTraceState trace;
  int64 gcAssistBytes;
};

/* 2108 */
typedef unsigned __int64 runtime_traceTime;

/* 2106 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_traceBufHeader
{
  _ptr_runtime_traceBuf link;
  runtime_traceTime lastTime;
  signed __int32 pos;
  signed __int32 lenPos;
};

/* 2110 */
typedef uint8 _65516_uint8[65516];

/* 2104 */
struct runtime_traceBuf
{
  sys_NotInHeap _;
  runtime_traceBufHeader traceBufHeader;
  _65516_uint8 arr;
};

/* 2061 */
typedef runtime_hchan *_ptr_runtime_hchan;

/* 2058 */
struct runtime_sudog
{
  _ptr_runtime_g g;
  _ptr_runtime_sudog next;
  _ptr_runtime_sudog prev;
  unsafe_Pointer elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  _ptr_runtime_sudog parent;
  _ptr_runtime_sudog waitlink;
  _ptr_runtime_sudog waittail;
  _ptr_runtime_hchan c;
};

/* 2066 */
struct runtime_lockRankStruct
{
};

/* 2064 */
struct runtime_mutex
{
  runtime_lockRankStruct lockRankStruct;
  uintptr key;
};

/* 2068 */
typedef void (__gostk *PTR_funcinterface__comma__uintptr_comma__int64)(interface_, uintptr, int64);

/* 2070 */
typedef runtime_timers *_ptr_runtime_timers;

/* 2062 */
struct runtime_timer
{
  runtime_mutex mu;
  atomic_Uint8 astate;
  uint8 state;
  bool isChan;
  uint32 blocked;
  __attribute__((packed)) __attribute__((aligned(1))) int64 when;
  __attribute__((packed)) __attribute__((aligned(1))) int64 period;
  PTR_funcinterface__comma__uintptr_comma__int64 f;
  interface_ arg;
  uintptr seq;
  _ptr_runtime_timers ts;
  runtime_mutex sendLock;
  atomic_Int32_0 isSending;
};

/* 2074 */
struct runtime_waitq
{
  _ptr_runtime_sudog first;
  _ptr_runtime_sudog last;
};

/* 2060 */
struct runtime_hchan
{
  uint_0 qcount;
  uint_0 dataqsiz;
  unsafe_Pointer buf;
  uint16 elemsize;
  uint32 closed;
  _ptr_runtime_timer timer;
  _ptr_abi_Type elemtype;
  uint_0 sendx;
  uint_0 recvx;
  runtime_waitq recvq;
  runtime_waitq sendq;
  runtime_mutex lock;
};

/* 2071 */
struct _slice_runtime_timerWhen
{
  runtime_timerWhen *ptr;
  size_t len;
  size_t cap;
};

/* 2069 */
struct runtime_timers
{
  runtime_mutex mu;
  _slice_runtime_timerWhen heap;
  atomic_Uint32_0 len;
  atomic_Int32_0 zombies;
  uintptr raceCtx;
  atomic_Int64_0 minWhenHeap;
  atomic_Int64_0 minWhenModified;
};

/* 2072 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_timerWhen
{
  _ptr_runtime_timer timer;
  int64 when;
};

/* 2044 */
typedef runtime_guintptr *_ptr_runtime_guintptr;

/* 2051 */
typedef runtime_stack *_ptr_runtime_stack;

/* 2053 */
typedef runtime_gobuf *_ptr_runtime_gobuf;

/* 2055 */
typedef runtime_waitReason *_ptr_runtime_waitReason;

/* 2057 */
typedef runtime_muintptr *_ptr_runtime_muintptr;

/* 2065 */
typedef runtime_mutex *_ptr_runtime_mutex;

/* 2067 */
typedef runtime_lockRankStruct *_ptr_runtime_lockRankStruct;

/* 2073 */
typedef runtime_timerWhen *_ptr_runtime_timerWhen;

/* 2075 */
typedef runtime_waitq *_ptr_runtime_waitq;

/* 2077 */
typedef runtime_goroutineProfileStateHolder *_ptr_runtime_goroutineProfileStateHolder;

/* 2079 */
typedef runtime_gTraceState *_ptr_runtime_gTraceState;

/* 2081 */
typedef runtime_traceSchedResourceState *_ptr_runtime_traceSchedResourceState;

/* 2082 */
struct _slice_atomic_Uint32
{
  atomic_Uint32_0 *ptr;
  size_t len;
  size_t cap;
};

/* 2086 */
typedef runtime_gsignalStack *_ptr_runtime_gsignalStack;

/* 2088 */
typedef runtime_sigset *_ptr_runtime_sigset;

/* 2091 */
typedef runtime_puintptr *_ptr_runtime_puintptr;

/* 2093 */
typedef runtime_throwType *_ptr_runtime_throwType;

/* 2095 */
typedef runtime_note *_ptr_runtime_note;

/* 2098 */
typedef runtime_mLockProfile *_ptr_runtime_mLockProfile;

/* 2101 */
typedef runtime_traceBlockReason *_ptr_runtime_traceBlockReason;

/* 2103 */
typedef runtime_mTraceState *_ptr_runtime_mTraceState;

/* 2107 */
typedef runtime_traceBufHeader *_ptr_runtime_traceBufHeader;

/* 2109 */
typedef runtime_traceTime *_ptr_runtime_traceTime;

/* 2111 */
struct _slice__ptr_runtime_traceBuf
{
  _ptr_runtime_traceBuf *ptr;
  size_t len;
  size_t cap;
};

/* 2114 */
typedef runtime_libcall *_ptr_runtime_libcall;

/* 2116 */
typedef runtime_winlibcall *_ptr_runtime_winlibcall;

/* 2118 */
typedef runtime_pcvalueCache *_ptr_runtime_pcvalueCache;

/* 2120 */
typedef runtime_pcvalueCacheEnt *_ptr_runtime_pcvalueCacheEnt;

/* 2121 */
struct _slice_runtime_pcvalueCacheEnt
{
  runtime_pcvalueCacheEnt *ptr;
  size_t len;
  size_t cap;
};

/* 2123 */
struct _slice__8_runtime_pcvalueCacheEnt
{
  _8_runtime_pcvalueCacheEnt *ptr;
  size_t len;
  size_t cap;
};

/* 2126 */
typedef runtime_dlogPerM *_ptr_runtime_dlogPerM;

/* 2128 */
typedef runtime_mOS *_ptr_runtime_mOS;

/* 2130 */
typedef runtime_heldLockInfo *_ptr_runtime_heldLockInfo;

/* 2132 */
typedef runtime_lockRank *_ptr_runtime_lockRank;

/* 2133 */
struct _slice_runtime_heldLockInfo
{
  runtime_heldLockInfo *ptr;
  size_t len;
  size_t cap;
};

/* 2135 */
struct runtime_cpuStats
{
  int64 GCAssistTime;
  int64 GCDedicatedTime;
  int64 GCIdleTime;
  int64 GCPauseTime;
  int64 GCTotalTime;
  int64 ScavengeAssistTime;
  int64 ScavengeBgTime;
  int64 ScavengeTotalTime;
  int64 IdleTime;
  int64 UserTime;
  int64 TotalTime;
};

/* 2136 */
typedef runtime_cpuStats *_ptr_runtime_cpuStats;

/* 2137 */
struct runtime_cpuStatsAggregate
{
  runtime_cpuStats cpuStats;
};

/* 2138 */
typedef runtime_cpuStatsAggregate *_ptr_runtime_cpuStatsAggregate;

/* 2139 */
struct runtime_errorAddressString
{
  string msg;
  uintptr addr;
};

/* 2140 */
typedef runtime_errorAddressString *_ptr_runtime_errorAddressString;

/* 2141 */
typedef BUILTIN_STRING runtime_errorString;

/* 2142 */
typedef runtime_errorString *_ptr_runtime_errorString;

/* 2143 */
struct runtime_funcinl
{
  uint32 ones;
  uintptr entry;
  string name;
  string file;
  int32 line;
  int32 startLine;
};

/* 2144 */
typedef runtime_funcinl *_ptr_runtime_funcinl;

/* 2145 */
struct runtime_gList
{
  runtime_guintptr head;
};

/* 2146 */
typedef runtime_gList *_ptr_runtime_gList;

/* 2149 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_lfnode
{
  uint64 next;
  uintptr pushcnt;
};

/* 2147 */
struct runtime_gcBgMarkWorkerNode
{
  runtime_lfnode node;
  runtime_guintptr gp;
  runtime_muintptr m;
};

/* 2148 */
typedef runtime_gcBgMarkWorkerNode *_ptr_runtime_gcBgMarkWorkerNode;

/* 2150 */
typedef runtime_lfnode *_ptr_runtime_lfnode;

/* 2151 */
struct runtime_gcBits
{
  sys_NotInHeap _;
  uint8 x;
};

/* 2152 */
typedef runtime_gcBits *_ptr_runtime_gcBits;

/* 2153 */
typedef signed __int32 runtime_gcMarkWorkerMode;

/* 2154 */
typedef runtime_gcMarkWorkerMode *_ptr_runtime_gcMarkWorkerMode;

/* 2155 */
struct runtime_gcStatsAggregate
{
  uint64 heapScan;
  uint64 stackScan;
  uint64 globalsScan;
  uint64 totalScan;
};

/* 2156 */
typedef runtime_gcStatsAggregate *_ptr_runtime_gcStatsAggregate;

/* 2160 */
typedef runtime_workbuf *_ptr_runtime_workbuf;

/* 2157 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_gcWork
{
  _ptr_runtime_workbuf wbuf1;
  _ptr_runtime_workbuf wbuf2;
  uint64 bytesMarked;
  int64 heapScanWork;
  bool flushedWork;
};

/* 2161 */
struct runtime_workbufhdr
{
  runtime_lfnode node;
  signed __int32 nobj;
};

/* 2163 */
typedef uintptr _508_uintptr[508];

/* 2159 */
struct runtime_workbuf
{
  sys_NotInHeap _;
  runtime_workbufhdr workbufhdr;
  _508_uintptr obj;
};

/* 2158 */
typedef runtime_gcWork *_ptr_runtime_gcWork;

/* 2162 */
typedef runtime_workbufhdr *_ptr_runtime_workbufhdr;

/* 2164 */
typedef unsigned __int32 runtime_gclinkptr;

/* 2165 */
typedef runtime_gclinkptr *_ptr_runtime_gclinkptr;

/* 2170 */
typedef uint64 _68_uint64[68];

/* 2168 */
struct runtime_heapStatsDelta
{
  int64 committed;
  int64 released;
  int64 inHeap;
  int64 inStacks;
  int64 inWorkBufs;
  int64 inPtrScalarBits;
  uint64 tinyAllocCount;
  uint64 largeAlloc;
  uint64 largeAllocCount;
  _68_uint64 smallAllocCount;
  uint64 largeFree;
  uint64 largeFreeCount;
  _68_uint64 smallFreeCount;
};

/* 2166 */
struct runtime_heapStatsAggregate
{
  runtime_heapStatsDelta heapStatsDelta;
  uint64 inObjects;
  uint64 numObjects;
  uint64 totalAllocated;
  uint64 totalFreed;
  uint64 totalAllocs;
  uint64 totalFrees;
};

/* 2167 */
typedef runtime_heapStatsAggregate *_ptr_runtime_heapStatsAggregate;

/* 2169 */
typedef runtime_heapStatsDelta *_ptr_runtime_heapStatsDelta;

/* 2174 */
typedef runtime_mapextra *_ptr_runtime_mapextra;

/* 2171 */
struct runtime_hmap
{
  signed __int32 count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  unsafe_Pointer buckets;
  unsafe_Pointer oldbuckets;
  uintptr nevacuate;
  _ptr_runtime_mapextra extra;
};

/* 2173 */
struct runtime_mapextra
{
  _ptr__slice__ptr_runtime_bmap overflow;
  _ptr__slice__ptr_runtime_bmap oldoverflow;
  _ptr_runtime_bmap nextOverflow;
};

/* 2172 */
typedef runtime_hmap *_ptr_runtime_hmap;

/* 2175 */
struct runtime_limiterEvent
{
  atomic_Uint64_0 stamp;
};

/* 2176 */
typedef runtime_limiterEvent *_ptr_runtime_limiterEvent;

/* 2180 */
typedef runtime_mspan *_ptr_runtime_mspan;

/* 2177 */
struct runtime_mSpanList
{
  sys_NotInHeap _;
  _ptr_runtime_mspan first;
  _ptr_runtime_mspan last;
};

/* 2178 */
typedef runtime_mSpanList *_ptr_runtime_mSpanList;

/* 2181 */
typedef unsigned __int8 runtime_spanClass;

/* 2183 */
struct runtime_mSpanStateBox
{
  atomic_Uint8 s;
};

/* 2186 */
typedef runtime_special *_ptr_runtime_special;

/* 2179 */
struct runtime_mspan
{
  sys_NotInHeap _;
  _ptr_runtime_mspan next;
  _ptr_runtime_mspan prev;
  _ptr_runtime_mSpanList list;
  uintptr startAddr;
  uintptr npages;
  runtime_gclinkptr manualFreeList;
  uint16 freeindex;
  uint16 nelems;
  uint16 freeIndexForScan;
  uint64 allocCache;
  _ptr_runtime_gcBits allocBits;
  _ptr_runtime_gcBits gcmarkBits;
  _ptr_runtime_gcBits pinnerBits;
  uint32 sweepgen;
  uint32 divMul;
  uint16 allocCount;
  runtime_spanClass spanclass;
  runtime_mSpanStateBox state;
  uint8 needzero;
  bool isUserArenaChunk;
  uint16 allocCountBeforeCache;
  uintptr elemsize;
  uintptr limit;
  runtime_mutex speciallock;
  _ptr_runtime_special specials;
  runtime_addrRange userArenaChunkFree;
  _ptr_abi_Type largeType;
};

/* 2185 */
struct __attribute__((aligned(2))) runtime_special
{
  sys_NotInHeap _;
  _ptr_runtime_special next;
  uint16 offset;
  uint8 kind;
};

/* 2182 */
typedef runtime_spanClass *_ptr_runtime_spanClass;

/* 2184 */
typedef runtime_mSpanStateBox *_ptr_runtime_mSpanStateBox;

/* 2190 */
typedef _ptr_runtime_mspan _136__ptr_runtime_mspan[136];

/* 2191 */
struct runtime_stackfreelist
{
  runtime_gclinkptr list;
  uintptr size;
};

/* 2194 */
typedef runtime_stackfreelist _4_runtime_stackfreelist[4];

/* 2187 */
struct runtime_mcache
{
  sys_NotInHeap _;
  uintptr nextSample;
  uintptr scanAlloc;
  uintptr tiny;
  uintptr tinyoffset;
  uintptr tinyAllocs;
  _136__ptr_runtime_mspan alloc;
  _4_runtime_stackfreelist stackcache;
  atomic_Uint32_0 flushGen;
};

/* 2188 */
typedef runtime_mcache *_ptr_runtime_mcache;

/* 2189 */
struct _slice__ptr_runtime_mspan
{
  _ptr_runtime_mspan *ptr;
  size_t len;
  size_t cap;
};

/* 2192 */
typedef runtime_stackfreelist *_ptr_runtime_stackfreelist;

/* 2193 */
struct _slice_runtime_stackfreelist
{
  runtime_stackfreelist *ptr;
  size_t len;
  size_t cap;
};

/* 2197 */
typedef uint64 runtime_statDepSet[1];

/* 2201 */
typedef runtime_statAggregate *_ptr_runtime_statAggregate;

/* 2205 */
typedef runtime_metricValue *_ptr_runtime_metricValue;

/* 2199 */
typedef void (__gostk *PTR_func_ptr_runtime_statAggregate_comma___ptr_runtime_metricValue)(_ptr_runtime_statAggregate, _ptr_runtime_metricValue);

/* 2195 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_metricData
{
  runtime_statDepSet deps;
  PTR_func_ptr_runtime_statAggregate_comma___ptr_runtime_metricValue compute;
};

/* 2202 */
struct runtime_sysStatsAggregate
{
  uint64 stacksSys;
  uint64 mSpanSys;
  uint64 mSpanInUse;
  uint64 mCacheSys;
  uint64 mCacheInUse;
  uint64 buckHashSys;
  uint64 gcMiscSys;
  uint64 otherSys;
  uint64 heapGoal;
  uint64 gcCyclesDone;
  uint64 gcCyclesForced;
};

/* 2200 */
struct runtime_statAggregate
{
  runtime_statDepSet ensured;
  runtime_heapStatsAggregate heapStats;
  runtime_sysStatsAggregate sysStats;
  runtime_cpuStatsAggregate cpuStats;
  runtime_gcStatsAggregate gcStats;
};

/* 2206 */
typedef signed __int32 runtime_metricKind;

/* 2204 */
struct runtime_metricValue
{
  runtime_metricKind kind;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 scalar;
  unsafe_Pointer pointer;
};

/* 2196 */
typedef runtime_metricData *_ptr_runtime_metricData;

/* 2198 */
typedef runtime_statDepSet *_ptr_runtime_statDepSet;

/* 2203 */
typedef runtime_sysStatsAggregate *_ptr_runtime_sysStatsAggregate;

/* 2207 */
typedef runtime_metricKind *_ptr_runtime_metricKind;

/* 2210 */
struct _slice_float64
{
  float64 *ptr;
  size_t len;
  size_t cap;
};

/* 2208 */
struct runtime_metricFloat64Histogram
{
  _slice_uint64 counts;
  _slice_float64 buckets;
};

/* 2209 */
typedef runtime_metricFloat64Histogram *_ptr_runtime_metricFloat64Histogram;

/* 2211 */
typedef uint64 (__gostk *PTR_runtime_metricReader)();

/* 2212 */
typedef PTR_runtime_metricReader *_ptr_runtime_metricReader;

/* 2213 */
struct runtime_notInHeap
{
  sys_NotInHeap _;
};

/* 2214 */
typedef runtime_notInHeap *_ptr_runtime_notInHeap;

/* 2217 */
struct runtime_sysmontick
{
  uint32 schedtick;
  uint32 syscalltick;
  int64 schedwhen;
  int64 syscallwhen;
};

/* 2219 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_pageCache
{
  uintptr base;
  uint64 cache;
  uint64 scav;
};

/* 2221 */
struct _slice__ptr_runtime__defer
{
  _ptr_runtime__defer *ptr;
  size_t len;
  size_t cap;
};

/* 2222 */
typedef _ptr_runtime__defer _32__ptr_runtime__defer[32];

/* 2224 */
typedef runtime_guintptr _256_runtime_guintptr[256];

/* 2225 */
struct $A4CC55AA2261B8CD4DD59A16BC4CF8A8
{
  runtime_gList gList;
  int32 n;
};

/* 2227 */
struct _slice__ptr_runtime_sudog
{
  _ptr_runtime_sudog *ptr;
  size_t len;
  size_t cap;
};

/* 2228 */
typedef _ptr_runtime_sudog _128__ptr_runtime_sudog[128];

/* 2230 */
typedef _ptr_runtime_mspan _128__ptr_runtime_mspan[128];

/* 2229 */
struct $38EA353CCCB1ED81D273776946CAF6C8
{
  signed __int32 len;
  _128__ptr_runtime_mspan buf;
};

/* 2232 */
typedef runtime_pinner *_ptr_runtime_pinner;

/* 2234 */
struct runtime_pTraceState
{
  runtime_traceSchedResourceState traceSchedResourceState;
  __attribute__((packed)) __attribute__((aligned(1))) int64 mSyscallID;
  bool maySweep;
  bool inSweep;
  uintptr swept;
  uintptr reclaimed;
};

/* 2236 */
struct runtime_persistentAlloc
{
  _ptr_runtime_notInHeap base;
  uintptr off;
};

/* 2240 */
typedef uintptr _512_uintptr[512];

/* 2238 */
struct runtime_wbBuf
{
  uintptr next;
  uintptr end;
  _512_uintptr buf;
};

/* 2215 */
struct __attribute__((aligned(8))) runtime_p
{
  int32 id;
  uint32 status;
  runtime_puintptr link;
  uint32 schedtick;
  uint32 syscalltick;
  __attribute__((packed)) __attribute__((aligned(1))) runtime_sysmontick sysmontick;
  runtime_muintptr m;
  _ptr_runtime_mcache mcache;
  runtime_pageCache pcache;
  uintptr raceprocctx;
  _slice__ptr_runtime__defer deferpool;
  _32__ptr_runtime__defer deferpoolbuf;
  uint64 goidcache;
  uint64 goidcacheend;
  uint32 runqhead;
  uint32 runqtail;
  _256_runtime_guintptr runq;
  runtime_guintptr runnext;
  $A4CC55AA2261B8CD4DD59A16BC4CF8A8 gFree;
  _slice__ptr_runtime_sudog sudogcache;
  _128__ptr_runtime_sudog sudogbuf;
  $38EA353CCCB1ED81D273776946CAF6C8 mspancache;
  _ptr_runtime_pinner pinnerCache;
  runtime_pTraceState trace;
  runtime_persistentAlloc palloc;
  int64 gcAssistTime;
  int64 gcFractionalMarkTime;
  runtime_limiterEvent limiterEvent;
  runtime_gcMarkWorkerMode gcMarkWorkerMode;
  __attribute__((packed)) __attribute__((aligned(1))) int64 gcMarkWorkerStartTime;
  runtime_gcWork gcw;
  runtime_wbBuf wbBuf;
  uint32 runSafePointFn;
  atomic_Uint32_0 statsSeq;
  runtime_timers timers;
  int64 maxStackScanDelta;
  uint64 scannedStackSize;
  uint64 scannedStacks;
  bool preempt;
  __attribute__((packed)) __attribute__((aligned(4))) int64 gcStopTime;
};

/* 2233 */
typedef unsafe_Pointer _13_unsafe_Pointer[13];

/* 2231 */
struct runtime_pinner
{
  _slice_unsafe_Pointer refs;
  _13_unsafe_Pointer refStore;
};

/* 2216 */
typedef runtime_p *_ptr_runtime_p;

/* 2218 */
typedef runtime_sysmontick *_ptr_runtime_sysmontick;

/* 2220 */
typedef runtime_pageCache *_ptr_runtime_pageCache;

/* 2223 */
struct _slice_runtime_guintptr
{
  runtime_guintptr *ptr;
  size_t len;
  size_t cap;
};

/* 2226 */
typedef $A4CC55AA2261B8CD4DD59A16BC4CF8A8 *_ptr_struct__runtime_gList_n_int32_;

/* 2235 */
typedef runtime_pTraceState *_ptr_runtime_pTraceState;

/* 2237 */
typedef runtime_persistentAlloc *_ptr_runtime_persistentAlloc;

/* 2239 */
typedef runtime_wbBuf *_ptr_runtime_wbBuf;

/* 2241 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_piController
{
  float64 kp;
  float64 ti;
  float64 tt;
  float64 min;
  float64 max;
  float64 errIntegral;
  bool errOverflow;
  bool inputOverflow;
};

/* 2242 */
typedef runtime_piController *_ptr_runtime_piController;

/* 2243 */
typedef BUILTIN_STRING runtime_plainError;

/* 2244 */
typedef runtime_plainError *_ptr_runtime_plainError;

/* 2246 */
typedef runtime_pollDesc *_ptr_runtime_pollDesc;

/* 2245 */
struct runtime_pollDesc
{
  sys_NotInHeap _;
  _ptr_runtime_pollDesc link;
  uintptr fd;
  atomic_Uintptr fdseq;
  atomic_Uint32_0 atomicInfo;
  atomic_Uintptr rg;
  atomic_Uintptr wg;
  runtime_mutex lock;
  bool closing;
  bool rrun;
  bool wrun;
  uint32 user;
  uintptr rseq;
  runtime_timer rt;
  int64 rd;
  uintptr wseq;
  runtime_timer wt;
  __attribute__((packed)) __attribute__((aligned(1))) int64 wd;
  _ptr_runtime_pollDesc self;
};

/* 2247 */
struct runtime_savedOpenDeferState
{
  uintptr retpc;
  uintptr deferBitsOffset;
  uintptr slotsOffset;
};

/* 2248 */
typedef runtime_savedOpenDeferState *_ptr_runtime_savedOpenDeferState;

/* 2252 */
struct retval_2CE990
{
  uintptr 0;
  int64 1;
};

/* 2251 */
typedef retval_2CE990 (__gostk *PTR_funcuintptr_uintptr_comma__int64)(uintptr);

/* 2249 */
struct runtime_scavengerState
{
  runtime_mutex lock;
  _ptr_runtime_g g;
  _ptr_runtime_timer timer;
  atomic_Uint32_0 sysmonWake;
  bool parked;
  bool printControllerReset;
  __attribute__((packed)) __attribute__((aligned(4))) float64 targetCPUFraction;
  __attribute__((packed)) __attribute__((aligned(1))) float64 sleepRatio;
  runtime_piController sleepController;
  int64 controllerCooldown;
  PTR_funcint64_int64 sleepStub;
  PTR_funcuintptr_uintptr_comma__int64 scavenge;
  PTR_func_bool shouldStop;
  PTR_func_int32 gomaxprocs;
};

/* 2250 */
typedef runtime_scavengerState *_ptr_runtime_scavengerState;

/* 2253 */
struct runtime_sliceInterfacePtr
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 2254 */
typedef runtime_sliceInterfacePtr *_ptr_runtime_sliceInterfacePtr;

/* 2255 */
typedef BUILTIN_STRING runtime_stringInterfacePtr;

/* 2256 */
typedef runtime_stringInterfacePtr *_ptr_runtime_stringInterfacePtr;

/* 2257 */
typedef BUILTIN_INTERFACE runtime_stringer;

/* 2258 */
typedef runtime_stringer *_ptr_runtime_stringer;

/* 2259 */
struct runtime_timeTimer
{
  unsafe_Pointer c;
  bool init;
  runtime_timer timer;
};

/* 2260 */
typedef runtime_timeTimer *_ptr_runtime_timeTimer;

/* 2261 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_traceFrame
{
  uintptr PC;
  uint64 funcID;
  uint64 fileID;
  uint64 line;
};

/* 2262 */
typedef runtime_traceFrame *_ptr_runtime_traceFrame;

/* 2263 */
typedef unsigned __int16 runtime_uint16InterfacePtr;

/* 2264 */
typedef runtime_uint16InterfacePtr *_ptr_runtime_uint16InterfacePtr;

/* 2265 */
typedef unsigned __int32 runtime_uint32InterfacePtr;

/* 2266 */
typedef runtime_uint32InterfacePtr *_ptr_runtime_uint32InterfacePtr;

/* 2267 */
typedef unsigned __int64 runtime_uint64InterfacePtr;

/* 2268 */
typedef runtime_uint64InterfacePtr *_ptr_runtime_uint64InterfacePtr;

/* 2269 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_untracedG
{
  _ptr_runtime_g gp;
  uint64 goid;
  int64 mid;
  uint64 stackID;
  uint32 status;
  runtime_waitReason waitreason;
  bool inMarkAssist;
};

/* 2270 */
typedef runtime_untracedG *_ptr_runtime_untracedG;

/* 2273 */
typedef uint32 _5_uint32[5];

/* 2271 */
struct sha1_digest
{
  _5_uint32 h;
  _64_uint8 x;
  signed __int32 nx;
  uint64 len;
};

/* 2272 */
typedef sha1_digest *_ptr_sha1_digest;

/* 2276 */
typedef uint32 _8_uint32_0[8];

/* 2274 */
struct __attribute__((aligned(4))) sha256_digest
{
  _8_uint32_0 h;
  _64_uint8 x;
  signed __int32 nx;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 len;
  bool is224;
};

/* 2275 */
typedef sha256_digest *_ptr_sha256_digest;

/* 2277 */
typedef signed __int32 sha3_spongeDirection;

/* 2278 */
typedef sha3_spongeDirection *_ptr_sha3_spongeDirection;

/* 2281 */
typedef uint64 _25_uint64[25];

/* 2282 */
typedef uint8 _168_uint8[168];

/* 2279 */
struct sha3_state
{
  _25_uint64 a;
  signed __int32 rate;
  uint8 dsbyte;
  signed __int32 i;
  signed __int32 n;
  _168_uint8 storage;
  signed __int32 outputLen;
  sha3_spongeDirection state;
};

/* 2280 */
typedef sha3_state *_ptr_sha3_state;

/* 2285 */
typedef uint64 _8_uint64_0[8];

/* 2283 */
struct sha512_digest
{
  _8_uint64_0 h;
  _128_uint8 x;
  signed __int32 nx;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 len;
  crypto_Hash function;
};

/* 2284 */
typedef sha512_digest *_ptr_sha512_digest;

/* 2286 */
typedef BUILTIN_INTERFACE sort_Interface;

/* 2287 */
typedef sort_Interface *_ptr_sort_Interface;

/* 2288 */
struct strconv_NumError
{
  string Func;
  string Num;
  error Err;
};

/* 2289 */
typedef strconv_NumError *_ptr_strconv_NumError;

/* 2290 */
struct __attribute__((packed)) __attribute__((aligned(4))) strings_Reader
{
  string s;
  int64 i;
  signed __int32 prevRune;
};

/* 2291 */
typedef strings_Reader *_ptr_strings_Reader;

/* 2296 */
typedef BUILTIN_INTERFACE strings_replacer;

/* 2292 */
struct strings_Replacer
{
  sync_Once once;
  strings_replacer r;
  _slice_string oldnew;
};

/* 2293 */
typedef strings_Replacer *_ptr_strings_Replacer;

/* 2295 */
struct retval_2CEFD8
{
  signed __int32 0;
  error 1;
};

/* 2294 */
typedef retval_2CEFD8 (__gostk *PTR_funcio_Writer_comma__string_int_comma__error)(io_Writer, string);

/* 2297 */
typedef strings_replacer *_ptr_strings_replacer;

/* 2298 */
struct strings_appendSliceWriter
{
  uint8 *ptr;
  size_t len;
  size_t cap;
};

/* 2299 */
typedef strings_appendSliceWriter *_ptr_strings_appendSliceWriter;

/* 2300 */
typedef uint8 strings_byteReplacer[256];

/* 2301 */
typedef strings_byteReplacer *_ptr_strings_byteReplacer;

/* 2304 */
typedef _slice_uint8 _256__slice_uint8[256];

/* 2302 */
struct strings_byteStringReplacer
{
  _256__slice_uint8 replacements;
  _slice_string toReplace;
};

/* 2303 */
typedef strings_byteStringReplacer *_ptr_strings_byteStringReplacer;

/* 2308 */
typedef strings_trieNode *_ptr_strings_trieNode;

/* 2309 */
struct _slice__ptr_strings_trieNode
{
  _ptr_strings_trieNode *ptr;
  size_t len;
  size_t cap;
};

/* 2307 */
struct strings_trieNode
{
  string value;
  signed __int32 priority;
  string prefix;
  _ptr_strings_trieNode next;
  _slice__ptr_strings_trieNode table;
};

/* 2305 */
struct strings_genericReplacer
{
  strings_trieNode root;
  signed __int32 tableSize;
  _256_uint8 mapping;
};

/* 2306 */
typedef strings_genericReplacer *_ptr_strings_genericReplacer;

/* 2313 */
typedef strings_stringFinder *_ptr_strings_stringFinder;

/* 2310 */
struct strings_singleStringReplacer
{
  _ptr_strings_stringFinder finder;
  string value;
};

/* 2314 */
typedef signed __int32 _256_int[256];

/* 2312 */
struct strings_stringFinder
{
  string pattern;
  _256_int badCharSkip;
  _slice_int goodSuffixSkip;
};

/* 2311 */
typedef strings_singleStringReplacer *_ptr_strings_singleStringReplacer;

/* 2315 */
struct strings_span
{
  signed __int32 start;
  signed __int32 end;
};

/* 2316 */
typedef strings_span *_ptr_strings_span;

/* 2317 */
struct strings_stringWriter
{
  io_Writer w;
};

/* 2318 */
typedef strings_stringWriter *_ptr_strings_stringWriter;

/* 2319 */
struct $59C09D3193EC4E96A1FE37B0E5840DCF
{
  io_Reader Reader;
  io_WriterTo WriterTo;
};

/* 2320 */
typedef $59C09D3193EC4E96A1FE37B0E5840DCF *_ptr_struct__io_Reader_io_WriterTo_;

/* 2321 */
struct $E41EF5123DCA45DC317756920F3BEA36
{
  sync_Once Once;
  _ptr_x509_Certificate v;
};

/* 2322 */
typedef $E41EF5123DCA45DC317756920F3BEA36 *_ptr_struct__sync_Once_v__ptr_x509_Certificate_;

/* 2323 */
struct sync_Map
{
  sync_Mutex mu;
  atomic_Pointer_sync_readOnly_ read;
  map_interface___ptr_sync_entry dirty;
  signed __int32 misses;
};

/* 2324 */
typedef sync_Map *_ptr_sync_Map;

/* 2325 */
struct sync_poolChain
{
  _ptr_sync_poolChainElt head;
  atomic_Pointer_sync_poolChainElt_ tail;
};

/* 2326 */
typedef sync_poolChain *_ptr_sync_poolChain;

/* 2329 */
struct sync_poolLocalInternal
{
  interface_ private;
  sync_poolChain shared;
};

/* 2331 */
typedef uint8 _112_uint8[112];

/* 2327 */
struct sync_poolLocal
{
  sync_poolLocalInternal poolLocalInternal;
  _112_uint8 pad;
};

/* 2328 */
typedef sync_poolLocal *_ptr_sync_poolLocal;

/* 2330 */
typedef sync_poolLocalInternal *_ptr_sync_poolLocalInternal;

/* 2332 */
typedef BUILTIN_INTERFACE syscall_Conn;

/* 2333 */
typedef syscall_Conn *_ptr_syscall_Conn;

/* 2334 */
typedef unsigned __int32 syscall_Errno;

/* 2335 */
typedef syscall_Errno *_ptr_syscall_Errno;

/* 2338 */
struct syscall_NlMsghdr
{
  uint32 Len;
  uint16 Type;
  uint16 Flags;
  uint32 Seq;
  uint32 Pid;
};

/* 2336 */
struct syscall_NetlinkMessage
{
  syscall_NlMsghdr Header;
  _slice_uint8 Data;
};

/* 2337 */
typedef syscall_NetlinkMessage *_ptr_syscall_NetlinkMessage;

/* 2339 */
typedef syscall_NlMsghdr *_ptr_syscall_NlMsghdr;

/* 2342 */
struct syscall_RtAttr
{
  uint16 Len;
  uint16 Type;
};

/* 2340 */
struct syscall_NetlinkRouteAttr
{
  syscall_RtAttr Attr;
  _slice_uint8 Value;
};

/* 2341 */
typedef syscall_NetlinkRouteAttr *_ptr_syscall_NetlinkRouteAttr;

/* 2343 */
typedef syscall_RtAttr *_ptr_syscall_RtAttr;

/* 2344 */
struct syscall_RawSockaddrInet4
{
  uint16 Family;
  uint16 Port;
  _4_uint8 Addr;
  _8_uint8 Zero;
};

/* 2345 */
typedef syscall_RawSockaddrInet4 *_ptr_syscall_RawSockaddrInet4;

/* 2346 */
struct syscall_RawSockaddrInet6
{
  uint16 Family;
  uint16 Port;
  uint32 Flowinfo;
  _16_uint8 Addr;
  uint32 Scope_id;
};

/* 2347 */
typedef syscall_RawSockaddrInet6 *_ptr_syscall_RawSockaddrInet6;

/* 2348 */
struct syscall_RawSockaddrLinklayer
{
  uint16 Family;
  uint16 Protocol;
  int32 Ifindex;
  uint16 Hatype;
  uint8 Pkttype;
  uint8 Halen;
  _8_uint8 Addr;
};

/* 2349 */
typedef syscall_RawSockaddrLinklayer *_ptr_syscall_RawSockaddrLinklayer;

/* 2350 */
struct syscall_RawSockaddrNetlink
{
  uint16 Family;
  uint16 Pad;
  uint32 Pid;
  uint32 Groups;
};

/* 2351 */
typedef syscall_RawSockaddrNetlink *_ptr_syscall_RawSockaddrNetlink;

/* 2355 */
typedef int8 _108_int8[108];

/* 2352 */
struct syscall_RawSockaddrUnix
{
  uint16 Family;
  _108_int8 Path;
};

/* 2353 */
typedef syscall_RawSockaddrUnix *_ptr_syscall_RawSockaddrUnix;

/* 2354 */
struct _slice_int8
{
  int8 *ptr;
  size_t len;
  size_t cap;
};

/* 2356 */
struct syscall_Rlimit
{
  uint64 Cur;
  uint64 Max;
};

/* 2357 */
typedef syscall_Rlimit *_ptr_syscall_Rlimit;

/* 2358 */
struct syscall_SockaddrInet4
{
  signed __int32 Port;
  _4_uint8 Addr;
  syscall_RawSockaddrInet4 raw;
};

/* 2359 */
typedef syscall_SockaddrInet4 *_ptr_syscall_SockaddrInet4;

/* 2360 */
struct syscall_SockaddrInet6
{
  signed __int32 Port;
  uint32 ZoneId;
  _16_uint8 Addr;
  syscall_RawSockaddrInet6 raw;
};

/* 2361 */
typedef syscall_SockaddrInet6 *_ptr_syscall_SockaddrInet6;

/* 2362 */
struct syscall_SockaddrLinklayer
{
  uint16 Protocol;
  signed __int32 Ifindex;
  uint16 Hatype;
  uint8 Pkttype;
  uint8 Halen;
  _8_uint8 Addr;
  syscall_RawSockaddrLinklayer raw;
};

/* 2363 */
typedef syscall_SockaddrLinklayer *_ptr_syscall_SockaddrLinklayer;

/* 2364 */
struct syscall_SockaddrNetlink
{
  uint16 Family;
  uint16 Pad;
  uint32 Pid;
  uint32 Groups;
  syscall_RawSockaddrNetlink raw;
};

/* 2365 */
typedef syscall_SockaddrNetlink *_ptr_syscall_SockaddrNetlink;

/* 2366 */
struct __attribute__((aligned(4))) syscall_SockaddrUnix
{
  string Name;
  syscall_RawSockaddrUnix raw;
};

/* 2367 */
typedef syscall_SockaddrUnix *_ptr_syscall_SockaddrUnix;

/* 2368 */
typedef unsigned __int32 syscall__Gid_t;

/* 2369 */
typedef syscall__Gid_t *_ptr_syscall__Gid_t;

/* 2370 */
typedef BUILTIN_INTERFACE testlog_Interface;

/* 2371 */
typedef testlog_Interface *_ptr_testlog_Interface;

/* 2372 */
typedef BUILTIN_STRING textproto_ProtocolError;

/* 2373 */
typedef textproto_ProtocolError *_ptr_textproto_ProtocolError;

/* 2377 */
typedef textproto_dotReader *_ptr_textproto_dotReader;

/* 2374 */
struct textproto_Reader
{
  _ptr_bufio_Reader R;
  _ptr_textproto_dotReader dot;
  _slice_uint8 buf;
};

/* 2375 */
typedef textproto_Reader *_ptr_textproto_Reader;

/* 2376 */
struct textproto_dotReader
{
  _ptr_textproto_Reader r;
  signed __int32 state;
};

/* 2378 */
struct time_ParseError
{
  string Layout;
  string Value;
  string LayoutElem;
  string ValueElem;
  string Message;
};

/* 2379 */
typedef time_ParseError *_ptr_time_ParseError;

/* 2380 */
typedef BUILTIN_STRING time_fileSizeError;

/* 2381 */
typedef time_fileSizeError *_ptr_time_fileSizeError;

/* 2382 */
typedef unsigned __int8 tls_AlertError;

/* 2383 */
typedef tls_AlertError *_ptr_tls_AlertError;

/* 2384 */
struct tls_CertificateVerificationError
{
  _slice__ptr_x509_Certificate UnverifiedCertificates;
  error Err;
};

/* 2385 */
typedef tls_CertificateVerificationError *_ptr_tls_CertificateVerificationError;

/* 2386 */
struct tls_ECHRejectionError
{
  _slice_uint8 RetryConfigList;
};

/* 2387 */
typedef tls_ECHRejectionError *_ptr_tls_ECHRejectionError;

/* 2390 */
typedef uint8 _5_uint8[5];

/* 2388 */
struct tls_RecordHeaderError
{
  string Msg;
  _5_uint8 RecordHeader;
  net_Conn Conn;
};

/* 2389 */
typedef tls_RecordHeaderError *_ptr_tls_RecordHeaderError;

/* 2391 */
typedef BUILTIN_INTERFACE tls_aead;

/* 2392 */
typedef tls_aead *_ptr_tls_aead;

/* 2393 */
typedef unsigned __int8 tls_alert;

/* 2394 */
typedef tls_alert *_ptr_tls_alert;

/* 2395 */
struct tls_atLeastReader
{
  io_Reader R;
  int64 N;
};

/* 2396 */
typedef tls_atLeastReader *_ptr_tls_atLeastReader;

/* 2397 */
typedef BUILTIN_INTERFACE tls_binaryMarshaler;

/* 2398 */
typedef tls_binaryMarshaler *_ptr_tls_binaryMarshaler;

/* 2399 */
struct __attribute__((aligned(8))) tls_cacheEntry
{
  atomic_Int64 refs;
  _ptr_x509_Certificate cert;
};

/* 2400 */
typedef tls_cacheEntry *_ptr_tls_cacheEntry;

/* 2401 */
typedef BUILTIN_INTERFACE tls_cbcMode;

/* 2402 */
typedef tls_cbcMode *_ptr_tls_cbcMode;

/* 2403 */
struct tls_certCache
{
  sync_Map Map;
};

/* 2404 */
typedef tls_certCache *_ptr_tls_certCache;

/* 2405 */
struct tls_certificateMsg
{
  _slice__slice_uint8 certificates;
};

/* 2406 */
typedef tls_certificateMsg *_ptr_tls_certificateMsg;

/* 2407 */
struct __attribute__((aligned(4))) tls_certificateMsgTLS13
{
  tls_Certificate certificate;
  bool ocspStapling;
  bool scts;
};

/* 2408 */
typedef tls_certificateMsgTLS13 *_ptr_tls_certificateMsgTLS13;

/* 2409 */
struct tls_certificateRequestMsg
{
  bool hasSignatureAlgorithm;
  _slice_uint8 certificateTypes;
  _slice_tls_SignatureScheme supportedSignatureAlgorithms;
  _slice__slice_uint8 certificateAuthorities;
};

/* 2410 */
typedef tls_certificateRequestMsg *_ptr_tls_certificateRequestMsg;

/* 2411 */
struct tls_certificateRequestMsgTLS13
{
  bool ocspStapling;
  bool scts;
  _slice_tls_SignatureScheme supportedSignatureAlgorithms;
  _slice_tls_SignatureScheme supportedSignatureAlgorithmsCert;
  _slice__slice_uint8 certificateAuthorities;
};

/* 2412 */
typedef tls_certificateRequestMsgTLS13 *_ptr_tls_certificateRequestMsgTLS13;

/* 2413 */
struct tls_certificateStatusMsg
{
  _slice_uint8 response;
};

/* 2414 */
typedef tls_certificateStatusMsg *_ptr_tls_certificateStatusMsg;

/* 2415 */
struct tls_certificateVerifyMsg
{
  bool hasSignatureAlgorithm;
  tls_SignatureScheme signatureAlgorithm;
  _slice_uint8 signature;
};

/* 2416 */
typedef tls_certificateVerifyMsg *_ptr_tls_certificateVerifyMsg;

/* 2420 */
typedef BUILTIN_INTERFACE tls_keyAgreement;

/* 2419 */
typedef tls_keyAgreement (__gostk *PTR_funcuint16_tls_keyAgreement)(uint16);

/* 2440 */
typedef interface_ (__gostk *PTR_func_slice_uint8_comma___slice_uint8_comma__bool_interface_)(_slice_uint8, _slice_uint8, bool);

/* 2441 */
typedef hash_Hash (__gostk *PTR_func_slice_uint8_hash_Hash)(_slice_uint8);

/* 2442 */
typedef tls_aead (__gostk *PTR_func_slice_uint8_comma___slice_uint8_tls_aead)(_slice_uint8, _slice_uint8);

/* 2417 */
struct tls_cipherSuite
{
  uint16 id;
  signed __int32 keyLen;
  signed __int32 macLen;
  signed __int32 ivLen;
  PTR_funcuint16_tls_keyAgreement ka;
  signed __int32 flags;
  PTR_func_slice_uint8_comma___slice_uint8_comma__bool_interface_ cipher;
  PTR_func_slice_uint8_hash_Hash mac;
  PTR_func_slice_uint8_comma___slice_uint8_tls_aead aead;
};

/* 2418 */
typedef tls_cipherSuite *_ptr_tls_cipherSuite;

/* 2431 */
typedef tls_clientKeyExchangeMsg *_ptr_tls_clientKeyExchangeMsg;

/* 2432 */
struct retval_2D1178
{
  _slice_uint8 0;
  _ptr_tls_clientKeyExchangeMsg 1;
  error 2;
};

/* 2423 */
typedef tls_clientHelloMsg *_ptr_tls_clientHelloMsg;

/* 2421 */
typedef retval_2D1178 (__gostk *PTR_func_ptr_tls_Config_comma___ptr_tls_clientHelloMsg_comma___ptr_x509_Certificate__slice_uint8_comma___ptr_tls_clientKeyExchangeMsg_comma__error)(_ptr_tls_Config, _ptr_tls_clientHelloMsg, _ptr_x509_Certificate);

/* 2430 */
struct tls_clientKeyExchangeMsg
{
  _slice_uint8 ciphertext;
};

/* 2424 */
struct _slice_tls_keyShare
{
  tls_keyShare *ptr;
  size_t len;
  size_t cap;
};

/* 2427 */
struct _slice_tls_pskIdentity
{
  tls_pskIdentity *ptr;
  size_t len;
  size_t cap;
};

/* 2422 */
struct tls_clientHelloMsg
{
  _slice_uint8 original;
  uint16 vers;
  _slice_uint8 random;
  _slice_uint8 sessionId;
  _slice_uint16 cipherSuites;
  _slice_uint8 compressionMethods;
  string serverName;
  bool ocspStapling;
  _slice_tls_CurveID supportedCurves;
  _slice_uint8 supportedPoints;
  bool ticketSupported;
  _slice_uint8 sessionTicket;
  _slice_tls_SignatureScheme supportedSignatureAlgorithms;
  _slice_tls_SignatureScheme supportedSignatureAlgorithmsCert;
  bool secureRenegotiationSupported;
  _slice_uint8 secureRenegotiation;
  bool extendedMasterSecret;
  _slice_string alpnProtocols;
  bool scts;
  _slice_uint16 supportedVersions;
  _slice_uint8 cookie;
  _slice_tls_keyShare keyShares;
  bool earlyData;
  _slice_uint8 pskModes;
  _slice_tls_pskIdentity pskIdentities;
  _slice__slice_uint8 pskBinders;
  _slice_uint8 quicTransportParameters;
  _slice_uint8 encryptedClientHello;
};

/* 2425 */
struct tls_keyShare
{
  tls_CurveID group;
  _slice_uint8 data;
};

/* 2428 */
struct tls_pskIdentity
{
  _slice_uint8 label;
  uint32 obfuscatedTicketAge;
};

/* 2426 */
typedef tls_keyShare *_ptr_tls_keyShare;

/* 2429 */
typedef tls_pskIdentity *_ptr_tls_pskIdentity;

/* 2437 */
typedef tls_serverKeyExchangeMsg *_ptr_tls_serverKeyExchangeMsg;

/* 2438 */
struct retval_2D11B8
{
  _ptr_tls_serverKeyExchangeMsg 0;
  error 1;
};

/* 2435 */
typedef tls_serverHelloMsg *_ptr_tls_serverHelloMsg;

/* 2433 */
typedef retval_2D11B8 (__gostk *PTR_func_ptr_tls_Config_comma___ptr_tls_Certificate_comma___ptr_tls_clientHelloMsg_comma___ptr_tls_serverHelloMsg__ptr_tls_serverKeyExchangeMsg_comma__error)(_ptr_tls_Config, _ptr_tls_Certificate, _ptr_tls_clientHelloMsg, _ptr_tls_serverHelloMsg);

/* 2436 */
struct tls_serverKeyExchangeMsg
{
  _slice_uint8 key;
};

/* 2434 */
struct __attribute__((aligned(4))) tls_serverHelloMsg
{
  _slice_uint8 original;
  uint16 vers;
  _slice_uint8 random;
  _slice_uint8 sessionId;
  uint16 cipherSuite;
  uint8 compressionMethod;
  bool ocspStapling;
  bool ticketSupported;
  bool secureRenegotiationSupported;
  _slice_uint8 secureRenegotiation;
  bool extendedMasterSecret;
  string alpnProtocol;
  _slice__slice_uint8 scts;
  uint16 supportedVersion;
  tls_keyShare serverShare;
  bool selectedIdentityPresent;
  uint16 selectedIdentity;
  _slice_uint8 supportedPoints;
  _slice_uint8 encryptedClientHello;
  bool serverNameAck;
  _slice_uint8 cookie;
  tls_CurveID selectedGroup;
};

/* 2439 */
typedef tls_keyAgreement *_ptr_tls_keyAgreement;

/* 2443 */
struct tls_cipherSuiteTLS13
{
  uint16 id;
  signed __int32 keyLen;
  PTR_func_slice_uint8_comma___slice_uint8_tls_aead aead;
  crypto_Hash hash;
};

/* 2444 */
typedef tls_cipherSuiteTLS13 *_ptr_tls_cipherSuiteTLS13;

/* 2449 */
typedef void (__gostk *PTR_func_slice_uint8_comma___slice_uint8_comma___slice_uint8_comma___slice_uint8)(_slice_uint8, _slice_uint8, _slice_uint8, _slice_uint8);

/* 2447 */
struct tls_finishedHash
{
  hash_Hash client;
  hash_Hash server;
  hash_Hash clientMD5;
  hash_Hash serverMD5;
  _slice_uint8 buffer;
  uint16 version;
  PTR_func_slice_uint8_comma___slice_uint8_comma___slice_uint8_comma___slice_uint8 prf;
};

/* 2445 */
struct tls_clientHandshakeState
{
  _ptr_tls_Conn c;
  context_Context ctx;
  _ptr_tls_serverHelloMsg serverHello;
  _ptr_tls_clientHelloMsg hello;
  _ptr_tls_cipherSuite suite;
  tls_finishedHash finishedHash;
  _slice_uint8 masterSecret;
  _ptr_tls_SessionState session;
  _slice_uint8 ticket;
};

/* 2446 */
typedef tls_clientHandshakeState *_ptr_tls_clientHandshakeState;

/* 2448 */
typedef tls_finishedHash *_ptr_tls_finishedHash;

/* 2450 */
typedef BUILTIN_INTERFACE tls_constantTimeHash;

/* 2451 */
typedef tls_constantTimeHash *_ptr_tls_constantTimeHash;

/* 2452 */
struct tls_cthWrapper
{
  tls_constantTimeHash h;
};

/* 2453 */
typedef tls_cthWrapper *_ptr_tls_cthWrapper;

/* 2454 */
struct tls_ecdheKeyAgreement
{
  uint16 version;
  bool isRSA;
  _ptr_ecdh_PrivateKey key;
  _ptr_tls_clientKeyExchangeMsg ckx;
  _slice_uint8 preMasterSecret;
};

/* 2455 */
typedef tls_ecdheKeyAgreement *_ptr_tls_ecdheKeyAgreement;

/* 2457 */
struct retval_2D11F8
{
  _slice_uint8 0;
  error 1;
};

/* 2456 */
typedef retval_2D11F8 (__gostk *PTR_func_ptr_tls_Config_comma___ptr_tls_Certificate_comma___ptr_tls_clientKeyExchangeMsg_comma__uint16__slice_uint8_comma__error)(_ptr_tls_Config, _ptr_tls_Certificate, _ptr_tls_clientKeyExchangeMsg, uint16);

/* 2458 */
typedef error (__gostk *PTR_func_ptr_tls_Config_comma___ptr_tls_clientHelloMsg_comma___ptr_tls_serverHelloMsg_comma___ptr_x509_Certificate_comma___ptr_tls_serverKeyExchangeMsg_error)(_ptr_tls_Config, _ptr_tls_clientHelloMsg, _ptr_tls_serverHelloMsg, _ptr_x509_Certificate, _ptr_tls_serverKeyExchangeMsg);

/* 2459 */
struct tls_echCipher
{
  uint16 KDFID;
  uint16 AEADID;
};

/* 2460 */
typedef tls_echCipher *_ptr_tls_echCipher;

/* 2463 */
struct _slice_tls_echCipher
{
  tls_echCipher *ptr;
  size_t len;
  size_t cap;
};

/* 2464 */
struct _slice_tls_echExtension
{
  tls_echExtension *ptr;
  size_t len;
  size_t cap;
};

/* 2461 */
struct tls_echConfig
{
  _slice_uint8 raw;
  uint16 Version;
  uint16 Length;
  uint8 ConfigID;
  uint16 KemID;
  _slice_uint8 PublicKey;
  _slice_tls_echCipher SymmetricCipherSuite;
  uint8 MaxNameLength;
  _slice_uint8 PublicName;
  _slice_tls_echExtension Extensions;
};

/* 2465 */
struct tls_echExtension
{
  uint16 Type;
  _slice_uint8 Data;
};

/* 2462 */
typedef tls_echConfig *_ptr_tls_echConfig;

/* 2466 */
typedef tls_echExtension *_ptr_tls_echExtension;

/* 2467 */
struct __attribute__((aligned(4))) tls_echContext
{
  _ptr_tls_echConfig config;
  _ptr_hpke_Sender hpkeContext;
  _slice_uint8 encapsulatedKey;
  _ptr_tls_clientHelloMsg innerHello;
  hash_Hash innerTranscript;
  uint16 kdfID;
  uint16 aeadID;
  bool echRejected;
};

/* 2468 */
typedef tls_echContext *_ptr_tls_echContext;

/* 2469 */
struct tls_encryptedExtensionsMsg
{
  string alpnProtocol;
  _slice_uint8 quicTransportParameters;
  bool earlyData;
  _slice_uint8 echRetryConfigs;
};

/* 2470 */
typedef tls_encryptedExtensionsMsg *_ptr_tls_encryptedExtensionsMsg;

/* 2471 */
struct tls_endOfEarlyDataMsg
{
};

/* 2472 */
typedef tls_endOfEarlyDataMsg *_ptr_tls_endOfEarlyDataMsg;

/* 2473 */
struct tls_finishedMsg
{
  _slice_uint8 verifyData;
};

/* 2474 */
typedef tls_finishedMsg *_ptr_tls_finishedMsg;

/* 2475 */
typedef BUILTIN_INTERFACE tls_handshakeMessage;

/* 2476 */
typedef tls_handshakeMessage *_ptr_tls_handshakeMessage;

/* 2477 */
typedef BUILTIN_INTERFACE tls_handshakeMessageWithOriginalBytes;

/* 2478 */
typedef tls_handshakeMessageWithOriginalBytes *_ptr_tls_handshakeMessageWithOriginalBytes;

/* 2479 */
struct tls_helloRequestMsg
{
};

/* 2480 */
typedef tls_helloRequestMsg *_ptr_tls_helloRequestMsg;

/* 2481 */
struct tls_keySharePrivateKeys
{
  tls_CurveID curveID;
  _ptr_ecdh_PrivateKey ecdhe;
  _ptr_mlkem768_DecapsulationKey kyber;
};

/* 2482 */
typedef tls_keySharePrivateKeys *_ptr_tls_keySharePrivateKeys;

/* 2483 */
struct tls_keyUpdateMsg
{
  bool updateRequested;
};

/* 2484 */
typedef tls_keyUpdateMsg *_ptr_tls_keyUpdateMsg;

/* 2485 */
struct tls_newSessionTicketMsg
{
  _slice_uint8 ticket;
};

/* 2486 */
typedef tls_newSessionTicketMsg *_ptr_tls_newSessionTicketMsg;

/* 2487 */
struct tls_newSessionTicketMsgTLS13
{
  uint32 lifetime;
  uint32 ageAdd;
  _slice_uint8 nonce;
  _slice_uint8 label;
  uint32 maxEarlyData;
};

/* 2488 */
typedef tls_newSessionTicketMsgTLS13 *_ptr_tls_newSessionTicketMsgTLS13;

/* 2489 */
struct tls_permanentError
{
  net_Error err;
};

/* 2490 */
typedef tls_permanentError *_ptr_tls_permanentError;

/* 2491 */
struct tls_prefixNonceAEAD
{
  _12_uint8 nonce;
  cipher_AEAD aead;
};

/* 2492 */
typedef tls_prefixNonceAEAD *_ptr_tls_prefixNonceAEAD;

/* 2493 */
struct tls_rsaKeyAgreement
{
};

/* 2494 */
typedef tls_rsaKeyAgreement *_ptr_tls_rsaKeyAgreement;

/* 2495 */
struct tls_serverHelloDoneMsg
{
};

/* 2496 */
typedef tls_serverHelloDoneMsg *_ptr_tls_serverHelloDoneMsg;

/* 2497 */
typedef BUILTIN_INTERFACE tls_transcriptHash;

/* 2498 */
typedef tls_transcriptHash *_ptr_tls_transcriptHash;

/* 2499 */
struct tls_xorNonceAEAD
{
  _12_uint8 nonceMask;
  cipher_AEAD aead;
};

/* 2500 */
typedef tls_xorNonceAEAD *_ptr_tls_xorNonceAEAD;

/* 2501 */
struct unicode_Range16
{
  uint16 Lo;
  uint16 Hi;
  uint16 Stride;
};

/* 2502 */
typedef unicode_Range16 *_ptr_unicode_Range16;

/* 2503 */
struct unicode_Range32
{
  uint32 Lo;
  uint32 Hi;
  uint32 Stride;
};

/* 2504 */
typedef unicode_Range32 *_ptr_unicode_Range32;

/* 2507 */
struct _slice_unicode_Range16
{
  unicode_Range16 *ptr;
  size_t len;
  size_t cap;
};

/* 2508 */
struct _slice_unicode_Range32
{
  unicode_Range32 *ptr;
  size_t len;
  size_t cap;
};

/* 2505 */
struct unicode_RangeTable
{
  _slice_unicode_Range16 R16;
  _slice_unicode_Range32 R32;
  signed __int32 LatinOffset;
};

/* 2506 */
typedef unicode_RangeTable *_ptr_unicode_RangeTable;

/* 2509 */
struct unique_cloneSeq
{
  _slice_uintptr stringOffsets;
};

/* 2510 */
typedef unique_cloneSeq *_ptr_unique_cloneSeq;

/* 2511 */
struct unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__
{
  _ptr_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ HashTrieMap;
  unique_cloneSeq cloneSeq;
};

/* 2512 */
typedef unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ *_ptr_unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__;

/* 2513 */
struct unique_uniqueMap_net_netip_addrDetail_
{
  _ptr_concurrent_HashTrieMap_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ HashTrieMap;
  unique_cloneSeq cloneSeq;
};

/* 2514 */
typedef unique_uniqueMap_net_netip_addrDetail_ *_ptr_unique_uniqueMap_net_netip_addrDetail_;

/* 2515 */
struct unsafeheader_Slice
{
  unsafe_Pointer Data;
  signed __int32 Len;
  signed __int32 Cap;
};

/* 2516 */
typedef unsafeheader_Slice *_ptr_unsafeheader_Slice;

/* 2517 */
struct url_Error
{
  string Op;
  string URL;
  error Err;
};

/* 2518 */
typedef url_Error *_ptr_url_Error;

/* 2519 */
typedef BUILTIN_STRING url_EscapeError;

/* 2520 */
typedef url_EscapeError *_ptr_url_EscapeError;

/* 2521 */
typedef BUILTIN_STRING url_InvalidHostError;

/* 2522 */
typedef url_InvalidHostError *_ptr_url_InvalidHostError;

/* 2525 */
typedef signed __int32 x509_InvalidReason;

/* 2523 */
struct x509_CertificateInvalidError
{
  _ptr_x509_Certificate Cert;
  x509_InvalidReason Reason;
  string Detail;
};

/* 2524 */
typedef x509_CertificateInvalidError *_ptr_x509_CertificateInvalidError;

/* 2526 */
typedef x509_InvalidReason *_ptr_x509_InvalidReason;

/* 2527 */
struct x509_ConstraintViolationError
{
};

/* 2528 */
typedef x509_ConstraintViolationError *_ptr_x509_ConstraintViolationError;

/* 2529 */
struct x509_HostnameError
{
  _ptr_x509_Certificate Certificate;
  string Host;
};

/* 2530 */
typedef x509_HostnameError *_ptr_x509_HostnameError;

/* 2531 */
typedef signed __int32 x509_InsecureAlgorithmError;

/* 2532 */
typedef x509_InsecureAlgorithmError *_ptr_x509_InsecureAlgorithmError;

/* 2533 */
struct x509_SystemRootsError
{
  error Err;
};

/* 2534 */
typedef x509_SystemRootsError *_ptr_x509_SystemRootsError;

/* 2535 */
struct x509_UnhandledCriticalExtension
{
};

/* 2536 */
typedef x509_UnhandledCriticalExtension *_ptr_x509_UnhandledCriticalExtension;

/* 2537 */
struct x509_UnknownAuthorityError
{
  _ptr_x509_Certificate Cert;
  error hintErr;
  _ptr_x509_Certificate hintCert;
};

/* 2538 */
typedef x509_UnknownAuthorityError *_ptr_x509_UnknownAuthorityError;

/* 2539 */
struct x509_potentialParent
{
  _ptr_x509_Certificate cert;
  PTR_func_slice__ptr_x509_Certificate_error constraint;
};

/* 2540 */
typedef x509_potentialParent *_ptr_x509_potentialParent;

/* 2541 */
struct x509_pssParameters
{
  pkix_AlgorithmIdentifier Hash;
  pkix_AlgorithmIdentifier MGF;
  signed __int32 SaltLength;
  signed __int32 TrailerField;
};

/* 2542 */
typedef x509_pssParameters *_ptr_x509_pssParameters;

/* 2543 */
typedef BUILTIN_INTERFACE x509_pubKeyEqual;

/* 2544 */
typedef x509_pubKeyEqual *_ptr_x509_pubKeyEqual;

/* 2545 */
struct x509_rfc2821Mailbox
{
  string local;
  string domain;
};

/* 2546 */
typedef x509_rfc2821Mailbox *_ptr_x509_rfc2821Mailbox;

/* 2548 */
struct retval_2D1528
{
  io_WriteCloser 0;
  error 1;
};

/* 2547 */
typedef retval_2D1528 (__gostk *PTR_zip_Compressor)(io_Writer);

/* 2549 */
typedef PTR_zip_Compressor *_ptr_zip_Compressor;

/* 2550 */
typedef io_ReadCloser (__gostk *PTR_zip_Decompressor)(io_Reader);

/* 2551 */
typedef PTR_zip_Decompressor *_ptr_zip_Decompressor;

/* 2552 */
struct zip_FileHeader
{
  string Name;
  string Comment;
  bool NonUTF8;
  uint16 CreatorVersion;
  uint16 ReaderVersion;
  uint16 Flags;
  uint16 Method;
  time_Time Modified;
  uint16 ModifiedTime;
  uint16 ModifiedDate;
  uint32 CRC32;
  uint32 CompressedSize;
  uint32 UncompressedSize;
  uint64 CompressedSize64;
  uint64 UncompressedSize64;
  _slice_uint8 Extra;
  uint32 ExternalAttrs;
};

/* 2553 */
typedef zip_FileHeader *_ptr_zip_FileHeader;

/* 2554 */
struct zip_countWriter
{
  io_Writer w;
  int64 count;
};

/* 2555 */
typedef zip_countWriter *_ptr_zip_countWriter;

/* 2556 */
struct zip_dirWriter
{
};

/* 2557 */
typedef zip_dirWriter *_ptr_zip_dirWriter;

/* 2561 */
typedef zip_header *_ptr_zip_header;

/* 2558 */
struct __attribute__((aligned(4))) zip_fileWriter
{
  _ptr_zip_header header;
  io_Writer zipw;
  _ptr_zip_countWriter rawCount;
  io_WriteCloser comp;
  _ptr_zip_countWriter compCount;
  hash_Hash32 crc32;
  bool closed;
};

/* 2560 */
struct __attribute__((aligned(4))) zip_header
{
  _ptr_zip_FileHeader FileHeader;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 offset;
  bool raw;
};

/* 2559 */
typedef zip_fileWriter *_ptr_zip_fileWriter;

/* 2562 */
struct zip_nopCloser
{
  io_Writer Writer;
};

/* 2563 */
typedef zip_nopCloser *_ptr_zip_nopCloser;

/* 2564 */
struct zip_pooledFlateReader
{
  sync_Mutex mu;
  io_ReadCloser fr;
};

/* 2565 */
typedef zip_pooledFlateReader *_ptr_zip_pooledFlateReader;

/* 2566 */
struct zip_pooledFlateWriter
{
  sync_Mutex mu;
  _ptr_flate_Writer fw;
};

/* 2567 */
typedef zip_pooledFlateWriter *_ptr_zip_pooledFlateWriter;

/* 2568 */
typedef void *_chan_left_chan_singleflight_Result;

/* 2569 */
struct _slice_nistec_p521Table
{
  nistec_p521Table *ptr;
  size_t len;
  size_t cap;
};

/* 2570 */
typedef nistec_p521Table _132_nistec_p521Table[132];

/* 2571 */
typedef uint8 _133_uint8[133];

/* 2572 */
typedef uint8 _14_uint8[14];

/* 2573 */
typedef uint8 _15_uint8[15];

/* 2574 */
typedef uintptr _16_uintptr[16];

/* 2575 */
typedef uint8 _18_uint8[18];

/* 2576 */
typedef uint8 _19_uint8[19];

/* 2577 */
typedef _ptr_x509_Certificate _1__ptr_x509_Certificate[1];

/* 2578 */
typedef _slice__ptr_x509_Certificate _1__slice__ptr_x509_Certificate[1];

/* 2579 */
struct _slice__slice_int32
{
  _slice_int32 *ptr;
  size_t len;
  size_t cap;
};

/* 2580 */
typedef _slice_int32 _1__slice_int32[1];

/* 2581 */
typedef _slice_uint8 _1__slice_uint8[1];

/* 2582 */
struct _slice_big_Word
{
  big_Word *ptr;
  size_t len;
  size_t cap;
};

/* 2583 */
typedef big_Word _1_big_Word[1];

/* 2584 */
typedef chan_chan_left__singleflight_Result _1_chan_chan_left__singleflight_Result[1];

/* 2585 */
typedef httpproxy_matcher _1_httpproxy_matcher[1];

/* 2586 */
typedef signed __int32 _1_int[1];

/* 2587 */
typedef interface_ _1_interface_[1];

/* 2588 */
struct _slice_net_Addr
{
  net_Addr *ptr;
  size_t len;
  size_t cap;
};

/* 2589 */
typedef net_Addr _1_net_Addr[1];

/* 2590 */
typedef net_IPAddr _1_net_IPAddr[1];

/* 2591 */
typedef pkix_AttributeTypeAndValue _1_pkix_AttributeTypeAndValue[1];

/* 2592 */
typedef string _1_string[1];

/* 2593 */
typedef time_zone _1_time_zone[1];

/* 2594 */
typedef time_zoneTrans _1_time_zoneTrans[1];

/* 2595 */
typedef tls_SignatureScheme _1_tls_SignatureScheme[1];

/* 2596 */
typedef tls_keyShare _1_tls_keyShare[1];

/* 2597 */
typedef tls_pskIdentity _1_tls_pskIdentity[1];

/* 2598 */
typedef unsafe_Pointer _1_unsafe_Pointer[1];

/* 2599 */
typedef x509_ExtKeyUsage _1_x509_ExtKeyUsage[1];

/* 2600 */
typedef uint8 _22_uint8[22];

/* 2601 */
struct _slice_hpack_node
{
  hpack_node *ptr;
  size_t len;
  size_t cap;
};

/* 2602 */
typedef hpack_node _256_hpack_node[256];

/* 2603 */
struct _slice_cpu_option
{
  cpu_option *ptr;
  size_t len;
  size_t cap;
};

/* 2604 */
typedef cpu_option _27_cpu_option[27];

/* 2605 */
typedef uint8 _28_uint8[28];

/* 2606 */
struct _slice_asn1_encoder
{
  asn1_encoder *ptr;
  size_t len;
  size_t cap;
};

/* 2607 */
typedef asn1_encoder _2_asn1_encoder[2];

/* 2608 */
typedef interface_ _2_interface_[2];

/* 2609 */
typedef tls_keyShare _2_tls_keyShare[2];

/* 2610 */
typedef uint8 _30_uint8[30];

/* 2611 */
struct _slice_cpu_option_0
{
  cpu_option_0 *ptr;
  size_t len;
  size_t cap;
};

/* 2612 */
typedef cpu_option_0 _3_cpu_option[3];

/* 2613 */
typedef tls_SignatureScheme _3_tls_SignatureScheme[3];

/* 2614 */
typedef uint8 _46_uint8[46];

/* 2615 */
typedef uint8 _48_uint8[48];

/* 2616 */
typedef tls_CurveID _4_tls_CurveID[4];

/* 2617 */
typedef tls_SignatureScheme _4_tls_SignatureScheme[4];

/* 2618 */
typedef uint8 _50_uint8[50];

/* 2619 */
typedef uint8 _512_uint8[512];

/* 2620 */
struct _slice_nistec_p224Table
{
  nistec_p224Table *ptr;
  size_t len;
  size_t cap;
};

/* 2621 */
typedef nistec_p224Table _56_nistec_p224Table[56];

/* 2622 */
typedef uint8 _57_uint8[57];

/* 2623 */
struct _slice_http_http2Setting
{
  http_http2Setting *ptr;
  size_t len;
  size_t cap;
};

/* 2624 */
typedef http_http2Setting _5_http_http2Setting[5];

/* 2625 */
typedef tls_CurveID _5_tls_CurveID[5];

/* 2626 */
typedef uintptr _5_uintptr[5];

/* 2627 */
struct _slice_nistec_p256Table
{
  nistec_p256Table *ptr;
  size_t len;
  size_t cap;
};

/* 2628 */
typedef nistec_p256Table _64_nistec_p256Table[64];

/* 2629 */
typedef uint8 _65_uint8[65];

/* 2630 */
typedef uint8 _66_uint8[66];

/* 2631 */
typedef uint8 _76_uint8[76];

/* 2632 */
typedef tls_SignatureScheme _7_tls_SignatureScheme[7];

/* 2633 */
struct _slice_fiat_P224Element
{
  fiat_P224Element *ptr;
  size_t len;
  size_t cap;
};

/* 2634 */
typedef fiat_P224Element _96_fiat_P224Element[96];

/* 2635 */
struct _slice_nistec_p384Table
{
  nistec_p384Table *ptr;
  size_t len;
  size_t cap;
};

/* 2636 */
typedef nistec_p384Table _96_nistec_p384Table[96];

/* 2637 */
typedef uint8 _97_uint8[97];

/* 2638 */
struct _slice__ptr_runtime_moduledata
{
  _ptr_runtime_moduledata *ptr;
  size_t len;
  size_t cap;
};

/* 2639 */
struct _slice__ptr_unicode_RangeTable
{
  _ptr_unicode_RangeTable *ptr;
  size_t len;
  size_t cap;
};

/* 2640 */
struct _slice__slice__ptr_abi_Type
{
  _slice__ptr_abi_Type *ptr;
  size_t len;
  size_t cap;
};

/* 2641 */
struct _slice_crypto_Hash
{
  crypto_Hash *ptr;
  size_t len;
  size_t cap;
};

/* 2642 */
struct _slice_dnsmessage_Class
{
  dnsmessage_Class *ptr;
  size_t len;
  size_t cap;
};

/* 2643 */
struct _slice_dnsmessage_RCode
{
  dnsmessage_RCode *ptr;
  size_t len;
  size_t cap;
};

/* 2644 */
struct _slice_dnsmessage_section
{
  dnsmessage_section *ptr;
  size_t len;
  size_t cap;
};

/* 2645 */
struct _slice_fmtsort_KeyValue
{
  fmtsort_KeyValue *ptr;
  size_t len;
  size_t cap;
};

/* 2647 */
typedef _ptr_hpke_hkdfKDF (__gostk *PTR_func__ptr_hpke_hkdfKDF)();

/* 2646 */
struct _slice_func__ptr_hpke_hkdfKDF
{
  PTR_func__ptr_hpke_hkdfKDF *ptr;
  size_t len;
  size_t cap;
};

/* 2648 */
struct _slice_http_ConnState
{
  http_ConnState *ptr;
  size_t len;
  size_t cap;
};

/* 2649 */
struct _slice_http_http2ErrCode
{
  http_http2ErrCode *ptr;
  size_t len;
  size_t cap;
};

/* 2650 */
struct _slice_http_http2Flags
{
  http_http2Flags *ptr;
  size_t len;
  size_t cap;
};

/* 2651 */
struct _slice_http_http2FrameType
{
  http_http2FrameType *ptr;
  size_t len;
  size_t cap;
};

/* 2652 */
struct _slice_http_http2SettingID
{
  http_http2SettingID *ptr;
  size_t len;
  size_t cap;
};

/* 2653 */
struct _slice_http_http2frameParser
{
  PTR_http_http2frameParser *ptr;
  size_t len;
  size_t cap;
};

/* 2654 */
struct _slice_http_httpRange
{
  http_httpRange *ptr;
  size_t len;
  size_t cap;
};

/* 2655 */
struct _slice_int16
{
  int16 *ptr;
  size_t len;
  size_t cap;
};

/* 2656 */
struct _slice_int64
{
  int64 *ptr;
  size_t len;
  size_t cap;
};

/* 2658 */
typedef void *map_http_http2Flags_string;

/* 2657 */
struct _slice_map_http_http2Flags_string
{
  map_http_http2Flags_string *ptr;
  size_t len;
  size_t cap;
};

/* 2660 */
typedef http_http2Flags _8_http_http2Flags[8];

/* 2659 */
struct map_bucket_http_http2Flags_string
{
  _8_uint8 topbits;
  _8_http_http2Flags keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2662 */
typedef void *map_string_int;

/* 2661 */
struct _slice_map_string_int
{
  map_string_int *ptr;
  size_t len;
  size_t cap;
};

/* 2664 */
typedef signed __int32 _8_int[8];

/* 2663 */
struct map_bucket_string_int
{
  _8_uint8 topbits;
  _8_string keys;
  _8_int elems;
  unsafe_Pointer overflow;
};

/* 2665 */
struct _slice_map_string_string
{
  map_string_string *ptr;
  size_t len;
  size_t cap;
};

/* 2666 */
struct _slice_net_byName
{
  net_byName *ptr;
  size_t len;
  size_t cap;
};

/* 2667 */
struct _slice_net_hostLookupOrder
{
  net_hostLookupOrder *ptr;
  size_t len;
  size_t cap;
};

/* 2668 */
struct _slice_netip_addrDetail
{
  netip_addrDetail *ptr;
  size_t len;
  size_t cap;
};

/* 2669 */
struct _slice_reflect_visit
{
  reflect_visit *ptr;
  size_t len;
  size_t cap;
};

/* 2670 */
struct _slice_runtime__typePair
{
  runtime__typePair *ptr;
  size_t len;
  size_t cap;
};

/* 2671 */
struct _slice_runtime_metricData
{
  runtime_metricData *ptr;
  size_t len;
  size_t cap;
};

/* 2672 */
struct _slice_struct__curve_ecdh_Curve_hash_crypto_Hash_nSecret_uint16_
{
  $3EBAFFBEC7FE4A3DD4B177F1345425D4 *ptr;
  size_t len;
  size_t cap;
};

/* 2673 */
struct __attribute__((aligned(4))) $3EBAFFBEC7FE4A3DD4B177F1345425D4
{
  ecdh_Curve curve;
  crypto_Hash hash;
  uint16 nSecret;
};

/* 2674 */
struct _slice_struct__keySize_int_nonceSize_int_aead_func_slice_uint8_cipher_AEAD_comma__error_
{
  $C5E4B8F56A309F2BB15E375EC7224BCE *ptr;
  size_t len;
  size_t cap;
};

/* 2677 */
struct retval_2CE870
{
  cipher_AEAD 0;
  error 1;
};

/* 2676 */
typedef retval_2CE870 (__gostk *PTR_func_slice_uint8_cipher_AEAD_comma__error)(_slice_uint8);

/* 2675 */
struct $C5E4B8F56A309F2BB15E375EC7224BCE
{
  signed __int32 keySize;
  signed __int32 nonceSize;
  PTR_func_slice_uint8_cipher_AEAD_comma__error aead;
};

/* 2678 */
struct _slice_tls_alert
{
  tls_alert *ptr;
  size_t len;
  size_t cap;
};

/* 2679 */
struct _slice_weak_Pointer_net_netip_addrDetail_
{
  weak_Pointer_net_netip_addrDetail_ *ptr;
  size_t len;
  size_t cap;
};

/* 2680 */
struct _slice_zip_Compressor
{
  PTR_zip_Compressor *ptr;
  size_t len;
  size_t cap;
};

/* 2681 */
typedef void *chan_exec_ctxResult;

/* 2682 */
typedef void *chan_exec_goroutineStatus;

/* 2683 */
typedef void *chan_net_dialResult;

/* 2684 */
typedef void *chan_net_result;

/* 2685 */
typedef void *chan_singleflight_Result;

/* 2686 */
typedef void *chan_time_Time;

/* 2687 */
typedef void *chan_chan_left__exec_ctxResult;

/* 2689 */
struct retval_2CCFE0
{
  interface_ 0;
  error 1;
};

/* 2688 */
typedef retval_2CCFE0 (__gostk *PTR_func_interface__comma__error)();

/* 2691 */
struct retval_2CCDD0
{
  netip_addrDetail 0;
  weak_Pointer_net_netip_addrDetail_ 1;
};

/* 2690 */
typedef retval_2CCDD0 (__gostk *PTR_func_netip_addrDetail_comma__weak_Pointer_net_netip_addrDetail_)();

/* 2692 */
typedef void (__gostk *PTR_func_ptr_exec_Cmd)(_ptr_exec_Cmd);

/* 2693 */
typedef error (__gostk *PTR_func_ptr_net_netFD_error)(_ptr_net_netFD);

/* 2694 */
typedef error (__gostk *PTR_func_ptr_os_Process_error)(_ptr_os_Process);

/* 2695 */
typedef error (__gostk *PTR_func_ptr_os_file_error)(_ptr_os_file);

/* 2696 */
typedef void (__gostk *PTR_func_ptr_poll_splicePipe)(_ptr_poll_splicePipe);

/* 2697 */
typedef void (__gostk *PTR_func_ptr_tls_activeCert)(_ptr_tls_activeCert);

/* 2698 */
typedef void (__gostk *PTR_func_chan_left_chan_singleflight_Result_comma__context_CancelFunc)(_chan_left_chan_singleflight_Result, PTR_context_CancelFunc);

/* 2699 */
typedef signed __int32 (__gostk *PTR_func_slice_uint8_comma___slice_uint8_int)(_slice_uint8, _slice_uint8);

/* 2700 */
typedef void (__gostk *PTR_funccontext_Context_comma__bool)(context_Context, bool);

/* 2701 */
typedef void (__gostk *PTR_funcdnsmessage_Type)(dnsmessage_Type);

/* 2702 */
typedef signed __int32 (__gostk *PTR_funcfmtsort_KeyValue_comma__fmtsort_KeyValue_int)(fmtsort_KeyValue, fmtsort_KeyValue);

/* 2703 */
typedef signed __int32 (__gostk *PTR_funcfs_DirEntry_comma__fs_DirEntry_int)(fs_DirEntry, fs_DirEntry);

/* 2704 */
typedef void (__gostk *PTR_funcfunc_error)(PTR_func_error);

/* 2705 */
typedef void (__gostk *PTR_funcfunc_ptr_abi_Type_comma__interface__bool)(PTR_func_ptr_abi_Type_comma__interface__bool);

/* 2706 */
typedef void (__gostk *PTR_funcfuncnetip_addrDetail_comma__weak_Pointer_net_netip_addrDetail__bool)(PTR_funcnetip_addrDetail_comma__weak_Pointer_net_netip_addrDetail__bool);

/* 2707 */
typedef void (__gostk *PTR_funcfuncstring_bool)(PTR_funcstring_bool);

/* 2708 */
typedef signed __int32 (__gostk *PTR_funchttp_keyValues_comma__http_keyValues_int)(http_keyValues, http_keyValues);

/* 2709 */
typedef PTR_func (__gostk *PTR_funcstring_func)(string);

/* 2710 */
typedef bool (__gostk *PTR_funcstring_comma___ptr_http_routingNode_bool)(string, _ptr_http_routingNode);

/* 2711 */
typedef void (__gostk *PTR_funcstring_comma___ptr_tls_ClientSessionState)(string, _ptr_tls_ClientSessionState);

/* 2712 */
typedef signed __int32 (__gostk *PTR_funcstring_comma__int_comma__int_int)(string, signed __int32, signed __int32);

/* 2713 */
typedef bool (__gostk *PTR_functls_CurveID_bool)(tls_CurveID);

/* 2714 */
typedef bool (__gostk *PTR_functls_keyShare_bool)(tls_keyShare);

/* 2715 */
typedef bool (__gostk *PTR_funcuint16_bool)(uint16);

/* 2716 */
typedef void *map__ptr_abi_Type_interface_;

/* 2717 */
struct map_bucket__ptr_abi_Type_interface_
{
  _8_uint8 topbits;
  _8__ptr_abi_Type keys;
  _8_interface_ elems;
  unsafe_Pointer overflow;
};

/* 2718 */
typedef void *map_crypto_Hash__slice_uint8;

/* 2720 */
typedef crypto_Hash _8_crypto_Hash[8];

/* 2721 */
typedef _slice_uint8 _8__slice_uint8[8];

/* 2719 */
struct map_bucket_crypto_Hash__slice_uint8
{
  _8_uint8 topbits;
  _8_crypto_Hash keys;
  _8__slice_uint8 elems;
  unsafe_Pointer overflow;
};

/* 2722 */
typedef void *map_dnsmessage_Class_string;

/* 2724 */
typedef dnsmessage_Class _8_dnsmessage_Class[8];

/* 2723 */
struct map_bucket_dnsmessage_Class_string
{
  _8_uint8 topbits;
  _8_dnsmessage_Class keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2725 */
typedef void *map_dnsmessage_RCode_string;

/* 2727 */
typedef dnsmessage_RCode _8_dnsmessage_RCode[8];

/* 2726 */
struct map_bucket_dnsmessage_RCode_string
{
  _8_uint8 topbits;
  _8_dnsmessage_RCode keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2728 */
typedef void *map_dnsmessage_section_string;

/* 2730 */
typedef dnsmessage_section _8_dnsmessage_section[8];

/* 2729 */
struct map_bucket_dnsmessage_section_string
{
  _8_uint8 topbits;
  _8_dnsmessage_section keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2731 */
typedef void *map_http_ConnState_string;

/* 2733 */
typedef http_ConnState _8_http_ConnState[8];

/* 2732 */
struct map_bucket_http_ConnState_string
{
  _8_uint8 topbits;
  _8_http_ConnState keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2734 */
typedef void *map_http_http2ErrCode_string;

/* 2736 */
typedef http_http2ErrCode _8_http_http2ErrCode[8];

/* 2735 */
struct map_bucket_http_http2ErrCode_string
{
  _8_uint8 topbits;
  _8_http_http2ErrCode keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2737 */
typedef void *map_http_http2FrameType_http_http2frameParser;

/* 2739 */
typedef http_http2FrameType _8_http_http2FrameType[8];

/* 2740 */
typedef PTR_http_http2frameParser _8_http_http2frameParser[8];

/* 2738 */
struct map_bucket_http_http2FrameType_http_http2frameParser
{
  _8_uint8 topbits;
  _8_http_http2FrameType keys;
  _8_http_http2frameParser elems;
  unsafe_Pointer overflow;
};

/* 2741 */
typedef void *map_http_http2FrameType_map_http_http2Flags_string;

/* 2743 */
typedef map_http_http2Flags_string _8_map_http_http2Flags_string[8];

/* 2742 */
struct map_bucket_http_http2FrameType_map_http_http2Flags_string
{
  _8_uint8 topbits;
  _8_http_http2FrameType keys;
  _8_map_http_http2Flags_string elems;
  unsafe_Pointer overflow;
};

/* 2744 */
typedef void *map_http_http2FrameType_string;

/* 2745 */
struct map_bucket_http_http2FrameType_string
{
  _8_uint8 topbits;
  _8_http_http2FrameType keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2746 */
typedef void *map_http_http2SettingID_bool;

/* 2748 */
typedef http_http2SettingID _8_http_http2SettingID[8];

/* 2747 */
struct map_bucket_http_http2SettingID_bool
{
  _8_uint8 topbits;
  _8_http_http2SettingID keys;
  _8_bool elems;
  uintptr overflow;
};

/* 2749 */
typedef void *map_http_http2SettingID_string;

/* 2750 */
struct map_bucket_http_http2SettingID_string
{
  _8_uint8 topbits;
  _8_http_http2SettingID keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2751 */
typedef void *map_int32_unsafe_Pointer;

/* 2753 */
typedef int32 _8_int32[8];

/* 2754 */
typedef unsafe_Pointer _8_unsafe_Pointer[8];

/* 2752 */
struct map_bucket_int32_unsafe_Pointer
{
  _8_uint8 topbits;
  _8_int32 keys;
  _8_unsafe_Pointer elems;
  unsafe_Pointer overflow;
};

/* 2755 */
typedef void *map_int_string;

/* 2756 */
struct map_bucket_int_string
{
  _8_uint8 topbits;
  _8_int keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2757 */
typedef void *map_net_hostLookupOrder_string;

/* 2759 */
typedef net_hostLookupOrder _8_net_hostLookupOrder[8];

/* 2758 */
struct map_bucket_net_hostLookupOrder_string
{
  _8_uint8 topbits;
  _8_net_hostLookupOrder keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2760 */
typedef void *map_netip_addrDetail_weak_Pointer_net_netip_addrDetail_;

/* 2762 */
typedef netip_addrDetail _8_netip_addrDetail[8];

/* 2763 */
typedef weak_Pointer_net_netip_addrDetail_ _8_weak_Pointer_net_netip_addrDetail_[8];

/* 2761 */
struct map_bucket_netip_addrDetail_weak_Pointer_net_netip_addrDetail_
{
  _8_uint8 topbits;
  _8_netip_addrDetail keys;
  _8_weak_Pointer_net_netip_addrDetail_ elems;
  unsafe_Pointer overflow;
};

/* 2764 */
typedef void *map_reflect_visit_bool;

/* 2766 */
typedef reflect_visit _8_reflect_visit[8];

/* 2765 */
struct map_bucket_reflect_visit_bool
{
  _8_uint8 topbits;
  _8_reflect_visit keys;
  _8_bool elems;
  unsafe_Pointer overflow;
};

/* 2767 */
typedef void *map_runtime__typePair_struct_;

/* 2769 */
typedef runtime__typePair _8_runtime__typePair[8];

/* 2768 */
struct map_bucket_runtime__typePair_struct_
{
  _8_uint8 topbits;
  _8_runtime__typePair keys;
  _8_struct_ elems;
  unsafe_Pointer overflow;
};

/* 2770 */
typedef void *map_string__ptr_unicode_RangeTable;

/* 2772 */
typedef _ptr_unicode_RangeTable _8__ptr_unicode_RangeTable[8];

/* 2771 */
struct map_bucket_string__ptr_unicode_RangeTable
{
  _8_uint8 topbits;
  _8_string keys;
  _8__ptr_unicode_RangeTable elems;
  unsafe_Pointer overflow;
};

/* 2773 */
typedef void *map_string_bool;

/* 2774 */
struct map_bucket_string_bool
{
  _8_uint8 topbits;
  _8_string keys;
  _8_bool elems;
  unsafe_Pointer overflow;
};

/* 2775 */
typedef void *map_string_map_string_int;

/* 2777 */
typedef map_string_int _8_map_string_int[8];

/* 2776 */
struct map_bucket_string_map_string_int
{
  _8_uint8 topbits;
  _8_string keys;
  _8_map_string_int elems;
  unsafe_Pointer overflow;
};

/* 2778 */
typedef void *map_string_map_string_string;

/* 2780 */
typedef map_string_string _8_map_string_string[8];

/* 2779 */
struct map_bucket_string_map_string_string
{
  _8_uint8 topbits;
  _8_string keys;
  _8_map_string_string elems;
  unsafe_Pointer overflow;
};

/* 2781 */
typedef void *map_string_net_byName;

/* 2783 */
typedef net_byName _8_net_byName[8];

/* 2782 */
struct map_bucket_string_net_byName
{
  _8_uint8 topbits;
  _8_string keys;
  _8_net_byName elems;
  unsafe_Pointer overflow;
};

/* 2784 */
typedef void *map_string_runtime_metricData;

/* 2786 */
typedef runtime_metricData _8_runtime_metricData[8];

/* 2785 */
struct map_bucket_string_runtime_metricData
{
  _8_uint8 topbits;
  _8_string keys;
  _8_runtime_metricData elems;
  unsafe_Pointer overflow;
};

/* 2787 */
typedef void *map_string_uint16;

/* 2789 */
typedef uint16 _8_uint16[8];

/* 2788 */
struct map_bucket_string_uint16
{
  _8_uint8 topbits;
  _8_string keys;
  _8_uint16 elems;
  unsafe_Pointer overflow;
};

/* 2790 */
typedef void *map_tls_alert_string;

/* 2792 */
typedef tls_alert _8_tls_alert[8];

/* 2791 */
struct map_bucket_tls_alert_string
{
  _8_uint8 topbits;
  _8_tls_alert keys;
  _8_string elems;
  unsafe_Pointer overflow;
};

/* 2793 */
typedef void *map_uint16_bool;

/* 2794 */
struct map_bucket_uint16_bool
{
  _8_uint8 topbits;
  _8_uint16 keys;
  _8_bool elems;
  uintptr overflow;
};

/* 2795 */
typedef void *map_uint16_func__ptr_hpke_hkdfKDF;

/* 2797 */
typedef PTR_func__ptr_hpke_hkdfKDF _8_func__ptr_hpke_hkdfKDF[8];

/* 2796 */
struct map_bucket_uint16_func__ptr_hpke_hkdfKDF
{
  _8_uint8 topbits;
  _8_uint16 keys;
  _8_func__ptr_hpke_hkdfKDF elems;
  unsafe_Pointer overflow;
};

/* 2798 */
typedef void *map_uint16_struct__curve_ecdh_Curve_hash_crypto_Hash_nSecret_uint16_;

/* 2800 */
typedef $3EBAFFBEC7FE4A3DD4B177F1345425D4 _8_struct__curve_ecdh_Curve_hash_crypto_Hash_nSecret_uint16_[8];

/* 2799 */
struct map_bucket_uint16_struct__curve_ecdh_Curve_hash_crypto_Hash_nSecret_uint16_
{
  _8_uint8 topbits;
  _8_uint16 keys;
  _8_struct__curve_ecdh_Curve_hash_crypto_Hash_nSecret_uint16_ elems;
  unsafe_Pointer overflow;
};

/* 2801 */
typedef void *map_uint16_struct__keySize_int_nonceSize_int_aead_func_slice_uint8_cipher_AEAD_comma__error_;

/* 2803 */
typedef $C5E4B8F56A309F2BB15E375EC7224BCE _8_struct__keySize_int_nonceSize_int_aead_func_slice_uint8_cipher_AEAD_comma__error_[8];

/* 2802 */
struct map_bucket_uint16_struct__keySize_int_nonceSize_int_aead_func_slice_uint8_cipher_AEAD_comma__error_
{
  _8_uint8 topbits;
  _8_uint16 keys;
  _8_struct__keySize_int_nonceSize_int_aead_func_slice_uint8_cipher_AEAD_comma__error_ elems;
  unsafe_Pointer overflow;
};

/* 2804 */
typedef void *map_uint16_zip_Compressor;

/* 2806 */
typedef PTR_zip_Compressor _8_zip_Compressor[8];

/* 2805 */
struct map_bucket_uint16_zip_Compressor
{
  _8_uint8 topbits;
  _8_uint16 keys;
  _8_zip_Compressor elems;
  unsafe_Pointer overflow;
};

/* 2807 */
typedef void *map_uint32__slice__ptr_abi_Type;

/* 2809 */
typedef _slice__ptr_abi_Type _8__slice__ptr_abi_Type[8];

/* 2808 */
struct map_bucket_uint32__slice__ptr_abi_Type
{
  _8_uint8 topbits;
  _8_uint32 keys;
  _8__slice__ptr_abi_Type elems;
  unsafe_Pointer overflow;
};

/* 2810 */
typedef void *map_uint32_int32;

/* 2811 */
struct map_bucket_uint32_int32
{
  _8_uint8 topbits;
  _8_uint32 keys;
  _8_int32 elems;
  uintptr overflow;
};

/* 2812 */
typedef void *map_unsafe_Pointer_int32;

/* 2813 */
struct map_bucket_unsafe_Pointer_int32
{
  _8_uint8 topbits;
  _8_unsafe_Pointer keys;
  _8_int32 elems;
  unsafe_Pointer overflow;
};

/* 2814 */
typedef unsigned int uint;

/* 4627 */
struct runtime_mutex_0
{
  uintptr key;
};

/* 4711 */
typedef runtime_mutex_0 runtime_mutex_1;

/* 2815 */
struct _runtime_lock_runtime_mutex_runtime_stack_runtime_gList_runtime_noStack_runtime_gList_runtime_n_int32_
{
  runtime_mutex_1 lock;
  runtime_gList stack;
  runtime_gList noStack;
  int32 n;
};

/* 4523 */
struct runtime_gQueue
{
  unsigned int head;
  unsigned int tail;
};

/* 2816 */
struct _runtime_user_bool_runtime_runnable_runtime_gQueue_runtime_n_int32_
{
  bool user;
  runtime_gQueue runnable;
  int32 n;
};

/* 2817 */
typedef hash<unsafe_Pointer_comma_int32> *map_unsafe_Pointer_int32_0;

/* 3571 */
struct hash<unsafe_Pointer_comma_int32>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<unsafe_Pointer_comma_int32> *buckets;
  bucket<unsafe_Pointer_comma_int32> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3572 */
struct bucket<unsafe_Pointer_comma_int32>
{
  uint8 tophash[8];
  void *keys[8];
  int32 values[8];
  bucket<unsafe_Pointer_comma_int32> *overflow;
};

/* 4543 */
typedef runtime_bmap runtime_bmap_0;

/* 4544 */
struct runtime_mapextra_0
{
  _slice__ptr_runtime_bmap_0 *overflow;
  _slice__ptr_runtime_bmap_0 *oldoverflow;
  runtime_bmap_0 *nextOverflow;
};

/* 3046 */
struct _slice__ptr_runtime_bmap_0
{
  runtime_bmap_0 **array;
  int len;
  int cap;
};

/* 2818 */
typedef hash<int32_comma_unsafe_Pointer> *map_int32_unsafe_Pointer_0;

/* 3569 */
struct hash<int32_comma_unsafe_Pointer>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<int32_comma_unsafe_Pointer> *buckets;
  bucket<int32_comma_unsafe_Pointer> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3570 */
struct bucket<int32_comma_unsafe_Pointer>
{
  uint8 tophash[8];
  int32 keys[8];
  void *values[8];
  bucket<int32_comma_unsafe_Pointer> *overflow;
};

/* 2819 */
struct _slice_internal_profilerecord_StackRecord
{
  internal_profilerecord_StackRecord *array;
  int len;
  int cap;
};

/* 3081 */
struct _slice_uintptr_0
{
  uintptr *array;
  int len;
  int cap;
};

/* 4499 */
struct internal_profilerecord_StackRecord
{
  _slice_uintptr_0 Stack;
};

/* 2820 */
struct _runtime_block_bool_runtime_lock_runtime_mutex_runtime_q_runtime_gQueue_
{
  bool block;
  runtime_mutex_1 lock;
  runtime_gQueue q;
};

/* 2821 */
struct _runtime_lock_runtime_mutex_runtime_list_runtime_gList_
{
  runtime_mutex_1 lock;
  runtime_gList list;
};

/* 2822 */
struct _runtime_lock_runtime_mutex_runtime_q_runtime_gQueue_
{
  runtime_mutex_1 lock;
  runtime_gQueue q;
};

/* 2823 */
struct _slice__ptr_runtime_g
{
  runtime_g_0 **array;
  int len;
  int cap;
};

/* 4647 */
struct internal_runtime_atomic_Uint32
{
  uint32 value;
};

/* 4628 */
struct internal_runtime_atomic_Uint8
{
  uint8 value;
};

/* 4618 */
struct internal_runtime_atomic_Bool
{
  internal_runtime_atomic_Uint8 u;
};

/* 3089 */
struct _slice_uint8_0
{
  uint8 *array;
  int len;
  int cap;
};

/* 4610 */
struct runtime_goroutineProfileStateHolder_0
{
  uint32 value;
};

/* 4723 */
typedef runtime_goroutineProfileStateHolder_0 runtime_goroutineProfileStateHolder_1;

/* 4607 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_traceSchedResourceState_0
{
  internal_runtime_atomic_Uint32 statusTraced[3];
  uint64 seq[2];
};

/* 4739 */
typedef runtime_traceSchedResourceState_0 runtime_traceSchedResourceState_1;

/* 4608 */
struct runtime_gTraceState_0
{
  runtime_traceSchedResourceState_1 traceSchedResourceState;
};

/* 4750 */
typedef runtime_gTraceState_0 runtime_gTraceState_1;

/* 4623 */
struct runtime_g_0
{
  runtime_stack stack;
  uintptr stackguard0;
  uintptr stackguard1;
  runtime__panic_0 *_panic;
  runtime__defer_0 *_defer;
  runtime_m_0 *m;
  runtime_gobuf sched;
  uintptr syscallsp;
  uintptr syscallpc;
  uintptr syscallbp;
  uintptr stktopsp;
  void *param;
  internal_runtime_atomic_Uint32 atomicstatus;
  uint32 stackLock;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 goid;
  unsigned int schedlink;
  int64 waitsince;
  unsigned __int8 waitreason;
  bool preempt;
  bool preemptStop;
  bool preemptShrink;
  bool asyncSafePoint;
  bool paniconfault;
  bool gcscandone;
  bool throwsplit;
  bool activeStackChans;
  internal_runtime_atomic_Bool parkingOnChan;
  bool inMarkAssist;
  bool coroexit;
  int8 raceignore;
  bool nocgocallback;
  bool tracking;
  uint8 trackingSeq;
  int64 trackingStamp;
  int64 runnableTime;
  unsigned int lockedm;
  uint32 sig;
  _slice_uint8_0 writebuf;
  uintptr sigcode0;
  uintptr sigcode1;
  uintptr sigpc;
  uint64 parentGoid;
  uintptr gopc;
  _slice_runtime_ancestorInfo_0 *ancestors;
  uintptr startpc;
  uintptr racectx;
  runtime_sudog_0 *waiting;
  _slice_uintptr_0 cgoCtxt;
  void *labels;
  runtime_timer_0 *timer;
  int64 sleepWhen;
  internal_runtime_atomic_Uint32 selectDone;
  runtime_goroutineProfileStateHolder_1 goroutineProfiled;
  runtime_coro_0 *coroarg;
  runtime_gTraceState_1 trace;
  int64 gcAssistBytes;
};

/* 4637 */
struct runtime_eface
{
  internal_abi_Type *_type;
  void *data;
};

/* 4638 */
typedef runtime_eface interface__0;

/* 4622 */
struct __attribute__((aligned(2))) runtime__panic_0
{
  void *argp;
  interface__0 arg;
  runtime__panic_0 *link;
  uintptr startPC;
  void *startSP;
  void *sp;
  uintptr lr;
  void *fp;
  uintptr retpc;
  uint8 *deferBitsPtr;
  void *slotsPtr;
  bool recovered;
  bool goexit;
  bool deferreturn;
};

/* 3092 */
typedef void (*func)(void);

/* 4621 */
struct runtime__defer_0
{
  bool heap;
  bool rangefunc;
  uintptr sp;
  uintptr pc;
  func fn;
  runtime__defer_0 *link;
  internal_runtime_atomic_Pointer_runtime__defer_ *head;
};

/* 3111 */
typedef uint32 runtime_sigset_0[2];

/* 3088 */
struct string_0
{
  uint8 *str;
  int len;
};

/* 3077 */
typedef uintptr runtime_cgoCallers_0[32];

/* 4643 */
struct internal_runtime_atomic_Int64
{
  int64 value;
};

/* 4605 */
struct __attribute__((aligned(8))) runtime_mLockProfile_0
{
  internal_runtime_atomic_Int64 waitTime;
  _slice_uintptr_0 stack;
  uintptr pending;
  int64 cycles;
  int64 cyclesLost;
  bool disabled;
};

/* 4741 */
typedef runtime_mLockProfile_0 runtime_mLockProfile_1;

/* 3083 */
typedef void (*func_ptr_runtime_g_comma_unsafe_Pointer_bool)(runtime_g_0 *, void *, bool *);

/* 4740 */
typedef runtime_mTraceState_0 runtime_mTraceState_1;

/* 4600 */
struct __attribute__((aligned(4))) runtime_mOS_0
{
  int32 profileTimer;
  internal_runtime_atomic_Bool profileTimerValid;
  internal_runtime_atomic_Uint8 needPerThreadSyscall;
};

/* 4754 */
typedef runtime_mOS_0 runtime_mOS_1;

/* 4636 */
struct __attribute__((packed)) __attribute__((aligned(4))) internal_chacha8rand_State
{
  uint64 buf[32];
  uint64 seed[4];
  uint32 i;
  uint32 n;
  uint32 c;
};

/* 4624 */
struct __attribute__((aligned(8))) runtime_m_0
{
  runtime_g_0 *g0;
  runtime_gobuf morebuf;
  uint32 divmod;
  uint32 _;
  uint64 procid;
  runtime_g_0 *gsignal;
  runtime_gsignalStack goSigStack;
  runtime_sigset_0 sigmask;
  uintptr tls[6];
  func mstartfn;
  runtime_g_0 *curg;
  unsigned int caughtsig;
  unsigned int p;
  unsigned int nextp;
  unsigned int oldp;
  int64 id;
  int32 mallocing;
  unsigned int throwing;
  string_0 preemptoff;
  int32 locks;
  int32 dying;
  int32 profilehz;
  bool spinning;
  bool blocked;
  bool newSigstack;
  int8 printlock;
  bool incgo;
  bool isextra;
  bool isExtraInC;
  bool isExtraInSig;
  internal_runtime_atomic_Uint32 freeWait;
  bool needextram;
  bool g0StackAccurate;
  uint8 traceback;
  __attribute__((packed)) __attribute__((aligned(2))) uint64 ncgocall;
  int32 ncgo;
  internal_runtime_atomic_Uint32 cgoCallersUse;
  runtime_cgoCallers_0 *cgoCallers;
  runtime_note park;
  runtime_m_0 *alllink;
  unsigned int schedlink;
  unsigned int lockedg;
  uintptr createstack[32];
  uint32 lockedExt;
  uint32 lockedInt;
  unsigned int nextwaitm;
  runtime_mLockProfile_1 mLockProfile;
  _slice_uintptr_0 profStack;
  func_ptr_runtime_g_comma_unsafe_Pointer_bool waitunlockf;
  void *waitlock;
  int waitTraceSkip;
  unsigned __int8 waitTraceBlockReason;
  uint32 syscalltick;
  runtime_m_0 *freelink;
  runtime_mTraceState_1 trace;
  runtime_libcall libcall;
  uintptr libcallpc;
  uintptr libcallsp;
  unsigned int libcallg;
  uintptr vdsoSP;
  uintptr vdsoPC;
  internal_runtime_atomic_Uint32 preemptGen;
  internal_runtime_atomic_Uint32 signalPending;
  runtime_pcvalueCache pcvalueCache;
  runtime_mOS_1 mOS;
  internal_chacha8rand_State chacha8;
  uint64 cheaprand;
  int locksHeldLen;
  runtime_heldLockInfo locksHeld[10];
};

/* 3082 */
struct _slice_runtime_ancestorInfo_0
{
  runtime_ancestorInfo_0 *array;
  int len;
  int cap;
};

/* 4616 */
struct runtime_sudog_0
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  void *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3080 */
typedef void (*funcinterface__comma_uintptr_comma_int64)(interface__0, uintptr, int64);

/* 4749 */
typedef runtime_timers_0 runtime_timers_1;

/* 4649 */
struct internal_runtime_atomic_Int32
{
  int32 value;
};

/* 4614 */
struct runtime_timer_0
{
  runtime_mutex_1 mu;
  internal_runtime_atomic_Uint8 astate;
  uint8 state;
  bool isChan;
  uint32 blocked;
  __attribute__((packed)) __attribute__((aligned(1))) int64 when;
  __attribute__((packed)) __attribute__((aligned(1))) int64 period;
  funcinterface__comma_uintptr_comma_int64 f;
  interface__0 arg;
  uintptr seq;
  runtime_timers_1 *ts;
  runtime_mutex_1 sendLock;
  internal_runtime_atomic_Int32 isSending;
};

/* 3078 */
typedef void (*func_ptr_runtime_coro)(runtime_coro_0 *);

/* 4609 */
struct runtime_coro_0
{
  unsigned int gp;
  func_ptr_runtime_coro f;
  runtime_m_0 *mp;
  uint32 lockedExt;
  uint32 lockedInt;
};

/* 3087 */
typedef void (*funcunsafe_Pointer_comma_unsafe_Pointer_bool)(void *, void *, bool *);

/* 4665 */
struct internal_abi_Type
{
  uintptr Size_;
  uintptr PtrBytes;
  uint32 Hash;
  unsigned __int8 TFlag;
  uint8 Align_;
  uint8 FieldAlign_;
  unsigned __int8 Kind_;
  funcunsafe_Pointer_comma_unsafe_Pointer_bool Equal;
  uint8 *GCData;
  int Str;
  int PtrToThis;
};

/* 4619 */
struct internal_runtime_atomic_UnsafePointer
{
  void *value;
};

/* 4620 */
struct internal_runtime_atomic_Pointer_runtime__defer_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4644 */
struct internal_runtime_atomic_Uintptr
{
  uintptr value;
};

/* 4604 */
struct runtime_mTraceState_0
{
  internal_runtime_atomic_Uintptr seqlock;
  runtime_traceBuf_0 *buf[2];
  runtime_m_0 *link;
};

/* 4617 */
struct runtime_ancestorInfo_0
{
  _slice_uintptr_0 pcs;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 goid;
  uintptr gopc;
};

/* 4611 */
struct runtime_waitq_0
{
  runtime_sudog_0 *first;
  runtime_sudog_0 *last;
};

/* 4722 */
typedef runtime_waitq_0 runtime_waitq_1;

/* 4615 */
struct runtime_hchan_0
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  runtime_waitq_1 recvq;
  runtime_waitq_1 sendq;
  runtime_mutex_1 lock;
};

/* 3079 */
struct _slice_runtime_timerWhen_0
{
  runtime_timerWhen_0 *array;
  int len;
  int cap;
};

/* 4613 */
struct runtime_timers_0
{
  runtime_mutex_1 mu;
  _slice_runtime_timerWhen_0 heap;
  internal_runtime_atomic_Uint32 len;
  internal_runtime_atomic_Int32 zombies;
  uintptr raceCtx;
  internal_runtime_atomic_Int64 minWhenHeap;
  internal_runtime_atomic_Int64 minWhenModified;
};

/* 4602 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_traceBufHeader_0
{
  runtime_traceBuf_0 *link;
  unsigned __int64 lastTime;
  int pos;
  int lenPos;
};

/* 4721 */
typedef runtime_traceBufHeader_0 runtime_traceBufHeader_1;

/* 4603 */
struct runtime_traceBuf_0
{
  runtime_traceBufHeader_1 traceBufHeader;
  uint8 arr[65516];
};

/* 4612 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_timerWhen_0
{
  runtime_timer_0 *timer;
  int64 when;
};

/* 4631 */
struct runtime_mSpanList_0
{
  runtime_mspan_0 *first;
  runtime_mspan_0 *last;
};

/* 2824 */
struct _runtime_lock_runtime_mutex_runtime_free_runtime_mSpanList_runtime_busy_runtime_mSpanList_
{
  runtime_mutex_1 lock;
  runtime_mSpanList_0 free;
  runtime_mSpanList_0 busy;
};

/* 4629 */
struct runtime_mSpanStateBox_0
{
  internal_runtime_atomic_Uint8 s;
};

/* 4732 */
typedef runtime_mSpanStateBox_0 runtime_mSpanStateBox_1;

/* 4632 */
struct runtime_mspan_0
{
  runtime_mspan_0 *next;
  runtime_mspan_0 *prev;
  runtime_mSpanList_0 *list;
  uintptr startAddr;
  uintptr npages;
  unsigned int manualFreeList;
  uint16 freeindex;
  uint16 nelems;
  uint16 freeIndexForScan;
  uint64 allocCache;
  runtime_gcBits_0 *allocBits;
  runtime_gcBits_0 *gcmarkBits;
  runtime_gcBits_0 *pinnerBits;
  uint32 sweepgen;
  uint32 divMul;
  uint16 allocCount;
  unsigned __int8 spanclass;
  runtime_mSpanStateBox_1 state;
  uint8 needzero;
  bool isUserArenaChunk;
  uint16 allocCountBeforeCache;
  uintptr elemsize;
  uintptr limit;
  runtime_mutex_1 speciallock;
  runtime_special_0 *specials;
  runtime_addrRange userArenaChunkFree;
  internal_abi_Type *largeType;
};

/* 4630 */
struct runtime_gcBits_0
{
  uint8 x;
};

/* 4626 */
struct __attribute__((aligned(2))) runtime_special_0
{
  runtime_special_0 *next;
  uint16 offset;
  uint8 kind;
};

/* 2825 */
typedef hchan<os_exec_goroutineStatus_1> *chan_os_exec_goroutineStatus_1;

/* 3441 */
struct waitq<os_exec_goroutineStatus_1>
{
  sudog<os_exec_goroutineStatus_1> *first;
  sudog<os_exec_goroutineStatus_1> *last;
};

/* 3440 */
struct hchan<os_exec_goroutineStatus_1>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<os_exec_goroutineStatus_1> recvq;
  waitq<os_exec_goroutineStatus_1> sendq;
  runtime_mutex_1 lock;
};

/* 3442 */
struct sudog<os_exec_goroutineStatus_1>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  os_exec_goroutineStatus_1 *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 4634 */
struct runtime_iface
{
  internal_abi_ITab *tab;
  void *data;
};

/* 4633 */
typedef runtime_iface error_0;

/* 3608 */
struct os_exec_goroutineStatus_1
{
  int running;
  error_0 firstErr;
};

/* 4653 */
struct internal_abi_ITab
{
  internal_abi_InterfaceType *Inter;
  internal_abi_Type *Type;
  uint32 Hash;
  uintptr Fun[1];
};

/* 4657 */
struct internal_abi_Name
{
  uint8 *Bytes;
};

/* 3084 */
struct _slice_internal_abi_Imethod
{
  internal_abi_Imethod *array;
  int len;
  int cap;
};

/* 4655 */
struct internal_abi_InterfaceType
{
  internal_abi_Type Type;
  internal_abi_Name PkgPath;
  _slice_internal_abi_Imethod Methods;
};

/* 4654 */
struct internal_abi_Imethod
{
  int Name;
  int Typ;
};

/* 2943 */
typedef hchan<error> *chan_error_0;

/* 2826 */
struct noalg_struct__F_uintptr_X0_chan_os_exec_goroutineStatus_1_X1_chan_error_
{
  uintptr F;
  chan_os_exec_goroutineStatus_1 X0;
  chan_error_0 X1;
};

/* 3438 */
struct waitq<error>
{
  sudog<error> *first;
  sudog<error> *last;
};

/* 3437 */
struct hchan<error>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<error> recvq;
  waitq<error> sendq;
  runtime_mutex_1 lock;
};

/* 3439 */
struct sudog<error>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  error_0 *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 4365 */
typedef runtime_iface io_Writer_0;

/* 2827 */
struct noalg_struct__F_uintptr_X0_io_Writer_X1__ptr_os_File_
{
  uintptr F;
  io_Writer_0 X0;
  os_File_0 *X1;
};

/* 4236 */
struct os_File_0
{
  os_file_0 *file;
};

/* 4247 */
struct internal_poll_fdMutex
{
  uint64 state;
  uint32 rsema;
  uint32 wsema;
};

/* 4246 */
struct internal_poll_SysFile
{
  _slice_syscall_Iovec_0 *iovecs;
};

/* 4244 */
struct internal_poll_pollDesc
{
  uintptr runtimeCtx;
};

/* 4248 */
struct __attribute__((aligned(2))) internal_poll_FD
{
  internal_poll_fdMutex fdmu;
  int Sysfd;
  internal_poll_SysFile SysFile;
  internal_poll_pollDesc pd;
  uint32 csema;
  uint32 isBlocking;
  bool IsStream;
  bool ZeroReadIsEOF;
  bool isFile;
};

/* 4234 */
struct sync_atomic_Pointer_os_dirInfo_
{
  void *v;
};

/* 4235 */
struct __attribute__((aligned(2))) os_file_0
{
  internal_poll_FD pfd;
  string_0 name;
  sync_atomic_Pointer_os_dirInfo_ dirinfo;
  bool nonblock;
  bool stdoutOrErr;
  bool appendMode;
};

/* 4245 */
typedef syscall_Iovec syscall_Iovec_0;

/* 2994 */
struct _slice_syscall_Iovec_0
{
  syscall_Iovec_0 *array;
  int len;
  int cap;
};

/* 2828 */
struct noalg_struct__F_uintptr_X0__ptr_os_File_X1__ptr_os_exec_Cmd_
{
  uintptr F;
  os_File_0 *X0;
  os_exec_Cmd *X1;
};

/* 3091 */
struct _slice_string_0
{
  string_0 *array;
  int len;
  int cap;
};

/* 4363 */
typedef runtime_iface io_Reader_0;

/* 2991 */
struct _slice__ptr_os_File_0
{
  os_File_0 **array;
  int len;
  int cap;
};

/* 4224 */
typedef os_ProcessState os_ProcessState_0;

/* 4164 */
typedef runtime_iface context_Context_0;

/* 3141 */
typedef void (*func_error)(error_0 *);

/* 3610 */
typedef runtime_iface io_Closer_0;

/* 2833 */
struct _slice_io_Closer_0
{
  io_Closer_0 *array;
  int len;
  int cap;
};

/* 2832 */
struct _slice_func_error_0
{
  func_error *array;
  int len;
  int cap;
};

/* 2831 */
typedef hchan<error> *_chan_left_chan_error_0;

/* 2830 */
typedef hchan<os_exec_ctxResult> *_chan_left_chan_os_exec_ctxResult;

/* 2829 */
struct _os_exec_in_string_os_exec_out_string_
{
  string_0 in;
  string_0 out;
};

/* 3611 */
struct __attribute__((packed)) __attribute__((aligned(4))) os_exec_Cmd
{
  string_0 Path;
  _slice_string_0 Args;
  _slice_string_0 Env;
  string_0 Dir;
  io_Reader_0 Stdin;
  io_Writer_0 Stdout;
  io_Writer_0 Stderr;
  _slice__ptr_os_File_0 ExtraFiles;
  syscall_SysProcAttr_0 *SysProcAttr;
  os_Process_0 *Process;
  os_ProcessState_0 *ProcessState;
  context_Context_0 ctx;
  error_0 Err;
  func_error Cancel;
  __int64 WaitDelay;
  _slice_io_Closer_0 childIOFiles;
  _slice_io_Closer_0 parentIOPipes;
  _slice_func_error_0 goroutine;
  _chan_left_chan_error_0 goroutineErr;
  _chan_left_chan_os_exec_ctxResult ctxResult;
  _slice_uint8_0 createdByStack;
  error_0 lookPathErr;
  _os_exec_in_string_os_exec_out_string_ cachedLookExtensions;
};

/* 3000 */
struct _slice_syscall_SysProcIDMap_0
{
  syscall_SysProcIDMap *array;
  int len;
  int cap;
};

/* 4288 */
struct syscall_SysProcAttr_0
{
  string_0 Chroot;
  syscall_Credential_0 *Credential;
  bool Ptrace;
  bool Setsid;
  bool Setpgid;
  bool Setctty;
  bool Noctty;
  int Ctty;
  bool Foreground;
  int Pgid;
  int Pdeathsig;
  uintptr Cloneflags;
  uintptr Unshareflags;
  _slice_syscall_SysProcIDMap_0 UidMappings;
  _slice_syscall_SysProcIDMap_0 GidMappings;
  bool GidMappingsEnableSetgroups;
  _slice_uintptr_0 AmbientCaps;
  bool UseCgroupFD;
  int CgroupFD;
  int *PidFD;
};

/* 4389 */
struct sync_atomic_Uint64
{
  uint64 v;
};

/* 4395 */
struct sync_atomic_Int32
{
  int32 v;
};

/* 4367 */
struct sync_RWMutex_0
{
  sync_Mutex w;
  uint32 writerSem;
  uint32 readerSem;
  sync_atomic_Int32 readerCount;
  sync_atomic_Int32 readerWait;
};

/* 4744 */
typedef sync_RWMutex_0 sync_RWMutex_1;

/* 4226 */
struct __attribute__((aligned(8))) os_Process_0
{
  int Pid;
  unsigned __int8 mode;
  sync_atomic_Uint64 state;
  sync_RWMutex_1 sigMu;
  uintptr handle;
};

/* 3444 */
struct waitq<os_exec_ctxResult>
{
  sudog<os_exec_ctxResult> *first;
  sudog<os_exec_ctxResult> *last;
};

/* 3443 */
struct hchan<os_exec_ctxResult>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<os_exec_ctxResult> recvq;
  waitq<os_exec_ctxResult> sendq;
  runtime_mutex_1 lock;
};

/* 3074 */
struct _slice_uint32_0
{
  uint32 *array;
  int len;
  int cap;
};

/* 4287 */
struct __attribute__((aligned(4))) syscall_Credential_0
{
  uint32 Uid;
  uint32 Gid;
  _slice_uint32_0 Groups;
  bool NoSetGroups;
};

/* 3445 */
struct sudog<os_exec_ctxResult>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  os_exec_ctxResult *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3609 */
struct os_exec_ctxResult
{
  error_0 err;
  time_Timer_0 *timer;
};

/* 2997 */
typedef hchan<time_Time> *_chan_left_chan_time_Time_0;

/* 4257 */
struct __attribute__((aligned(4))) time_Timer_0
{
  _chan_left_chan_time_Time_0 C;
  bool initTimer;
};

/* 3405 */
struct waitq<time_Time>
{
  sudog<time_Time> *first;
  sudog<time_Time> *last;
};

/* 3404 */
struct hchan<time_Time>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<time_Time> recvq;
  waitq<time_Time> sendq;
  runtime_mutex_1 lock;
};

/* 3406 */
struct sudog<time_Time>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  time_Time_0 *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 4261 */
struct __attribute__((packed)) __attribute__((aligned(4))) time_Time_0
{
  uint64 wall;
  int64 ext;
  time_Location_0 *loc;
};

/* 2999 */
struct _slice_time_zone_0
{
  time_zone_0 *array;
  int len;
  int cap;
};

/* 2998 */
struct _slice_time_zoneTrans_0
{
  time_zoneTrans *array;
  int len;
  int cap;
};

/* 4260 */
struct __attribute__((packed)) __attribute__((aligned(4))) time_Location_0
{
  string_0 name;
  _slice_time_zone_0 zone;
  _slice_time_zoneTrans_0 tx;
  string_0 extend;
  int64 cacheStart;
  int64 cacheEnd;
  time_zone_0 *cacheZone;
};

/* 4259 */
struct __attribute__((aligned(4))) time_zone_0
{
  string_0 name;
  int offset;
  bool isDST;
};

/* 2834 */
typedef hash<string_comma_bool> *go_shape_map_string_bool;

/* 3567 */
struct hash<string_comma_bool>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_bool> *buckets;
  bucket<string_comma_bool> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3568 */
struct bucket<string_comma_bool>
{
  uint8 tophash[8];
  string_0 keys[8];
  bool values[8];
  bucket<string_comma_bool> *overflow;
};

/* 2835 */
struct _slice_net_http_muxEntry
{
  net_http_muxEntry *array;
  int len;
  int cap;
};

/* 3751 */
typedef runtime_iface net_http_Handler;

/* 3640 */
struct net_http_muxEntry
{
  net_http_Handler h;
  string_0 pattern;
};

/* 2836 */
typedef hash<string_comma_net_http_muxEntry> *map_string_net_http_muxEntry;

/* 3565 */
struct hash<string_comma_net_http_muxEntry>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_net_http_muxEntry> *buckets;
  bucket<string_comma_net_http_muxEntry> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3566 */
struct bucket<string_comma_net_http_muxEntry>
{
  uint8 tophash[8];
  string_0 keys[8];
  net_http_muxEntry values[8];
  bucket<string_comma_net_http_muxEntry> *overflow;
};

/* 2837 */
typedef hash<go_shape_string_comma_go_shape__ptr_uint8> *map_go_shape_string_go_shape__ptr_uint8;

/* 3563 */
struct hash<go_shape_string_comma_go_shape__ptr_uint8>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<go_shape_string_comma_go_shape__ptr_uint8> *buckets;
  bucket<go_shape_string_comma_go_shape__ptr_uint8> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3113 */
struct go_shape_string_0
{
  uint8 *str;
  int len;
};

/* 3138 */
typedef uint8 *go_shape__ptr_uint8;

/* 3564 */
struct bucket<go_shape_string_comma_go_shape__ptr_uint8>
{
  uint8 tophash[8];
  go_shape_string_0 keys[8];
  go_shape__ptr_uint8 values[8];
  bucket<go_shape_string_comma_go_shape__ptr_uint8> *overflow;
};

/* 2838 */
struct _slice_net_http_entry_go_shape_string_comma_go_shape__ptr_uint8_
{
  net_http_entry_go_shape_string_comma_go_shape__ptr_uint8_ *array;
  int len;
  int cap;
};

/* 3642 */
struct net_http_entry_go_shape_string_comma_go_shape__ptr_uint8_
{
  go_shape_string_0 key;
  go_shape__ptr_uint8 value;
};

/* 2839 */
typedef hash<string_comma__ptr_net_http_routingNode> *map_string__ptr_net_http_routingNode;

/* 3561 */
struct hash<string_comma__ptr_net_http_routingNode>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma__ptr_net_http_routingNode> *buckets;
  bucket<string_comma__ptr_net_http_routingNode> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3562 */
struct bucket<string_comma__ptr_net_http_routingNode>
{
  uint8 tophash[8];
  string_0 keys[8];
  net_http_routingNode *values[8];
  bucket<string_comma__ptr_net_http_routingNode> *overflow;
};

/* 2840 */
struct _slice_net_http_entry_string_comma__ptr_net_http_routingNode_
{
  net_http_entry_string_comma__ptr_net_http_routingNode_ *array;
  int len;
  int cap;
};

/* 3645 */
struct net_http_mapping_string_comma__ptr_net_http_routingNode_
{
  _slice_net_http_entry_string_comma__ptr_net_http_routingNode_ s;
  map_string__ptr_net_http_routingNode m;
};

/* 3646 */
struct net_http_routingNode
{
  net_http_pattern *pattern;
  net_http_Handler handler;
  net_http_mapping_string_comma__ptr_net_http_routingNode_ children;
  net_http_routingNode *multiChild;
  net_http_routingNode *emptyChild;
};

/* 2863 */
struct _slice_net_http_segment
{
  net_http_segment *array;
  int len;
  int cap;
};

/* 3744 */
struct net_http_pattern
{
  string_0 str;
  string_0 method;
  string_0 host;
  _slice_net_http_segment segments;
  string_0 loc;
};

/* 3644 */
struct net_http_entry_string_comma__ptr_net_http_routingNode_
{
  string_0 key;
  net_http_routingNode *value;
};

/* 3743 */
struct __attribute__((aligned(4))) net_http_segment
{
  string_0 s;
  bool wild;
  bool multi;
};

/* 2841 */
struct _slice__ptr_net_http_pattern
{
  net_http_pattern **array;
  int len;
  int cap;
};

/* 2842 */
typedef hash<net_http_routingIndexKey_comma__slice__ptr_net_http_pattern> *map_net_http_routingIndexKey__slice__ptr_net_http_pattern;

/* 3559 */
struct hash<net_http_routingIndexKey_comma__slice__ptr_net_http_pattern>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_routingIndexKey_comma__slice__ptr_net_http_pattern> *buckets;
  bucket<net_http_routingIndexKey_comma__slice__ptr_net_http_pattern> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3648 */
struct net_http_routingIndexKey
{
  int pos;
  string_0 s;
};

/* 3560 */
struct bucket<net_http_routingIndexKey_comma__slice__ptr_net_http_pattern>
{
  uint8 tophash[8];
  net_http_routingIndexKey keys[8];
  _slice__ptr_net_http_pattern values[8];
  bucket<net_http_routingIndexKey_comma__slice__ptr_net_http_pattern> *overflow;
};

/* 2843 */
typedef void (*func_ptr_net_http_pattern_error)(net_http_pattern *, error_0 *);

/* 3655 */
struct net_http_httptrace_WroteRequestInfo
{
  error_0 Err;
};

/* 2844 */
typedef void (*funcnet_http_httptrace_WroteRequestInfo)(net_http_httptrace_WroteRequestInfo);

/* 2845 */
typedef void (*funcstring_comma__slice_string)(string_0, _slice_string_0);

/* 2934 */
struct _slice__ptr_crypto_x509_Certificate
{
  crypto_x509_Certificate **array;
  int len;
  int cap;
};

/* 3216 */
struct _slice__slice__ptr_crypto_x509_Certificate
{
  _slice__ptr_crypto_x509_Certificate *array;
  int len;
  int cap;
};

/* 3379 */
struct _slice__slice_uint8_0
{
  _slice_uint8_0 *array;
  int len;
  int cap;
};

/* 2910 */
typedef void (*funcstring_comma__slice_uint8_comma_int__slice_uint8_comma_error)(string_0, _slice_uint8_0, int, _slice_uint8_0 *, error_0 *);

/* 3867 */
struct crypto_tls_ConnectionState
{
  uint16 Version;
  bool HandshakeComplete;
  bool DidResume;
  uint16 CipherSuite;
  string_0 NegotiatedProtocol;
  bool NegotiatedProtocolIsMutual;
  string_0 ServerName;
  _slice__ptr_crypto_x509_Certificate PeerCertificates;
  _slice__slice__ptr_crypto_x509_Certificate VerifiedChains;
  _slice__slice_uint8_0 SignedCertificateTimestamps;
  _slice_uint8_0 OCSPResponse;
  _slice_uint8_0 TLSUnique;
  bool ECHAccepted;
  funcstring_comma__slice_uint8_comma_int__slice_uint8_comma_error ekm;
  bool testingOnlyDidHRR;
  unsigned __int16 testingOnlyCurveID;
};

/* 2846 */
typedef void (*funccrypto_tls_ConnectionState_comma_error)(crypto_tls_ConnectionState, error_0);

/* 2963 */
struct _slice_crypto_x509_pkix_AttributeTypeAndValue
{
  crypto_x509_pkix_AttributeTypeAndValue *array;
  int len;
  int cap;
};

/* 4057 */
struct crypto_x509_pkix_Name
{
  _slice_string_0 Country;
  _slice_string_0 Organization;
  _slice_string_0 OrganizationalUnit;
  _slice_string_0 Locality;
  _slice_string_0 Province;
  _slice_string_0 StreetAddress;
  _slice_string_0 PostalCode;
  string_0 SerialNumber;
  string_0 CommonName;
  _slice_crypto_x509_pkix_AttributeTypeAndValue Names;
  _slice_crypto_x509_pkix_AttributeTypeAndValue ExtraNames;
};

/* 4714 */
typedef time_Time_0 time_Time_1;

/* 2933 */
struct _slice_crypto_x509_pkix_Extension
{
  crypto_x509_pkix_Extension *array;
  int len;
  int cap;
};

/* 2928 */
struct _slice_encoding_asn1_ObjectIdentifier
{
  encoding_asn1_ObjectIdentifier *array;
  int len;
  int cap;
};

/* 2932 */
struct _slice_crypto_x509_ExtKeyUsage
{
  int *array;
  int len;
  int cap;
};

/* 2931 */
struct _slice_net_IP_0
{
  net_IP_0 *array;
  int len;
  int cap;
};

/* 2930 */
struct _slice__ptr_net_url_URL
{
  net_url_URL **array;
  int len;
  int cap;
};

/* 2929 */
struct _slice__ptr_net_IPNet_0
{
  net_IPNet_0 **array;
  int len;
  int cap;
};

/* 2927 */
struct _slice_crypto_x509_OID
{
  crypto_x509_OID *array;
  int len;
  int cap;
};

/* 3924 */
struct crypto_x509_Certificate
{
  _slice_uint8_0 Raw;
  _slice_uint8_0 RawTBSCertificate;
  _slice_uint8_0 RawSubjectPublicKeyInfo;
  _slice_uint8_0 RawSubject;
  _slice_uint8_0 RawIssuer;
  _slice_uint8_0 Signature;
  int SignatureAlgorithm;
  int PublicKeyAlgorithm;
  interface__0 PublicKey;
  int Version;
  math_big_Int *SerialNumber;
  crypto_x509_pkix_Name Issuer;
  crypto_x509_pkix_Name Subject;
  time_Time_1 NotBefore;
  time_Time_1 NotAfter;
  int KeyUsage;
  _slice_crypto_x509_pkix_Extension Extensions;
  _slice_crypto_x509_pkix_Extension ExtraExtensions;
  _slice_encoding_asn1_ObjectIdentifier UnhandledCriticalExtensions;
  _slice_crypto_x509_ExtKeyUsage ExtKeyUsage;
  _slice_encoding_asn1_ObjectIdentifier UnknownExtKeyUsage;
  bool BasicConstraintsValid;
  bool IsCA;
  int MaxPathLen;
  bool MaxPathLenZero;
  _slice_uint8_0 SubjectKeyId;
  _slice_uint8_0 AuthorityKeyId;
  _slice_string_0 OCSPServer;
  _slice_string_0 IssuingCertificateURL;
  _slice_string_0 DNSNames;
  _slice_string_0 EmailAddresses;
  _slice_net_IP_0 IPAddresses;
  _slice__ptr_net_url_URL URIs;
  bool PermittedDNSDomainsCritical;
  _slice_string_0 PermittedDNSDomains;
  _slice_string_0 ExcludedDNSDomains;
  _slice__ptr_net_IPNet_0 PermittedIPRanges;
  _slice__ptr_net_IPNet_0 ExcludedIPRanges;
  _slice_string_0 PermittedEmailAddresses;
  _slice_string_0 ExcludedEmailAddresses;
  _slice_string_0 PermittedURIDomains;
  _slice_string_0 ExcludedURIDomains;
  _slice_string_0 CRLDistributionPoints;
  _slice_encoding_asn1_ObjectIdentifier PolicyIdentifiers;
  _slice_crypto_x509_OID Policies;
};

/* 4118 */
struct math_big_nat
{
  unsigned int *array;
  int len;
  int cap;
};

/* 4119 */
struct math_big_Int
{
  bool neg;
  math_big_nat abs;
};

/* 4099 */
struct encoding_asn1_ObjectIdentifier
{
  int *array;
  int len;
  int cap;
};

/* 4060 */
struct crypto_x509_pkix_AttributeTypeAndValue
{
  encoding_asn1_ObjectIdentifier Type;
  interface__0 Value;
};

/* 3923 */
struct crypto_x509_pkix_Extension
{
  encoding_asn1_ObjectIdentifier Id;
  bool Critical;
  _slice_uint8_0 Value;
};

/* 3999 */
struct net_IP_0
{
  uint8 *array;
  int len;
  int cap;
};

/* 3931 */
struct net_url_URL
{
  string_0 Scheme;
  string_0 Opaque;
  net_url_Userinfo *User;
  string_0 Host;
  string_0 Path;
  string_0 RawPath;
  bool OmitHost;
  bool ForceQuery;
  string_0 RawQuery;
  string_0 Fragment;
  string_0 RawFragment;
};

/* 4715 */
typedef net_IP_0 net_IP_1;

/* 3998 */
struct net_IPMask_0
{
  uint8 *array;
  int len;
  int cap;
};

/* 4716 */
typedef net_IPMask_0 net_IPMask_1;

/* 3954 */
struct net_IPNet_0
{
  net_IP_1 IP;
  net_IPMask_1 Mask;
};

/* 3922 */
struct crypto_x509_OID
{
  _slice_uint8_0 der;
};

/* 3932 */
struct __attribute__((aligned(4))) net_url_Userinfo
{
  string_0 username;
  string_0 password;
  bool passwordSet;
};

/* 3149 */
struct _slice_net_IPAddr_0
{
  net_IPAddr_0 *array;
  int len;
  int cap;
};

/* 3656 */
struct __attribute__((aligned(4))) net_http_httptrace_DNSDoneInfo
{
  _slice_net_IPAddr_0 Addrs;
  error_0 Err;
  bool Coalesced;
};

/* 2847 */
typedef void (*funcnet_http_httptrace_DNSDoneInfo)(net_http_httptrace_DNSDoneInfo);

/* 3997 */
struct net_IPAddr_0
{
  net_IP_1 IP;
  string_0 Zone;
};

/* 3657 */
struct net_http_httptrace_DNSStartInfo
{
  string_0 Host;
};

/* 2848 */
typedef void (*funcnet_http_httptrace_DNSStartInfo)(net_http_httptrace_DNSStartInfo);

/* 3131 */
typedef hash<string_comma__slice_string> *net_textproto_MIMEHeader;

/* 2849 */
typedef void (*funcint_comma_net_textproto_MIMEHeader_error)(int, net_textproto_MIMEHeader, error_0 *);

/* 3539 */
struct hash<string_comma__slice_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma__slice_string> *buckets;
  bucket<string_comma__slice_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3540 */
struct bucket<string_comma__slice_string>
{
  uint8 tophash[8];
  string_0 keys[8];
  _slice_string_0 values[8];
  bucket<string_comma__slice_string> *overflow;
};

/* 2850 */
typedef void (*funcerror)(error_0);

/* 3985 */
typedef runtime_iface net_Conn_0;

/* 3658 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_http_httptrace_GotConnInfo
{
  net_Conn_0 Conn;
  bool Reused;
  bool WasIdle;
  __attribute__((aligned(4))) __int64 IdleTime;
};

/* 2851 */
typedef void (*funcnet_http_httptrace_GotConnInfo)(net_http_httptrace_GotConnInfo);

/* 2852 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_http2serverConn_X1__ptr_net_http_http2startPushRequest_
{
  uintptr F;
  net_http_http2serverConn *X0;
  net_http_http2startPushRequest *X1;
};

/* 3107 */
typedef hchan<struct_> *chan_struct__0;

/* 2882 */
typedef hchan<net_http_http2readFrameResult> *chan_net_http_http2readFrameResult;

/* 2881 */
typedef hchan<net_http_http2FrameWriteRequest> *chan_net_http_http2FrameWriteRequest;

/* 2880 */
typedef hchan<net_http_http2frameWriteResult> *chan_net_http_http2frameWriteResult;

/* 2879 */
typedef hchan<net_http_http2bodyReadMsg> *chan_net_http_http2bodyReadMsg;

/* 2878 */
typedef hchan<interface_> *chan_interface__0;

/* 3730 */
struct net_http_http2outflow
{
  int32 n;
  net_http_http2outflow *conn;
};

/* 3729 */
struct net_http_http2inflow
{
  int32 avail;
  int32 unsent;
};

/* 3756 */
typedef runtime_iface net_http_http2WriteScheduler;

/* 2877 */
typedef hash<uint32_comma__ptr_net_http_http2stream> *map_uint32__ptr_net_http_http2stream;

/* 2876 */
struct _slice_net_http_http2unstartedHandler
{
  net_http_http2unstartedHandler *array;
  int len;
  int cap;
};

/* 3388 */
typedef hash<string_comma_string> *map_string_string_0;

/* 3725 */
typedef runtime_iface interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool__0;

/* 4350 */
struct __attribute__((aligned(4))) bytes_Buffer_0
{
  _slice_uint8_0 buf;
  int off;
  __int8 lastRead;
};

/* 4726 */
typedef bytes_Buffer_0 bytes_Buffer_1;

/* 4394 */
struct sync_atomic_Uint32
{
  uint32 v;
};

/* 4377 */
struct sync_Once_0
{
  sync_atomic_Uint32 done;
  sync_Mutex m;
};

/* 4743 */
typedef sync_Once_0 sync_Once_1;

/* 3758 */
struct net_http_http2serverConn
{
  net_http_http2Server *srv;
  net_http_Server *hs;
  net_Conn_0 conn;
  net_http_http2bufferedWriter *bw;
  net_http_Handler handler;
  context_Context_0 baseCtx;
  net_http_http2Framer *framer;
  chan_struct__0 doneServing;
  chan_net_http_http2readFrameResult readFrameCh;
  chan_net_http_http2FrameWriteRequest wantWriteFrameCh;
  chan_net_http_http2frameWriteResult wroteFrameCh;
  chan_net_http_http2bodyReadMsg bodyReadCh;
  chan_interface__0 serveMsgCh;
  net_http_http2outflow flow;
  net_http_http2inflow inflow;
  crypto_tls_ConnectionState *tlsState;
  string_0 remoteAddrStr;
  net_http_http2WriteScheduler writeSched;
  __attribute__((packed)) __attribute__((aligned(1))) unsigned __int64 serveG;
  bool pushEnabled;
  bool sawClientPreface;
  bool sawFirstSettings;
  bool needToSendSettingsAck;
  int unackedSettings;
  int queuedControlFrames;
  uint32 clientMaxStreams;
  uint32 advMaxStreams;
  uint32 curClientStreams;
  uint32 curPushedStreams;
  uint32 curHandlers;
  uint32 maxClientStreamID;
  uint32 maxPushPromiseID;
  map_uint32__ptr_net_http_http2stream streams;
  _slice_net_http_http2unstartedHandler unstartedHandlers;
  int32 initialStreamSendWindowSize;
  int32 maxFrameSize;
  uint32 peerMaxHeaderListSize;
  map_string_string_0 canonHeader;
  int canonHeaderKeysSize;
  bool writingFrame;
  bool writingFrameAsync;
  bool needsFrameFlush;
  bool inGoAway;
  bool inFrameScheduleLoop;
  bool needToSendGoAway;
  unsigned int goAwayCode;
  interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool__0 shutdownTimer;
  interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool__0 idleTimer;
  bytes_Buffer_1 headerWriteBuf;
  vendor_golang_org_x_net_http2_hpack_Encoder *hpackEncoder;
  sync_Once_1 shutdownOnce;
};

/* 2864 */
typedef hash<string_comma__slice_string> *net_http_Header;

/* 3674 */
struct net_http_http2startPushRequest
{
  net_http_http2stream *parent;
  string_0 method;
  net_url_URL *url;
  net_http_Header header;
  chan_error_0 done;
};

/* 2875 */
typedef void (*func_net_http_http2WriteScheduler)(net_http_http2WriteScheduler *);

/* 3118 */
typedef void (*funcstring)(string_0);

/* 3754 */
typedef runtime_iface net_http_http2synctestGroupInterface;

/* 3757 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_http_http2Server
{
  int MaxHandlers;
  uint32 MaxConcurrentStreams;
  uint32 MaxDecoderHeaderTableSize;
  uint32 MaxEncoderHeaderTableSize;
  uint32 MaxReadFrameSize;
  bool PermitProhibitedCipherSuites;
  __attribute__((aligned(4))) __int64 IdleTimeout;
  int32 MaxUploadBufferPerConnection;
  int32 MaxUploadBufferPerStream;
  func_net_http_http2WriteScheduler NewWriteScheduler;
  funcstring CountError;
  net_http_http2serverInternalState *state;
  net_http_http2synctestGroupInterface group;
};

/* 2873 */
typedef hash<string_comma_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler> *map_string_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler;

/* 2872 */
typedef void (*funcnet_Conn_comma_net_http_ConnState)(net_Conn_0, int);

/* 3970 */
typedef runtime_iface net_Listener_0;

/* 2871 */
typedef void (*funcnet_Listener_context_Context)(net_Listener_0, context_Context_0 *);

/* 2870 */
typedef void (*funccontext_Context_comma_net_Conn_context_Context)(context_Context_0, net_Conn_0, context_Context_0 *);

/* 4397 */
struct sync_atomic_Bool
{
  uint32 v;
};

/* 2869 */
typedef hash<_ptr_net_Listener_comma_struct_> *map__ptr_net_Listener_struct__0;

/* 2868 */
typedef hash<_ptr_net_http_conn_comma_struct_> *map__ptr_net_http_conn_struct_;

/* 3753 */
struct _slice_func_0
{
  func *array;
  int len;
  int cap;
};

/* 4366 */
struct __attribute__((aligned(8))) sync_WaitGroup_0
{
  sync_atomic_Uint64 state;
  uint32 sema;
};

/* 4745 */
typedef sync_WaitGroup_0 sync_WaitGroup_1;

/* 3752 */
struct net_http_Server
{
  string_0 Addr;
  net_http_Handler Handler;
  bool DisableGeneralOptionsHandler;
  crypto_tls_Config *TLSConfig;
  __int64 ReadTimeout;
  __int64 ReadHeaderTimeout;
  __int64 WriteTimeout;
  __int64 IdleTimeout;
  int MaxHeaderBytes;
  map_string_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler TLSNextProto;
  funcnet_Conn_comma_net_http_ConnState ConnState;
  log_Logger_0 *ErrorLog;
  funcnet_Listener_context_Context BaseContext;
  funccontext_Context_comma_net_Conn_context_Context ConnContext;
  sync_atomic_Bool inShutdown;
  sync_atomic_Bool disableKeepAlives;
  sync_Once_1 nextProtoOnce;
  error_0 nextProtoErr;
  sync_Mutex mu;
  map__ptr_net_Listener_struct__0 listeners;
  map__ptr_net_http_conn_struct_ activeConn;
  _slice_func_0 onShutdown;
  sync_WaitGroup_1 listenerGroup;
};

/* 3741 */
struct net_http_http2bufferedWriter
{
  io_Writer_0 w;
  bufio_Writer_0 *bw;
};

/* 3739 */
typedef runtime_iface net_http_http2Frame;

/* 2861 */
typedef void (*funcuint32__slice_uint8)(uint32, _slice_uint8_0 *);

/* 3116 */
struct _slice_interface__0
{
  interface__0 *array;
  int len;
  int cap;
};

/* 2860 */
typedef void (*funcstring_comma____interface_)(string_0, _slice_interface__0, ...);

/* 3740 */
struct net_http_http2Framer
{
  io_Reader_0 r;
  net_http_http2Frame lastFrame;
  error_0 errDetail;
  funcstring countError;
  uint32 lastHeaderStream;
  uint32 maxReadSize;
  uint8 headerBuf[9];
  funcuint32__slice_uint8 getReadBuf;
  _slice_uint8_0 readBuf;
  uint32 maxWriteSize;
  io_Writer_0 w;
  _slice_uint8_0 wbuf;
  bool AllowIllegalWrites;
  bool AllowIllegalReads;
  vendor_golang_org_x_net_http2_hpack_Decoder *ReadMetaHeaders;
  uint32 MaxHeaderListSize;
  bool logReads;
  bool logWrites;
  net_http_http2Framer *debugFramer;
  bytes_Buffer_1 *debugFramerBuf;
  funcstring_comma____interface_ debugReadLoggerf;
  funcstring_comma____interface_ debugWriteLoggerf;
  net_http_http2frameCache *frameCache;
};

/* 3435 */
struct waitq<struct_>
{
  sudog<struct_> *first;
  sudog<struct_> *last;
};

/* 3434 */
struct hchan<struct_>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<struct_> recvq;
  waitq<struct_> sendq;
  runtime_mutex_1 lock;
};

/* 3420 */
struct waitq<net_http_http2readFrameResult>
{
  sudog<net_http_http2readFrameResult> *first;
  sudog<net_http_http2readFrameResult> *last;
};

/* 3419 */
struct hchan<net_http_http2readFrameResult>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<net_http_http2readFrameResult> recvq;
  waitq<net_http_http2readFrameResult> sendq;
  runtime_mutex_1 lock;
};

/* 3423 */
struct waitq<net_http_http2FrameWriteRequest>
{
  sudog<net_http_http2FrameWriteRequest> *first;
  sudog<net_http_http2FrameWriteRequest> *last;
};

/* 3422 */
struct hchan<net_http_http2FrameWriteRequest>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<net_http_http2FrameWriteRequest> recvq;
  waitq<net_http_http2FrameWriteRequest> sendq;
  runtime_mutex_1 lock;
};

/* 3426 */
struct waitq<net_http_http2frameWriteResult>
{
  sudog<net_http_http2frameWriteResult> *first;
  sudog<net_http_http2frameWriteResult> *last;
};

/* 3425 */
struct hchan<net_http_http2frameWriteResult>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<net_http_http2frameWriteResult> recvq;
  waitq<net_http_http2frameWriteResult> sendq;
  runtime_mutex_1 lock;
};

/* 3429 */
struct waitq<net_http_http2bodyReadMsg>
{
  sudog<net_http_http2bodyReadMsg> *first;
  sudog<net_http_http2bodyReadMsg> *last;
};

/* 3428 */
struct hchan<net_http_http2bodyReadMsg>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<net_http_http2bodyReadMsg> recvq;
  waitq<net_http_http2bodyReadMsg> sendq;
  runtime_mutex_1 lock;
};

/* 3432 */
struct waitq<interface_>
{
  sudog<interface_> *first;
  sudog<interface_> *last;
};

/* 3431 */
struct hchan<interface_>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<interface_> recvq;
  waitq<interface_> sendq;
  runtime_mutex_1 lock;
};

/* 3541 */
struct hash<uint32_comma__ptr_net_http_http2stream>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint32_comma__ptr_net_http_http2stream> *buckets;
  bucket<uint32_comma__ptr_net_http_http2stream> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3726 */
typedef runtime_iface net_http_ResponseWriter;

/* 2859 */
typedef void (*funcnet_http_ResponseWriter_comma__ptr_net_http_Request)(net_http_ResponseWriter, net_http_Request *);

/* 3728 */
struct net_http_http2unstartedHandler
{
  uint32 streamID;
  net_http_http2responseWriter *rw;
  net_http_Request *req;
  funcnet_http_ResponseWriter_comma__ptr_net_http_Request handler;
};

/* 3468 */
struct hash<string_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_string> *buckets;
  bucket<string_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 2887 */
struct _slice_vendor_golang_org_x_net_http2_hpack_HeaderField
{
  vendor_golang_org_x_net_http2_hpack_HeaderField *array;
  int len;
  int cap;
};

/* 3776 */
typedef hash<string_comma_uint64> *map_string_uint64_0;

/* 3775 */
typedef hash<vendor_golang_org_x_net_http2_hpack_pairNameValue_comma_uint64> *map_vendor_golang_org_x_net_http2_hpack_pairNameValue_uint64;

/* 3774 */
struct __attribute__((packed)) __attribute__((aligned(4))) vendor_golang_org_x_net_http2_hpack_headerFieldTable
{
  _slice_vendor_golang_org_x_net_http2_hpack_HeaderField ents;
  uint64 evictCount;
  map_string_uint64_0 byName;
  map_vendor_golang_org_x_net_http2_hpack_pairNameValue_uint64 byNameValue;
};

/* 3777 */
struct vendor_golang_org_x_net_http2_hpack_dynamicTable
{
  vendor_golang_org_x_net_http2_hpack_headerFieldTable table;
  uint32 size;
  uint32 maxSize;
  uint32 allowedMaxSize;
};

/* 3778 */
struct vendor_golang_org_x_net_http2_hpack_Encoder
{
  vendor_golang_org_x_net_http2_hpack_dynamicTable dynTab;
  uint32 minSize;
  uint32 maxSizeLimit;
  bool tableSizeUpdate;
  io_Writer_0 w;
  _slice_uint8_0 buf;
};

/* 2883 */
typedef hchan<struct_> *net_http_http2closeWaiter;

/* 3759 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_http_http2stream
{
  net_http_http2serverConn *sc;
  uint32 id;
  net_http_http2pipe *body;
  net_http_http2closeWaiter cw;
  context_Context_0 ctx;
  func cancelCtx;
  int64 bodyBytes;
  int64 declBodyBytes;
  net_http_http2outflow flow;
  net_http_http2inflow inflow;
  int state;
  bool resetQueued;
  bool gotTrailerHeader;
  bool wroteHeaders;
  __attribute__((aligned(2))) interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool__0 readDeadline;
  interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool__0 writeDeadline;
  error_0 closeErr;
  net_http_Header trailer;
  net_http_Header reqTrailer;
};

/* 2874 */
typedef hash<_ptr_net_http_http2serverConn_comma_struct_> *map__ptr_net_http_http2serverConn_struct_;

/* 3755 */
struct net_http_http2serverInternalState
{
  sync_Mutex mu;
  map__ptr_net_http_http2serverConn_struct_ activeConns;
};

/* 2922 */
typedef void (*func_time_Time)(time_Time_0 *);

/* 2921 */
struct _slice_crypto_tls_Certificate
{
  crypto_tls_Certificate *array;
  int len;
  int cap;
};

/* 2920 */
typedef hash<string_comma__ptr_crypto_tls_Certificate> *map_string__ptr_crypto_tls_Certificate;

/* 2919 */
typedef void (*func_ptr_crypto_tls_ClientHelloInfo__ptr_crypto_tls_Certificate_comma_error)(crypto_tls_ClientHelloInfo *, crypto_tls_Certificate **, error_0 *);

/* 2918 */
typedef void (*func_ptr_crypto_tls_CertificateRequestInfo__ptr_crypto_tls_Certificate_comma_error)(crypto_tls_CertificateRequestInfo *, crypto_tls_Certificate **, error_0 *);

/* 2917 */
typedef void (*func_ptr_crypto_tls_ClientHelloInfo__ptr_crypto_tls_Config_comma_error)(crypto_tls_ClientHelloInfo *, crypto_tls_Config **, error_0 *);

/* 2916 */
typedef void (*func_slice__slice_uint8_comma__slice__slice__ptr_crypto_x509_Certificate_error)(_slice__slice_uint8_0, _slice__slice__ptr_crypto_x509_Certificate, error_0 *);

/* 2913 */
typedef void (*funccrypto_tls_ConnectionState_error)(crypto_tls_ConnectionState, error_0 *);

/* 3099 */
struct _slice_uint16_0
{
  uint16 *array;
  int len;
  int cap;
};

/* 3866 */
typedef runtime_iface crypto_tls_ClientSessionCache;

/* 2915 */
typedef void (*func_slice_uint8_comma_crypto_tls_ConnectionState__ptr_crypto_tls_SessionState_comma_error)(_slice_uint8_0, crypto_tls_ConnectionState, crypto_tls_SessionState **, error_0 *);

/* 2914 */
typedef void (*funccrypto_tls_ConnectionState_comma__ptr_crypto_tls_SessionState__slice_uint8_comma_error)(crypto_tls_ConnectionState, crypto_tls_SessionState *, _slice_uint8_0 *, error_0 *);

/* 2911 */
struct _slice_crypto_tls_CurveID
{
  unsigned __int16 *array;
  int len;
  int cap;
};

/* 2912 */
struct _slice_crypto_tls_ticketKey
{
  crypto_tls_ticketKey *array;
  int len;
  int cap;
};

/* 3870 */
struct crypto_tls_Config
{
  io_Reader_0 Rand;
  func_time_Time Time;
  _slice_crypto_tls_Certificate Certificates;
  map_string__ptr_crypto_tls_Certificate NameToCertificate;
  func_ptr_crypto_tls_ClientHelloInfo__ptr_crypto_tls_Certificate_comma_error GetCertificate;
  func_ptr_crypto_tls_CertificateRequestInfo__ptr_crypto_tls_Certificate_comma_error GetClientCertificate;
  func_ptr_crypto_tls_ClientHelloInfo__ptr_crypto_tls_Config_comma_error GetConfigForClient;
  func_slice__slice_uint8_comma__slice__slice__ptr_crypto_x509_Certificate_error VerifyPeerCertificate;
  funccrypto_tls_ConnectionState_error VerifyConnection;
  crypto_x509_CertPool *RootCAs;
  _slice_string_0 NextProtos;
  string_0 ServerName;
  int ClientAuth;
  crypto_x509_CertPool *ClientCAs;
  bool InsecureSkipVerify;
  _slice_uint16_0 CipherSuites;
  bool PreferServerCipherSuites;
  bool SessionTicketsDisabled;
  uint8 SessionTicketKey[32];
  crypto_tls_ClientSessionCache ClientSessionCache;
  func_slice_uint8_comma_crypto_tls_ConnectionState__ptr_crypto_tls_SessionState_comma_error UnwrapSession;
  funccrypto_tls_ConnectionState_comma__ptr_crypto_tls_SessionState__slice_uint8_comma_error WrapSession;
  uint16 MinVersion;
  uint16 MaxVersion;
  _slice_crypto_tls_CurveID CurvePreferences;
  bool DynamicRecordSizingDisabled;
  int Renegotiation;
  io_Writer_0 KeyLogWriter;
  _slice_uint8_0 EncryptedClientHelloConfigList;
  funccrypto_tls_ConnectionState_error EncryptedClientHelloRejectionVerify;
  sync_RWMutex_1 mutex;
  _slice_crypto_tls_ticketKey sessionTicketKeys;
  _slice_crypto_tls_ticketKey autoSessionTicketKeys;
};

/* 3532 */
struct hash<string_comma_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler> *buckets;
  bucket<string_comma_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3807 */
struct sync_atomic_Pointer_string_
{
  void *v;
};

/* 3808 */
struct log_Logger_0
{
  sync_Mutex outMu;
  io_Writer_0 out;
  sync_atomic_Pointer_string_ prefix;
  sync_atomic_Int32 flag;
  sync_atomic_Bool isDiscard;
};

/* 3535 */
struct hash<_ptr_net_Listener_comma_struct_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<_ptr_net_Listener_comma_struct_> *buckets;
  bucket<_ptr_net_Listener_comma_struct_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3537 */
struct hash<_ptr_net_http_conn_comma_struct_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<_ptr_net_http_conn_comma_struct_> *buckets;
  bucket<_ptr_net_http_conn_comma_struct_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 4334 */
struct bufio_Writer_0
{
  error_0 err;
  _slice_uint8_0 buf;
  int n;
  io_Writer_0 wr;
};

/* 3773 */
struct __attribute__((aligned(4))) vendor_golang_org_x_net_http2_hpack_HeaderField
{
  string_0 Name;
  string_0 Value;
  bool Sensitive;
};

/* 2886 */
typedef void (*funcvendor_golang_org_x_net_http2_hpack_HeaderField)(vendor_golang_org_x_net_http2_hpack_HeaderField);

/* 3771 */
struct __attribute__((aligned(4))) vendor_golang_org_x_net_http2_hpack_Decoder
{
  vendor_golang_org_x_net_http2_hpack_dynamicTable dynTab;
  funcvendor_golang_org_x_net_http2_hpack_HeaderField emit;
  bool emitEnabled;
  int maxStrLen;
  _slice_uint8_0 buf;
  bytes_Buffer_1 saveBuf;
  bool firstField;
};

/* 3736 */
struct net_http_http2FrameHeader
{
  bool valid;
  unsigned __int8 Type;
  unsigned __int8 Flags;
  uint32 Length;
  uint32 StreamID;
};

/* 3737 */
struct net_http_http2DataFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  _slice_uint8_0 data;
};

/* 3738 */
struct net_http_http2frameCache
{
  net_http_http2DataFrame dataFrame;
};

/* 3436 */
struct sudog<struct_>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3421 */
struct sudog<net_http_http2readFrameResult>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  net_http_http2readFrameResult *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3424 */
struct sudog<net_http_http2FrameWriteRequest>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  net_http_http2FrameWriteRequest *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3427 */
struct sudog<net_http_http2frameWriteResult>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  net_http_http2frameWriteResult *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3430 */
struct sudog<net_http_http2bodyReadMsg>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  net_http_http2bodyReadMsg *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3433 */
struct sudog<interface_>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  interface__0 *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3542 */
struct bucket<uint32_comma__ptr_net_http_http2stream>
{
  uint8 tophash[8];
  uint32 keys[8];
  net_http_http2stream *values[8];
  bucket<uint32_comma__ptr_net_http_http2stream> *overflow;
};

/* 3727 */
struct net_http_http2responseWriter
{
  net_http_http2responseWriterState *rws;
};

/* 4359 */
typedef runtime_iface io_ReadCloser_0;

/* 2866 */
typedef void (*func_io_ReadCloser_comma_error)(io_ReadCloser_0 *, error_0 *);

/* 2865 */
typedef hash<string_comma__slice_string> *net_url_Values;

/* 3123 */
typedef hchan<struct_> *_chan_left_chan_struct__0;

/* 3746 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_http_Request
{
  string_0 Method;
  net_url_URL *URL;
  string_0 Proto;
  int ProtoMajor;
  int ProtoMinor;
  net_http_Header Header;
  io_ReadCloser_0 Body;
  func_io_ReadCloser_comma_error GetBody;
  int64 ContentLength;
  _slice_string_0 TransferEncoding;
  bool Close;
  __attribute__((aligned(4))) string_0 Host;
  net_url_Values Form;
  net_url_Values PostForm;
  mime_multipart_Form *MultipartForm;
  net_http_Header Trailer;
  string_0 RemoteAddr;
  string_0 RequestURI;
  crypto_tls_ConnectionState *TLS;
  _chan_left_chan_struct__0 Cancel;
  net_http_Response *Response;
  string_0 Pattern;
  context_Context_0 ctx;
  net_http_pattern *pat;
  _slice_string_0 matches;
  map_string_string_0 otherValues;
};

/* 3469 */
struct bucket<string_comma_string>
{
  uint8 tophash[8];
  string_0 keys[8];
  string_0 values[8];
  bucket<string_comma_string> *overflow;
};

/* 3522 */
struct hash<string_comma_uint64>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_uint64> *buckets;
  bucket<string_comma_uint64> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3524 */
struct hash<vendor_golang_org_x_net_http2_hpack_pairNameValue_comma_uint64>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<vendor_golang_org_x_net_http2_hpack_pairNameValue_comma_uint64> *buckets;
  bucket<vendor_golang_org_x_net_http2_hpack_pairNameValue_comma_uint64> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 4387 */
typedef runtime_iface sync_Locker_0;

/* 4388 */
struct sync_Cond_0
{
  sync_Locker_0 L;
  sync_notifyList notify;
  unsigned int checker;
};

/* 4751 */
typedef sync_Cond_0 sync_Cond_1;

/* 3723 */
typedef runtime_iface net_http_http2pipeBuffer;

/* 3724 */
struct net_http_http2pipe
{
  sync_Mutex mu;
  sync_Cond_1 c;
  net_http_http2pipeBuffer b;
  int unread;
  error_0 err;
  error_0 breakErr;
  chan_struct__0 donec;
  func readFn;
};

/* 3530 */
struct hash<_ptr_net_http_http2serverConn_comma_struct_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<_ptr_net_http_http2serverConn_comma_struct_> *buckets;
  bucket<_ptr_net_http_http2serverConn_comma_struct_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3882 */
typedef runtime_eface crypto_PrivateKey_0;

/* 4748 */
typedef crypto_PrivateKey_0 crypto_PrivateKey_1;

/* 3382 */
struct _slice_crypto_tls_SignatureScheme
{
  unsigned __int16 *array;
  int len;
  int cap;
};

/* 3883 */
struct crypto_tls_Certificate
{
  _slice__slice_uint8_0 Certificate;
  crypto_PrivateKey_1 PrivateKey;
  _slice_crypto_tls_SignatureScheme SupportedSignatureAlgorithms;
  _slice_uint8_0 OCSPStaple;
  _slice__slice_uint8_0 SignedCertificateTimestamps;
  crypto_x509_Certificate *Leaf;
};

/* 3515 */
struct hash<string_comma__ptr_crypto_tls_Certificate>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma__ptr_crypto_tls_Certificate> *buckets;
  bucket<string_comma__ptr_crypto_tls_Certificate> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3869 */
struct crypto_tls_ClientHelloInfo
{
  _slice_uint16_0 CipherSuites;
  string_0 ServerName;
  _slice_crypto_tls_CurveID SupportedCurves;
  _slice_uint8_0 SupportedPoints;
  _slice_crypto_tls_SignatureScheme SignatureSchemes;
  _slice_string_0 SupportedProtos;
  _slice_uint16_0 SupportedVersions;
  net_Conn_0 Conn;
  crypto_tls_Config *config;
  context_Context_0 ctx;
};

/* 3868 */
struct crypto_tls_CertificateRequestInfo
{
  _slice__slice_uint8_0 AcceptableCAs;
  _slice_crypto_tls_SignatureScheme SignatureSchemes;
  uint16 Version;
  context_Context_0 ctx;
};

/* 2939 */
typedef hash<string_comma__slice_int> *map_string__slice_int_0;

/* 2938 */
struct _slice_crypto_x509_lazyCert
{
  crypto_x509_lazyCert *array;
  int len;
  int cap;
};

/* 2937 */
typedef hash<crypto_x509_sum224_comma_bool> *map_crypto_x509_sum224_bool;

/* 3926 */
struct __attribute__((aligned(4))) crypto_x509_CertPool
{
  map_string__slice_int_0 byName;
  _slice_crypto_x509_lazyCert lazyCerts;
  map_crypto_x509_sum224_bool haveSum;
  bool systemPool;
};

/* 2909 */
struct _slice__ptr_crypto_tls_activeCert
{
  crypto_tls_activeCert **array;
  int len;
  int cap;
};

/* 3865 */
struct crypto_tls_SessionState
{
  _slice__slice_uint8_0 Extra;
  bool EarlyData;
  uint16 version;
  bool isClient;
  uint16 cipherSuite;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 createdAt;
  _slice_uint8_0 secret;
  bool extMasterSecret;
  _slice__ptr_crypto_x509_Certificate peerCertificates;
  _slice__ptr_crypto_tls_activeCert activeCertHandles;
  _slice_uint8_0 ocspResponse;
  _slice__slice_uint8_0 scts;
  _slice__slice__ptr_crypto_x509_Certificate verifiedChains;
  string_0 alpnProtocol;
  uint64 useBy;
  uint32 ageAdd;
  _slice_uint8_0 ticket;
};

/* 3864 */
struct crypto_tls_ticketKey
{
  uint8 aesKey[16];
  uint8 hmacKey[16];
  time_Time_1 created;
};

/* 3534 */
typedef void (*func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler)(net_http_Server *, crypto_tls_Conn *, net_http_Handler);

/* 3533 */
struct bucket<string_comma_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler>
{
  uint8 tophash[8];
  string_0 keys[8];
  func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler values[8];
  bucket<string_comma_func_ptr_net_http_Server_comma__ptr_crypto_tls_Conn_comma_net_http_Handler> *overflow;
};

/* 3536 */
struct bucket<_ptr_net_Listener_comma_struct_>
{
  uint8 tophash[8];
  net_Listener_0 *keys[8];
  bucket<_ptr_net_Listener_comma_struct_> *overflow;
};

/* 3538 */
struct bucket<_ptr_net_http_conn_comma_struct_>
{
  uint8 tophash[8];
  net_http_conn *keys[8];
  bucket<_ptr_net_http_conn_comma_struct_> *overflow;
};

/* 3735 */
struct net_http_http2readFrameResult
{
  net_http_http2Frame f;
  error_0 err;
  func readMore;
};

/* 3733 */
typedef runtime_iface net_http_http2writeFramer;

/* 3734 */
struct net_http_http2FrameWriteRequest
{
  net_http_http2writeFramer write;
  net_http_http2stream *stream;
  chan_error_0 done;
};

/* 3732 */
struct net_http_http2frameWriteResult
{
  net_http_http2FrameWriteRequest wr;
  error_0 err;
};

/* 3731 */
struct net_http_http2bodyReadMsg
{
  net_http_http2stream *st;
  int n;
};

/* 2867 */
typedef hchan<bool> *chan_bool_0;

/* 3760 */
struct net_http_http2responseWriterState
{
  net_http_http2stream *stream;
  net_http_Request *req;
  net_http_http2serverConn *conn;
  bufio_Writer_0 *bw;
  net_http_Header handlerHeader;
  net_http_Header snapHeader;
  _slice_string_0 trailers;
  int status;
  bool wroteHeader;
  bool sentHeader;
  bool handlerDone;
  __attribute__((packed)) __attribute__((aligned(2))) int64 sentContentLen;
  __attribute__((packed)) __attribute__((aligned(1))) int64 wroteBytes;
  sync_Mutex closeNotifierMu;
  chan_bool_0 closeNotifierCh;
};

/* 3599 */
typedef hash<string_comma__slice_string> *map_string__slice_string_0;

/* 2896 */
typedef hash<string_comma__slice__ptr_mime_multipart_FileHeader> *map_string__slice__ptr_mime_multipart_FileHeader;

/* 3802 */
struct mime_multipart_Form
{
  map_string__slice_string_0 Value;
  map_string__slice__ptr_mime_multipart_FileHeader File;
};

/* 3745 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_http_Response
{
  string_0 Status;
  int StatusCode;
  string_0 Proto;
  int ProtoMajor;
  int ProtoMinor;
  net_http_Header Header;
  io_ReadCloser_0 Body;
  int64 ContentLength;
  _slice_string_0 TransferEncoding;
  bool Close;
  bool Uncompressed;
  __attribute__((aligned(4))) net_http_Header Trailer;
  net_http_Request *Request;
  crypto_tls_ConnectionState *TLS;
};

/* 3523 */
struct __attribute__((packed)) __attribute__((aligned(4))) bucket<string_comma_uint64>
{
  uint8 tophash[8];
  string_0 keys[8];
  uint64 values[8];
  bucket<string_comma_uint64> *overflow;
};

/* 3779 */
struct vendor_golang_org_x_net_http2_hpack_pairNameValue
{
  string_0 name;
  string_0 value;
};

/* 3525 */
struct __attribute__((packed)) __attribute__((aligned(4))) bucket<vendor_golang_org_x_net_http2_hpack_pairNameValue_comma_uint64>
{
  uint8 tophash[8];
  vendor_golang_org_x_net_http2_hpack_pairNameValue keys[8];
  uint64 values[8];
  bucket<vendor_golang_org_x_net_http2_hpack_pairNameValue_comma_uint64> *overflow;
};

/* 3531 */
struct bucket<_ptr_net_http_http2serverConn_comma_struct_>
{
  uint8 tophash[8];
  net_http_http2serverConn *keys[8];
  bucket<_ptr_net_http_http2serverConn_comma_struct_> *overflow;
};

/* 3516 */
struct bucket<string_comma__ptr_crypto_tls_Certificate>
{
  uint8 tophash[8];
  string_0 keys[8];
  crypto_tls_Certificate *values[8];
  bucket<string_comma__ptr_crypto_tls_Certificate> *overflow;
};

/* 3498 */
struct hash<string_comma__slice_int>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma__slice_int> *buckets;
  bucket<string_comma__slice_int> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 2936 */
typedef void (*func_slice__ptr_crypto_x509_Certificate_error)(_slice__ptr_crypto_x509_Certificate, error_0 *);

/* 2935 */
typedef void (*func__ptr_crypto_x509_Certificate_comma_error)(crypto_x509_Certificate **, error_0 *);

/* 3925 */
struct crypto_x509_lazyCert
{
  _slice_uint8_0 rawSubject;
  func_slice__ptr_crypto_x509_Certificate_error constraint;
  func__ptr_crypto_x509_Certificate_comma_error getCert;
};

/* 3500 */
struct hash<crypto_x509_sum224_comma_bool>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<crypto_x509_sum224_comma_bool> *buckets;
  bucket<crypto_x509_sum224_comma_bool> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3880 */
struct crypto_tls_activeCert
{
  crypto_x509_Certificate *cert;
};

/* 2908 */
typedef void (*funccontext_Context_error)(context_Context_0, error_0 *);

/* 4157 */
typedef runtime_iface hash_Hash_0;

/* 3858 */
struct crypto_tls_halfConn
{
  sync_Mutex Mutex;
  error_0 err;
  uint16 version;
  interface__0 cipher;
  hash_Hash_0 mac;
  uint8 seq[8];
  uint8 scratchBuf[13];
  interface__0 nextCipher;
  hash_Hash_0 nextMac;
  int level;
  _slice_uint8_0 trafficSecret;
};

/* 4349 */
struct bytes_Reader_0
{
  _slice_uint8_0 s;
  __attribute__((packed)) __attribute__((aligned(1))) int64 i;
  int prevRune;
};

/* 4727 */
typedef bytes_Reader_0 bytes_Reader_1;

/* 3861 */
struct __attribute__((packed)) __attribute__((aligned(4))) crypto_tls_Conn
{
  net_Conn_0 conn;
  bool isClient;
  __attribute__((aligned(4))) funccontext_Context_error handshakeFn;
  crypto_tls_quicState *quic;
  sync_atomic_Bool isHandshakeComplete;
  sync_Mutex handshakeMutex;
  error_0 handshakeErr;
  uint16 vers;
  bool haveVers;
  __attribute__((aligned(2))) crypto_tls_Config *config;
  int handshakes;
  bool extMasterSecret;
  bool didResume;
  bool didHRR;
  __attribute__((aligned(2))) uint16 cipherSuite;
  unsigned __int16 curveID;
  _slice_uint8_0 ocspResponse;
  _slice__slice_uint8_0 scts;
  _slice__ptr_crypto_x509_Certificate peerCertificates;
  _slice__ptr_crypto_tls_activeCert activeCertHandles;
  _slice__slice__ptr_crypto_x509_Certificate verifiedChains;
  string_0 serverName;
  bool secureRenegotiation;
  __attribute__((aligned(4))) funcstring_comma__slice_uint8_comma_int__slice_uint8_comma_error ekm;
  _slice_uint8_0 resumptionSecret;
  bool echAccepted;
  __attribute__((aligned(4))) _slice_crypto_tls_ticketKey ticketKeys;
  bool clientFinishedIsFirst;
  __attribute__((aligned(4))) error_0 closeNotifyErr;
  bool closeNotifySent;
  uint8 clientFinished[12];
  uint8 serverFinished[12];
  __attribute__((aligned(4))) string_0 clientProtocol;
  crypto_tls_halfConn in;
  crypto_tls_halfConn out;
  bytes_Buffer_1 rawInput;
  bytes_Reader_1 input;
  bytes_Buffer_1 hand;
  bool buffering;
  __attribute__((aligned(4))) _slice_uint8_0 sendBuf;
  int64 bytesSent;
  int64 packetsSent;
  int retryCount;
  sync_atomic_Int32 activeCall;
  uint8 tmp[16];
};

/* 3151 */
typedef void (*context_CancelFunc)(void);

/* 3748 */
struct sync_atomic_Pointer_net_http_response_
{
  void *v;
};

/* 3750 */
struct __attribute__((aligned(8))) net_http_conn
{
  net_http_Server *server;
  context_CancelFunc cancelCtx;
  net_Conn_0 rwc;
  string_0 remoteAddr;
  crypto_tls_ConnectionState *tlsState;
  error_0 werr;
  net_http_connReader *r;
  bufio_Reader_0 *bufr;
  bufio_Writer_0 *bufw;
  string_0 lastMethod;
  sync_atomic_Pointer_net_http_response_ curReq;
  sync_atomic_Uint64 curState;
  sync_Mutex mu;
  bool hijackedv;
};

/* 3417 */
struct waitq<bool>
{
  sudog<bool> *first;
  sudog<bool> *last;
};

/* 3416 */
struct hchan<bool>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<bool> recvq;
  waitq<bool> sendq;
  runtime_mutex_1 lock;
};

/* 3519 */
struct hash<string_comma__slice__ptr_mime_multipart_FileHeader>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma__slice__ptr_mime_multipart_FileHeader> *buckets;
  bucket<string_comma__slice__ptr_mime_multipart_FileHeader> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3011 */
struct _slice_int_0
{
  int *array;
  int len;
  int cap;
};

/* 3499 */
struct bucket<string_comma__slice_int>
{
  uint8 tophash[8];
  string_0 keys[8];
  _slice_int_0 values[8];
  bucket<string_comma__slice_int> *overflow;
};

/* 3221 */
typedef uint8 crypto_x509_sum224[28];

/* 3501 */
struct bucket<crypto_x509_sum224_comma_bool>
{
  uint8 tophash[8];
  crypto_x509_sum224 keys[8];
  bool values[8];
  bucket<crypto_x509_sum224_comma_bool> *overflow;
};

/* 2907 */
struct _slice_crypto_tls_QUICEvent
{
  crypto_tls_QUICEvent *array;
  int len;
  int cap;
};

/* 3859 */
struct crypto_tls_QUICEvent
{
  int Kind;
  int Level;
  _slice_uint8_0 Data;
  uint16 Suite;
  crypto_tls_SessionState *SessionState;
};

/* 3860 */
struct __attribute__((aligned(4))) crypto_tls_quicState
{
  _slice_crypto_tls_QUICEvent events;
  int nextEvent;
  crypto_tls_QUICEvent eventArr[8];
  bool started;
  chan_struct__0 signalc;
  chan_struct__0 blockedc;
  _chan_left_chan_struct__0 cancelc;
  context_CancelFunc cancel;
  bool waitingForDrain;
  _slice_uint8_0 readbuf;
  _slice_uint8_0 transportParams;
  bool enableSessionEvents;
};

/* 3749 */
struct net_http_connReader
{
  net_http_conn *conn;
  sync_Mutex mu;
  bool hasByte;
  uint8 byteBuf[1];
  sync_Cond_0 *cond;
  bool inRead;
  bool aborted;
  int64 remain;
};

/* 4335 */
struct bufio_Reader_0
{
  _slice_uint8_0 buf;
  io_Reader_0 rd;
  int r;
  int w;
  error_0 err;
  int lastByte;
  int lastRuneSize;
};

/* 3418 */
struct sudog<bool>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  bool *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3521 */
struct _slice__ptr_mime_multipart_FileHeader
{
  mime_multipart_FileHeader **array;
  int len;
  int cap;
};

/* 3520 */
struct bucket<string_comma__slice__ptr_mime_multipart_FileHeader>
{
  uint8 tophash[8];
  string_0 keys[8];
  _slice__ptr_mime_multipart_FileHeader values[8];
  bucket<string_comma__slice__ptr_mime_multipart_FileHeader> *overflow;
};

/* 3803 */
struct __attribute__((packed)) __attribute__((aligned(4))) mime_multipart_FileHeader
{
  string_0 Filename;
  net_textproto_MIMEHeader Header;
  int64 Size;
  _slice_uint8_0 content;
  string_0 tmpfile;
  int64 tmpoff;
  bool tmpshared;
};

/* 2853 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_http2stream_X1_time_Time_
{
  uintptr F;
  net_http_http2stream *X0;
  time_Time_1 X1;
};

/* 2854 */
struct noalg_struct__F_uintptr_R_net_http_Handler_
{
  uintptr F;
  net_http_Handler R;
};

/* 2855 */
typedef void (*func_uint32_comma_error)(uint32 *, error_0 *);

/* 2856 */
struct _slice_net_http_http2FrameWriteRequest
{
  net_http_http2FrameWriteRequest *array;
  int len;
  int cap;
};

/* 2857 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_http2Server_
{
  uintptr F;
  net_http_http2Server *X0;
};

/* 2858 */
typedef unsigned __int16 noalg__8_net_http_http2SettingID[8];

/* 2862 */
typedef func net_http_http2incomparable[];

/* 3765 */
typedef runtime_iface vendor_golang_org_x_net_http_httpproxy_matcher;

/* 2884 */
struct _slice_vendor_golang_org_x_net_http_httpproxy_matcher
{
  vendor_golang_org_x_net_http_httpproxy_matcher *array;
  int len;
  int cap;
};

/* 2885 */
typedef func vendor_golang_org_x_net_http2_hpack_incomparable[];

/* 2888 */
struct _slice_vendor_golang_org_x_net_idna_valueRange
{
  vendor_golang_org_x_net_idna_valueRange *array;
  int len;
  int cap;
};

/* 3780 */
struct vendor_golang_org_x_net_idna_valueRange
{
  uint16 value;
  uint8 lo;
  uint8 hi;
};

/* 2889 */
typedef void (*funcstring_bool)(string_0, bool *);

/* 2890 */
typedef void (*func_ptr_vendor_golang_org_x_net_idna_Profile_comma_string_string_comma_bool_comma_error)(vendor_golang_org_x_net_idna_Profile *, string_0, string_0 *, bool *, error_0 *);

/* 2891 */
typedef void (*func_ptr_vendor_golang_org_x_net_idna_Profile_comma_string_error)(vendor_golang_org_x_net_idna_Profile *, string_0, error_0 *);

/* 3784 */
struct vendor_golang_org_x_net_idna_options
{
  bool transitional;
  bool useSTD3Rules;
  bool checkHyphens;
  bool checkJoiners;
  bool verifyDNSLength;
  bool removeLeadingDots;
  vendor_golang_org_x_net_idna_idnaTrie *trie;
  func_ptr_vendor_golang_org_x_net_idna_Profile_comma_string_error fromPuny;
  func_ptr_vendor_golang_org_x_net_idna_Profile_comma_string_string_comma_bool_comma_error mapping;
  funcstring_bool bidirule;
};

/* 3785 */
struct vendor_golang_org_x_net_idna_Profile
{
  vendor_golang_org_x_net_idna_options options;
};

/* 3783 */
struct vendor_golang_org_x_net_idna_idnaTrie
{
};

/* 2892 */
struct _slice_vendor_golang_org_x_text_unicode_norm_valueRange
{
  vendor_golang_org_x_text_unicode_norm_valueRange *array;
  int len;
  int cap;
};

/* 3787 */
struct vendor_golang_org_x_text_unicode_norm_valueRange
{
  uint16 value;
  uint8 lo;
  uint8 hi;
};

/* 2893 */
typedef void (*vendor_golang_org_x_text_unicode_norm_iterFunc)(vendor_golang_org_x_text_unicode_norm_Iter *, _slice_uint8_0 *);

/* 3794 */
struct vendor_golang_org_x_text_unicode_norm_Properties
{
  uint8 pos;
  uint8 size;
  uint8 ccc;
  uint8 tccc;
  uint8 nLead;
  unsigned __int8 flags;
  uint16 index;
};

/* 3792 */
struct vendor_golang_org_x_text_unicode_norm_input
{
  string_0 str;
  _slice_uint8_0 bytes;
};

/* 2894 */
typedef void (*vendor_golang_org_x_text_unicode_norm_lookupFunc)(vendor_golang_org_x_text_unicode_norm_input, int, vendor_golang_org_x_text_unicode_norm_Properties *);

/* 3793 */
struct vendor_golang_org_x_text_unicode_norm_formInfo
{
  int form;
  bool composing;
  bool compatibility;
  vendor_golang_org_x_text_unicode_norm_lookupFunc info;
  vendor_golang_org_x_text_unicode_norm_iterFunc nextMain;
};

/* 2895 */
typedef void (*func_ptr_vendor_golang_org_x_text_unicode_norm_reorderBuffer_bool)(vendor_golang_org_x_text_unicode_norm_reorderBuffer *, bool *);

/* 3795 */
struct vendor_golang_org_x_text_unicode_norm_reorderBuffer
{
  vendor_golang_org_x_text_unicode_norm_Properties rune[32];
  uint8 byte[128];
  uint8 nbyte;
  unsigned __int8 ss;
  int nrune;
  vendor_golang_org_x_text_unicode_norm_formInfo f;
  vendor_golang_org_x_text_unicode_norm_input src;
  int nsrc;
  vendor_golang_org_x_text_unicode_norm_input tmpBytes;
  _slice_uint8_0 out;
  func_ptr_vendor_golang_org_x_text_unicode_norm_reorderBuffer_bool flushF;
};

/* 3791 */
struct vendor_golang_org_x_text_unicode_norm_Iter
{
  vendor_golang_org_x_text_unicode_norm_reorderBuffer rb;
  uint8 buf[128];
  vendor_golang_org_x_text_unicode_norm_Properties info;
  vendor_golang_org_x_text_unicode_norm_iterFunc next;
  vendor_golang_org_x_text_unicode_norm_iterFunc asciiF;
  int p;
  _slice_uint8_0 multiSeg;
};

/* 2897 */
typedef uint16 noalg__8_uint16[8];

/* 2898 */
typedef void (*func_slice_uint8_comma__slice_uint8_comma__slice_uint8_comma__slice_uint8)(_slice_uint8_0, _slice_uint8_0, _slice_uint8_0, _slice_uint8_0);

/* 2899 */
typedef void (*func_slice_uint8_hash_Hash)(_slice_uint8_0, hash_Hash_0 *);

/* 2900 */
typedef void (*func_slice_uint8_comma__slice_uint8_comma_bool_interface_)(_slice_uint8_0, _slice_uint8_0, bool, interface__0 *);

/* 3872 */
typedef runtime_iface crypto_tls_keyAgreement;

/* 2901 */
typedef void (*funcuint16_crypto_tls_keyAgreement)(uint16, crypto_tls_keyAgreement *);

/* 2902 */
struct _slice_crypto_tls_pskIdentity
{
  crypto_tls_pskIdentity *array;
  int len;
  int cap;
};

/* 3842 */
struct crypto_tls_pskIdentity
{
  _slice_uint8_0 label;
  uint32 obfuscatedTicketAge;
};

/* 2903 */
struct _slice_crypto_tls_keyShare
{
  crypto_tls_keyShare *array;
  int len;
  int cap;
};

/* 3843 */
struct crypto_tls_keyShare
{
  unsigned __int16 group;
  _slice_uint8_0 data;
};

/* 2904 */
struct _slice_crypto_tls_echExtension
{
  crypto_tls_echExtension *array;
  int len;
  int cap;
};

/* 3845 */
struct crypto_tls_echExtension
{
  uint16 Type;
  _slice_uint8_0 Data;
};

/* 2905 */
struct _slice_crypto_tls_echCipher
{
  crypto_tls_echCipher *array;
  int len;
  int cap;
};

/* 3846 */
struct crypto_tls_echCipher
{
  uint16 KDFID;
  uint16 AEADID;
};

/* 3873 */
typedef runtime_iface crypto_tls_aead;

/* 2906 */
typedef void (*func_slice_uint8_comma__slice_uint8_crypto_tls_aead)(_slice_uint8_0, _slice_uint8_0, crypto_tls_aead *);

/* 2923 */
typedef unsigned __int16 crypto_internal_mlkem768_nttElement[256];

/* 2924 */
struct _sync_Once_crypto_x509_v__ptr_crypto_x509_Certificate_
{
  sync_Once_1 Once;
  crypto_x509_Certificate *v;
};

/* 2925 */
struct noalg_struct__F_uintptr_X0__ptr_struct__sync_Once_crypto_x509_v__ptr_crypto_x509_Certificate__X1__ptr__slice_uint8_
{
  uintptr F;
  _sync_Once_crypto_x509_v__ptr_crypto_x509_Certificate_ *X0;
  _slice_uint8_0 *X1;
};

/* 2926 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_x509_Certificate_
{
  uintptr F;
  crypto_x509_Certificate *X0;
};

/* 2940 */
struct noalg_struct__F_uintptr_R__ptr_net_Resolver_
{
  uintptr F;
  net_Resolver_0 *R;
};

/* 2955 */
typedef void (*funccontext_Context_comma_string_comma_string_net_Conn_comma_error)(context_Context_0, string_0, string_0, net_Conn_0 *, error_0 *);

/* 2957 */
typedef hash<string_comma__ptr_internal_singleflight_call> *map_string__ptr_internal_singleflight_call;

/* 4002 */
struct internal_singleflight_Group
{
  sync_Mutex mu;
  map_string__ptr_internal_singleflight_call m;
};

/* 3986 */
struct net_Resolver_0
{
  bool PreferGo;
  bool StrictErrors;
  funccontext_Context_comma_string_comma_string_net_Conn_comma_error Dial;
  internal_singleflight_Group lookupGroup;
};

/* 3482 */
struct hash<string_comma__ptr_internal_singleflight_call>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma__ptr_internal_singleflight_call> *buckets;
  bucket<string_comma__ptr_internal_singleflight_call> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3483 */
struct bucket<string_comma__ptr_internal_singleflight_call>
{
  uint8 tophash[8];
  string_0 keys[8];
  internal_singleflight_call *values[8];
  bucket<string_comma__ptr_internal_singleflight_call> *overflow;
};

/* 4000 */
typedef hchan<internal_singleflight_Result> *chan_chan_left__internal_singleflight_Result;

/* 2956 */
struct _slice_chan_chan_left__internal_singleflight_Result
{
  chan_chan_left__internal_singleflight_Result *array;
  int len;
  int cap;
};

/* 4001 */
struct internal_singleflight_call
{
  sync_WaitGroup_1 wg;
  interface__0 val;
  error_0 err;
  int dups;
  _slice_chan_chan_left__internal_singleflight_Result chans;
};

/* 3408 */
struct waitq<internal_singleflight_Result>
{
  sudog<internal_singleflight_Result> *first;
  sudog<internal_singleflight_Result> *last;
};

/* 3407 */
struct hchan<internal_singleflight_Result>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<internal_singleflight_Result> recvq;
  waitq<internal_singleflight_Result> sendq;
  runtime_mutex_1 lock;
};

/* 3409 */
struct sudog<internal_singleflight_Result>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  internal_singleflight_Result *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 4003 */
struct __attribute__((aligned(4))) internal_singleflight_Result
{
  interface__0 Val;
  error_0 Err;
  bool Shared;
};

/* 3977 */
struct net_TCPAddr_0
{
  net_IP_1 IP;
  int Port;
  string_0 Zone;
};

/* 4734 */
typedef net_TCPAddr_0 net_TCPAddr_1;

/* 2941 */
struct _net_laddr_net_TCPAddr_net_value_int_
{
  net_TCPAddr_1 laddr;
  int value;
};

/* 2942 */
typedef hash<int_comma_string> *map_int_string_0;

/* 3496 */
struct hash<int_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<int_comma_string> *buckets;
  bucket<int_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3497 */
struct bucket<int_comma_string>
{
  uint8 tophash[8];
  int keys[8];
  string_0 values[8];
  bucket<int_comma_string> *overflow;
};

/* 2945 */
typedef hchan<net_result_2> *chan_net_result_2;

/* 2944 */
struct noalg_struct__F_uintptr_X0__ptr_net_Resolver_X1_context_Context_X2__ptr_net_dnsConfig_X3_string_X4_chan_net_result_2_
{
  uintptr F;
  net_Resolver_0 *X0;
  context_Context_0 X1;
  net_dnsConfig_0 *X2;
  string_0 X3;
  chan_net_result_2 X4;
};

/* 3984 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_dnsConfig_0
{
  _slice_string_0 servers;
  _slice_string_0 search;
  int ndots;
  __int64 timeout;
  int attempts;
  bool rotate;
  bool unknownOpt;
  __attribute__((aligned(4))) _slice_string_0 lookup;
  error_0 err;
  time_Time_1 mtime;
  uint32 soffset;
  bool singleRequest;
  bool useTCP;
  bool trustAD;
  bool noReload;
};

/* 3414 */
struct waitq<net_result_2>
{
  sudog<net_result_2> *first;
  sudog<net_result_2> *last;
};

/* 3413 */
struct hchan<net_result_2>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<net_result_2> recvq;
  waitq<net_result_2> sendq;
  runtime_mutex_1 lock;
};

/* 3415 */
struct sudog<net_result_2>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  net_result_2 *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 4015 */
struct vendor_golang_org_x_net_dns_dnsmessage_header
{
  uint16 id;
  uint16 bits;
  uint16 questions;
  uint16 answers;
  uint16 authorities;
  uint16 additionals;
};

/* 4013 */
struct vendor_golang_org_x_net_dns_dnsmessage_Parser
{
  _slice_uint8_0 msg;
  vendor_golang_org_x_net_dns_dnsmessage_header header;
  unsigned __int8 section;
  int off;
  int index;
  bool resHeaderValid;
  int resHeaderOffset;
  unsigned __int16 resHeaderType;
  uint16 resHeaderLength;
};

/* 3962 */
struct net_result_2
{
  vendor_golang_org_x_net_dns_dnsmessage_Parser p;
  string_0 server;
  error_0 error;
};

/* 2946 */
typedef hchan<net_dialResult_1> *chan_net_dialResult_1;

/* 3411 */
struct waitq<net_dialResult_1>
{
  sudog<net_dialResult_1> *first;
  sudog<net_dialResult_1> *last;
};

/* 3410 */
struct hchan<net_dialResult_1>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<net_dialResult_1> recvq;
  waitq<net_dialResult_1> sendq;
  runtime_mutex_1 lock;
};

/* 3412 */
struct sudog<net_dialResult_1>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  net_dialResult_1 *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3972 */
struct __attribute__((aligned(4))) net_dialResult_1
{
  net_Conn_0 Conn;
  error_0 error;
  bool primary;
  bool done;
};

/* 3995 */
typedef runtime_iface net_Addr_0;

/* 3978 */
struct net_addrList_0
{
  net_Addr_0 *array;
  int len;
  int cap;
};

/* 2947 */
struct noalg_struct__F_uintptr_X0_net_addrList_X1_net_addrList_X2__ptr_net_sysDialer_X3_chan_net_dialResult_1_X4_chan_struct__
{
  uintptr F;
  net_addrList_0 X0;
  net_addrList_0 X1;
  net_sysDialer_0 *X2;
  chan_net_dialResult_1 X3;
  chan_struct__0 X4;
};

/* 4220 */
typedef runtime_iface syscall_RawConn_0;

/* 2952 */
typedef void (*funcstring_comma_string_comma_syscall_RawConn_error)(string_0, string_0, syscall_RawConn_0, error_0 *);

/* 2951 */
typedef void (*funccontext_Context_comma_string_comma_string_comma_syscall_RawConn_error)(context_Context_0, string_0, string_0, syscall_RawConn_0, error_0 *);

/* 3980 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_Dialer_0
{
  __int64 Timeout;
  time_Time_1 Deadline;
  net_Addr_0 LocalAddr;
  bool DualStack;
  __attribute__((aligned(4))) __int64 FallbackDelay;
  __int64 KeepAlive;
  net_KeepAliveConfig KeepAliveConfig;
  net_Resolver_0 *Resolver;
  _chan_left_chan_struct__0 Cancel;
  funcstring_comma_string_comma_syscall_RawConn_error Control;
  funccontext_Context_comma_string_comma_string_comma_syscall_RawConn_error ControlContext;
  unsigned __int8 mptcpStatus;
};

/* 4757 */
typedef net_Dialer_0 net_Dialer_1;

/* 2950 */
typedef void (*funccontext_Context_comma_string_comma__ptr_net_TCPAddr_comma__ptr_net_TCPAddr__ptr_net_TCPConn_comma_error)(context_Context_0, string_0, net_TCPAddr_1 *, net_TCPAddr_1 *, net_TCPConn_0 **, error_0 *);

/* 3975 */
struct net_sysDialer_0
{
  net_Dialer_1 Dialer;
  string_0 network;
  string_0 address;
  funccontext_Context_comma_string_comma__ptr_net_TCPAddr_comma__ptr_net_TCPAddr__ptr_net_TCPConn_comma_error testHookDialTCP;
};

/* 3992 */
struct net_conn_0
{
  net_netFD_0 *fd;
};

/* 4717 */
typedef net_conn_0 net_conn_1;

/* 3974 */
struct net_TCPConn_0
{
  net_conn_1 conn;
};

/* 3996 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_netFD_0
{
  internal_poll_FD pfd;
  int family;
  int sotype;
  bool isConnected;
  __attribute__((aligned(4))) string_0 net;
  net_Addr_0 laddr;
  net_Addr_0 raddr;
};

/* 2948 */
typedef void (*funcstring_comma_string_comma_error)(string_0, string_0, error_0);

/* 2949 */
typedef void (*func_slice_interface__comma_bool_comma_error)(_slice_interface__0, bool, error_0);

/* 2953 */
typedef hash<string_comma__slice_net_nssSource> *map_string__slice_net_nssSource_0;

/* 3491 */
struct hash<string_comma__slice_net_nssSource>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma__slice_net_nssSource> *buckets;
  bucket<string_comma__slice_net_nssSource> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3493 */
struct _slice_net_nssSource_0
{
  net_nssSource_0 *array;
  int len;
  int cap;
};

/* 3492 */
struct bucket<string_comma__slice_net_nssSource>
{
  uint8 tophash[8];
  string_0 keys[8];
  _slice_net_nssSource_0 values[8];
  bucket<string_comma__slice_net_nssSource> *overflow;
};

/* 2954 */
struct _slice_net_nssCriterion_0
{
  net_nssCriterion_0 *array;
  int len;
  int cap;
};

/* 3983 */
struct net_nssSource_0
{
  string_0 source;
  _slice_net_nssCriterion_0 criteria;
};

/* 3982 */
struct net_nssCriterion_0
{
  bool negate;
  string_0 status;
  string_0 action;
};

/* 2958 */
struct _slice_vendor_golang_org_x_net_dns_dnsmessage_Option
{
  vendor_golang_org_x_net_dns_dnsmessage_Option *array;
  int len;
  int cap;
};

/* 4004 */
struct vendor_golang_org_x_net_dns_dnsmessage_Option
{
  uint16 Code;
  _slice_uint8_0 Data;
};

/* 2959 */
typedef hash<string_comma_uint16> *map_string_uint16_0;

/* 3474 */
struct hash<string_comma_uint16>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_uint16> *buckets;
  bucket<string_comma_uint16> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3475 */
struct bucket<string_comma_uint16>
{
  uint8 tophash[8];
  string_0 keys[8];
  uint16 values[8];
  bucket<string_comma_uint16> *overflow;
};

/* 2960 */
struct noalg_struct__F_uintptr_X0__ptr_unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___X1__ptr__9_uintptr_
{
  uintptr F;
  unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___0 *X0;
  uintptr (*X1)[9];
};

/* 4053 */
struct unique_cloneSeq_0
{
  _slice_uintptr_0 stringOffsets;
};

/* 4024 */
struct unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___0
{
  internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *HashTrieMap;
  unique_cloneSeq_0 cloneSeq;
};

/* 2962 */
typedef void (*internal_concurrent_hashFunc)(void *, uintptr, uintptr *);

/* 2961 */
typedef void (*internal_concurrent_equalFunc)(void *, void *, bool *);

/* 4031 */
struct internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *root;
  internal_concurrent_hashFunc keyHash;
  internal_concurrent_equalFunc keyEqual;
  internal_concurrent_equalFunc valEqual;
  uintptr seed;
};

/* 4029 */
struct internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  bool isEntry;
};

/* 4030 */
struct internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ node;
  sync_atomic_Bool dead;
  sync_Mutex mu;
  internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *parent;
  sync_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ children[16];
};

/* 4049 */
struct sync_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__
{
  void *v;
};

/* 2964 */
typedef uint64 crypto_internal_edwards25519_fiatScalarMontgomeryDomainFieldElement[4];

/* 2965 */
typedef func crypto_internal_edwards25519_incomparable[];

/* 2966 */
typedef void (*func__ptr_crypto_internal_nistec_P224Point)(crypto_internal_nistec_P224Point **);

/* 4134 */
struct crypto_internal_nistec_P224Point
{
  crypto_internal_nistec_fiat_P224Element *x;
  crypto_internal_nistec_fiat_P224Element *y;
  crypto_internal_nistec_fiat_P224Element *z;
};

/* 2978 */
typedef uint64 crypto_internal_nistec_fiat_p224MontgomeryDomainFieldElement[4];

/* 4142 */
struct crypto_internal_nistec_fiat_P224Element
{
  crypto_internal_nistec_fiat_p224MontgomeryDomainFieldElement x;
};

/* 2967 */
typedef void (*func__ptr_crypto_internal_nistec_P256Point)(crypto_internal_nistec_P256Point **);

/* 4133 */
struct crypto_internal_nistec_P256Point
{
  crypto_internal_nistec_fiat_P256Element *x;
  crypto_internal_nistec_fiat_P256Element *y;
  crypto_internal_nistec_fiat_P256Element *z;
};

/* 2977 */
typedef uint64 crypto_internal_nistec_fiat_p256MontgomeryDomainFieldElement[4];

/* 4140 */
struct crypto_internal_nistec_fiat_P256Element
{
  crypto_internal_nistec_fiat_p256MontgomeryDomainFieldElement x;
};

/* 2968 */
typedef void (*func__ptr_crypto_internal_nistec_P384Point)(crypto_internal_nistec_P384Point **);

/* 4132 */
struct crypto_internal_nistec_P384Point
{
  crypto_internal_nistec_fiat_P384Element *x;
  crypto_internal_nistec_fiat_P384Element *y;
  crypto_internal_nistec_fiat_P384Element *z;
};

/* 2976 */
typedef uint64 crypto_internal_nistec_fiat_p384MontgomeryDomainFieldElement[6];

/* 4138 */
struct crypto_internal_nistec_fiat_P384Element
{
  crypto_internal_nistec_fiat_p384MontgomeryDomainFieldElement x;
};

/* 2969 */
typedef void (*func__ptr_crypto_internal_nistec_P521Point)(crypto_internal_nistec_P521Point **);

/* 4131 */
struct crypto_internal_nistec_P521Point
{
  crypto_internal_nistec_fiat_P521Element *x;
  crypto_internal_nistec_fiat_P521Element *y;
  crypto_internal_nistec_fiat_P521Element *z;
};

/* 2975 */
typedef uint64 crypto_internal_nistec_fiat_p521MontgomeryDomainFieldElement[9];

/* 4136 */
struct crypto_internal_nistec_fiat_P521Element
{
  crypto_internal_nistec_fiat_p521MontgomeryDomainFieldElement x;
};

/* 2970 */
typedef void (*func_go_shape__ptr_uint8)(go_shape__ptr_uint8 *);

/* 2971 */
typedef crypto_internal_nistec_P521Point *crypto_internal_nistec_p521Table[15];

/* 2972 */
typedef crypto_internal_nistec_P384Point *crypto_internal_nistec_p384Table[15];

/* 2973 */
typedef crypto_internal_nistec_P256Point *crypto_internal_nistec_p256Table[15];

/* 2974 */
typedef crypto_internal_nistec_P224Point *crypto_internal_nistec_p224Table[15];

/* 2979 */
typedef hash<context_canceler_comma_struct_> *map_context_canceler_struct__0;

/* 3464 */
struct hash<context_canceler_comma_struct_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<context_canceler_comma_struct_> *buckets;
  bucket<context_canceler_comma_struct_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 4163 */
typedef runtime_iface context_canceler_0;

/* 3465 */
struct bucket<context_canceler_comma_struct_>
{
  uint8 tophash[8];
  context_canceler_0 keys[8];
  bucket<context_canceler_comma_struct_> *overflow;
};

/* 2980 */
typedef void (*funcuint64_comma_uint64)(uint64, uint64);

/* 2981 */
typedef hash<uint16_comma_archive_zip_Compressor> *map_uint16_archive_zip_Compressor;

/* 3462 */
struct hash<uint16_comma_archive_zip_Compressor>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint16_comma_archive_zip_Compressor> *buckets;
  bucket<uint16_comma_archive_zip_Compressor> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 4179 */
typedef runtime_iface io_WriteCloser_0;

/* 3146 */
typedef void (*archive_zip_Compressor)(io_Writer_0, io_WriteCloser_0 *, error_0 *);

/* 3463 */
struct bucket<uint16_comma_archive_zip_Compressor>
{
  uint8 tophash[8];
  uint16 keys[8];
  archive_zip_Compressor values[8];
  bucket<uint16_comma_archive_zip_Compressor> *overflow;
};

/* 2982 */
struct _slice__ptr_archive_zip_header
{
  archive_zip_header **array;
  int len;
  int cap;
};

/* 4175 */
struct __attribute__((aligned(4))) archive_zip_header
{
  archive_zip_FileHeader *FileHeader;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 offset;
  bool raw;
};

/* 4176 */
struct archive_zip_FileHeader
{
  string_0 Name;
  string_0 Comment;
  bool NonUTF8;
  uint16 CreatorVersion;
  uint16 ReaderVersion;
  uint16 Flags;
  uint16 Method;
  time_Time_1 Modified;
  uint16 ModifiedTime;
  uint16 ModifiedDate;
  uint32 CRC32;
  uint32 CompressedSize;
  uint32 UncompressedSize;
  uint64 CompressedSize64;
  uint64 UncompressedSize64;
  _slice_uint8_0 Extra;
  uint32 ExternalAttrs;
};

/* 2983 */
typedef void (*func_ptr_compress_flate_decompressor)(compress_flate_decompressor *);

/* 4180 */
typedef runtime_iface compress_flate_Reader;

/* 2984 */
struct _slice__slice_uint32_0
{
  _slice_uint32_0 *array;
  int len;
  int cap;
};

/* 4182 */
struct compress_flate_huffmanDecoder
{
  int min;
  uint32 chunks[512];
  _slice__slice_uint32_0 links;
  uint32 linkMask;
};

/* 4184 */
struct __attribute__((aligned(4))) compress_flate_dictDecoder
{
  _slice_uint8_0 hist;
  int wrPos;
  int rdPos;
  bool full;
};

/* 4181 */
struct compress_flate_decompressor
{
  compress_flate_Reader r;
  bufio_Reader_0 *rBuf;
  __attribute__((packed)) __attribute__((aligned(1))) int64 roffset;
  uint32 b;
  uint nb;
  compress_flate_huffmanDecoder h1;
  compress_flate_huffmanDecoder h2;
  int (*bits)[316];
  int (*codebits)[19];
  compress_flate_dictDecoder dict;
  uint8 buf[4];
  func_ptr_compress_flate_decompressor step;
  int stepState;
  bool final;
  error_0 err;
  _slice_uint8_0 toRead;
  compress_flate_huffmanDecoder *hl;
  compress_flate_huffmanDecoder *hd;
  int copyLen;
  int copyDist;
};

/* 2985 */
struct _slice_compress_flate_token
{
  unsigned int *array;
  int len;
  int cap;
};

/* 2986 */
typedef void (*func_ptr_compress_flate_compressor)(compress_flate_compressor *);

/* 4190 */
struct compress_flate_compressionLevel
{
  int level;
  int good;
  int lazy;
  int nice;
  int chain;
  int fastSkipHashing;
};

/* 2988 */
typedef void (*func_slice_uint8_comma__slice_uint32)(_slice_uint8_0, _slice_uint32_0);

/* 2987 */
typedef void (*func_ptr_compress_flate_compressor_comma__slice_uint8_int)(compress_flate_compressor *, _slice_uint8_0, int *);

/* 4191 */
struct compress_flate_compressor
{
  compress_flate_compressionLevel compressionLevel;
  compress_flate_huffmanBitWriter *w;
  func_slice_uint8_comma__slice_uint32 bulkHasher;
  func_ptr_compress_flate_compressor_comma__slice_uint8_int fill;
  func_ptr_compress_flate_compressor step;
  compress_flate_deflateFast *bestSpeed;
  int chainHead;
  uint32 hashHead[131072];
  uint32 hashPrev[32768];
  int hashOffset;
  int index;
  _slice_uint8_0 window;
  int windowEnd;
  int blockStart;
  bool byteAvailable;
  bool sync;
  _slice_compress_flate_token tokens;
  int length;
  int offset;
  int maxInsertIndex;
  error_0 err;
  uint32 hashMatch[257];
};

/* 3071 */
struct _slice_int32_0
{
  int32 *array;
  int len;
  int cap;
};

/* 4189 */
struct __attribute__((packed)) __attribute__((aligned(4))) compress_flate_huffmanBitWriter
{
  io_Writer_0 writer;
  uint64 bits;
  uint nbits;
  uint8 bytes[248];
  int32 codegenFreq[19];
  int nbytes;
  _slice_int32_0 literalFreq;
  _slice_int32_0 offsetFreq;
  _slice_uint8_0 codegen;
  compress_flate_huffmanEncoder *literalEncoding;
  compress_flate_huffmanEncoder *offsetEncoding;
  compress_flate_huffmanEncoder *codegenEncoding;
  error_0 err;
};

/* 4187 */
struct compress_flate_tableEntry
{
  uint32 val;
  int32 offset;
};

/* 4188 */
struct compress_flate_deflateFast
{
  compress_flate_tableEntry table[16384];
  _slice_uint8_0 prev;
  int32 cur;
};

/* 2990 */
struct _slice_compress_flate_hcode
{
  compress_flate_hcode *array;
  int len;
  int cap;
};

/* 2989 */
struct _slice_compress_flate_literalNode
{
  compress_flate_literalNode *array;
  int len;
  int cap;
};

/* 4193 */
struct compress_flate_byLiteral
{
  compress_flate_literalNode *array;
  int len;
  int cap;
};

/* 4192 */
struct compress_flate_byFreq
{
  compress_flate_literalNode *array;
  int len;
  int cap;
};

/* 4196 */
struct compress_flate_huffmanEncoder
{
  _slice_compress_flate_hcode codes;
  _slice_compress_flate_literalNode freqcache;
  int32 bitCount[17];
  compress_flate_byLiteral lns;
  compress_flate_byFreq lfs;
};

/* 4195 */
struct compress_flate_hcode
{
  uint16 code;
  uint16 len;
};

/* 4194 */
struct compress_flate_literalNode
{
  uint16 literal;
  int32 freq;
};

/* 4238 */
typedef runtime_iface go_shape_interface__Error_string__0;

/* 2992 */
typedef void (*func_go_shape_interface__Error_string_)(go_shape_interface__Error_string__0 *);

/* 2993 */
struct noalg_struct__F_uintptr_X0__ptr_interface__X1__ptr_bool_X2__ptr_go_shape_interface__Error_string__X3__ptr_func_go_shape_interface__Error_string__X4__ptr__3_uintptr_
{
  uintptr F;
  interface__0 *X0;
  bool *X1;
  go_shape_interface__Error_string__0 *X2;
  func_go_shape_interface__Error_string_ *X3;
  uintptr (*X4)[3];
};

/* 2995 */
typedef void (*func_go_shape_bool)(bool *);

/* 2996 */
struct noalg_struct__F_uintptr_X0__ptr_interface__X1__ptr_bool_X2__ptr_go_shape_bool_X3__ptr_func_go_shape_bool_X4__ptr__3_uintptr_
{
  uintptr F;
  interface__0 *X0;
  bool *X1;
  bool *X2;
  func_go_shape_bool *X3;
  uintptr (*X4)[3];
};

/* 3001 */
struct noalg_struct__F_uintptr_R__ptr_sync_atomic_Uint64_
{
  uintptr F;
  sync_atomic_Uint64 *R;
};

/* 3002 */
typedef hash<uint64_comma_bool> *map_uint64_bool_0;

/* 3460 */
struct hash<uint64_comma_bool>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint64_comma_bool> *buckets;
  bucket<uint64_comma_bool> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3461 */
struct __attribute__((packed)) __attribute__((aligned(4))) bucket<uint64_comma_bool>
{
  uint8 tophash[8];
  uint64 keys[8];
  bool values[8];
  bucket<uint64_comma_bool> *overflow;
};

/* 3003 */
struct _slice_internal_bisect_cond
{
  internal_bisect_cond *array;
  int len;
  int cap;
};

/* 4303 */
struct __attribute__((packed)) __attribute__((aligned(4))) internal_bisect_cond
{
  uint64 mask;
  uint64 bits;
  bool result;
};

/* 3005 */
typedef uint32 hash_crc32_Table[256];

/* 3004 */
typedef hash_crc32_Table hash_crc32_slicing8Table[8];

/* 4318 */
typedef runtime_iface reflect_Type_0;

/* 4319 */
struct reflect_visit_0
{
  void *a1;
  void *a2;
  reflect_Type_0 typ;
};

/* 3006 */
typedef reflect_visit_0 noalg__8_reflect_visit[8];

/* 3007 */
struct _slice_reflect_abiStep_0
{
  reflect_abiStep *array;
  int len;
  int cap;
};

/* 3008 */
typedef void (*bufio_SplitFunc)(_slice_uint8_0, bool, int *, _slice_uint8_0 *, error_0 *);

/* 3009 */
struct _slice__ptr_strings_trieNode_0
{
  strings_trieNode_0 **array;
  int len;
  int cap;
};

/* 4341 */
struct strings_trieNode_0
{
  string_0 value;
  int priority;
  string_0 prefix;
  strings_trieNode_0 *next;
  _slice__ptr_strings_trieNode_0 table;
};

/* 3010 */
typedef uint8 strings_byteReplacer_0[256];

/* 3012 */
typedef int32 unicode_d[3];

/* 3013 */
typedef hchan<_slice_uint8> *chan__slice_uint8_0;

/* 3402 */
struct waitq<_slice_uint8>
{
  sudog<_slice_uint8> *first;
  sudog<_slice_uint8> *last;
};

/* 3401 */
struct hchan<_slice_uint8>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<_slice_uint8> recvq;
  waitq<_slice_uint8> sendq;
  runtime_mutex_1 lock;
};

/* 3403 */
struct sudog<_slice_uint8>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  _slice_uint8_0 *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3014 */
struct _slice_sync_eface_0
{
  sync_eface *array;
  int len;
  int cap;
};

/* 3015 */
typedef void (*func_interface_)(interface__0 *);

/* 3016 */
typedef hash<interface__comma__ptr_sync_entry> *map_interface___ptr_sync_entry_0;

/* 3454 */
struct hash<interface__comma__ptr_sync_entry>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<interface__comma__ptr_sync_entry> *buckets;
  bucket<interface__comma__ptr_sync_entry> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3455 */
struct bucket<interface__comma__ptr_sync_entry>
{
  uint8 tophash[8];
  interface__0 keys[8];
  sync_entry_0 *values[8];
  bucket<interface__comma__ptr_sync_entry> *overflow;
};

/* 4382 */
struct sync_atomic_Pointer_interface__
{
  void *v;
};

/* 4383 */
struct sync_entry_0
{
  sync_atomic_Pointer_interface__ p;
};

/* 3017 */
typedef void (*go_shape_funcstring_func)(string_0, func *);

/* 3018 */
typedef void (*go_shape_funcstring_comma_string)(string_0, string_0);

/* 3019 */
typedef void (*runtime_metricReader)(uint64 *);

/* 3020 */
struct noalg_struct__F_uintptr_R_runtime_metricReader_
{
  uintptr F;
  runtime_metricReader R;
};

/* 3021 */
struct _slice__ptr_internal_abi_Type
{
  internal_abi_Type **array;
  int len;
  int cap;
};

/* 3022 */
typedef _slice__ptr_internal_abi_Type noalg__8__slice__ptr_internal_abi_Type[8];

/* 3023 */
typedef uint32 noalg__8_uint32[8];

/* 4422 */
struct runtime__typePair_0
{
  internal_abi_Type *t1;
  internal_abi_Type *t2;
};

/* 3024 */
typedef runtime__typePair_0 noalg__8_runtime__typePair[8];

/* 3025 */
typedef void (*funcuint8_comma_uint8_bool)(uint8, uint8, bool *);

/* 3026 */
struct _slice_runtime_untracedG_4
{
  runtime_untracedG_4 *array;
  int len;
  int cap;
};

/* 4440 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_untracedG_4
{
  runtime_g_0 *gp;
  uint64 goid;
  int64 mid;
  uint64 stackID;
  uint32 status;
  unsigned __int8 waitreason;
  bool inMarkAssist;
};

/* 3027 */
typedef uint8 runtime_tmpBuf[32];

/* 4447 */
struct runtime_stackpoolItem
{
  runtime_mutex_1 mu;
  runtime_mSpanList_0 span;
};

/* 3028 */
struct _runtime_item_runtime_stackpoolItem_runtime____20_uint8_
{
  runtime_stackpoolItem item;
  uint8 _[20];
};

/* 4449 */
struct runtime_semaRoot
{
  runtime_mutex_1 lock;
  runtime_sudog_0 *treap;
  internal_runtime_atomic_Uint32 nwait;
};

/* 3030 */
struct _runtime_root_runtime_semaRoot_runtime_pad__20_uint8_
{
  runtime_semaRoot root;
  uint8 pad[20];
};

/* 3029 */
typedef _runtime_root_runtime_semaRoot_runtime_pad__20_uint8_ runtime_semTable[251];

/* 3031 */
typedef bool noalg__8_bool[8];

/* 3032 */
typedef string_0 noalg__8_string[8];

/* 3033 */
typedef void (*funcstring_comma_string)(string_0, string_0);

/* 3034 */
typedef void (*go_shape_func)(void);

/* 3035 */
typedef void (*funcstring_func)(string_0, func *);

/* 3036 */
typedef internal_runtime_atomic_UnsafePointer runtime_buckhashArray[179999];

/* 3037 */
struct _runtime_base_runtime_offAddr_runtime_bound_runtime_offAddr_
{
  runtime_offAddr base;
  runtime_offAddr bound;
};

/* 3038 */
typedef void (*func_int32)(int32 *);

/* 3039 */
typedef void (*funcuintptr_uintptr_comma_int64)(uintptr, uintptr *, int64 *);

/* 3040 */
typedef void (*funcint64_int64)(int64, int64 *);

/* 3041 */
struct _runtime_fill_uint64_runtime_capacity_uint64_
{
  uint64 fill;
  uint64 capacity;
};

/* 3042 */
typedef void (*func_ptr_runtime_p)(runtime_p_0 *);

/* 3050 */
struct _slice__ptr_runtime__defer_0
{
  runtime__defer_0 **array;
  int len;
  int cap;
};

/* 3049 */
struct _runtime_gList_runtime_n_int32_
{
  runtime_gList gList;
  int32 n;
};

/* 3048 */
struct _slice__ptr_runtime_sudog_0
{
  runtime_sudog_0 **array;
  int len;
  int cap;
};

/* 3047 */
struct _runtime_len_int_runtime_buf__128__ptr_runtime_mspan_
{
  int len;
  runtime_mspan_0 *buf[128];
};

/* 4551 */
struct runtime_pTraceState_0
{
  runtime_traceSchedResourceState_1 traceSchedResourceState;
  __attribute__((packed)) __attribute__((aligned(1))) int64 mSyscallID;
  bool maySweep;
  bool inSweep;
  uintptr swept;
  uintptr reclaimed;
};

/* 4753 */
typedef runtime_pTraceState_0 runtime_pTraceState_1;

/* 4550 */
typedef runtime_persistentAlloc runtime_persistentAlloc_0;

/* 4720 */
typedef runtime_persistentAlloc_0 runtime_persistentAlloc_1;

/* 4646 */
struct internal_runtime_atomic_Uint64
{
  uint64 value;
};

/* 4549 */
struct runtime_limiterEvent_0
{
  internal_runtime_atomic_Uint64 stamp;
};

/* 4738 */
typedef runtime_limiterEvent_0 runtime_limiterEvent_1;

/* 4548 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_gcWork_0
{
  runtime_workbuf_0 *wbuf1;
  runtime_workbuf_0 *wbuf2;
  uint64 bytesMarked;
  int64 heapScanWork;
  bool flushedWork;
};

/* 4710 */
typedef runtime_gcWork_0 runtime_gcWork_1;

/* 4553 */
struct __attribute__((aligned(8))) runtime_p_0
{
  int32 id;
  uint32 status;
  unsigned int link;
  uint32 schedtick;
  uint32 syscalltick;
  __attribute__((packed)) __attribute__((aligned(1))) runtime_sysmontick sysmontick;
  unsigned int m;
  runtime_mcache_0 *mcache;
  runtime_pageCache pcache;
  uintptr raceprocctx;
  _slice__ptr_runtime__defer_0 deferpool;
  runtime__defer_0 *deferpoolbuf[32];
  uint64 goidcache;
  uint64 goidcacheend;
  uint32 runqhead;
  uint32 runqtail;
  unsigned int runq[256];
  unsigned int runnext;
  _runtime_gList_runtime_n_int32_ gFree;
  _slice__ptr_runtime_sudog_0 sudogcache;
  runtime_sudog_0 *sudogbuf[128];
  _runtime_len_int_runtime_buf__128__ptr_runtime_mspan_ mspancache;
  runtime_pinner_0 *pinnerCache;
  runtime_pTraceState_1 trace;
  runtime_persistentAlloc_1 palloc;
  int64 gcAssistTime;
  int64 gcFractionalMarkTime;
  runtime_limiterEvent_1 limiterEvent;
  int gcMarkWorkerMode;
  __attribute__((packed)) __attribute__((aligned(1))) int64 gcMarkWorkerStartTime;
  runtime_gcWork_1 gcw;
  runtime_wbBuf wbBuf;
  uint32 runSafePointFn;
  internal_runtime_atomic_Uint32 statsSeq;
  runtime_timers_1 timers;
  int64 maxStackScanDelta;
  uint64 scannedStackSize;
  uint64 scannedStacks;
  bool preempt;
  __attribute__((packed)) __attribute__((aligned(4))) int64 gcStopTime;
};

/* 4554 */
struct runtime_mcache_0
{
  uintptr nextSample;
  uintptr scanAlloc;
  uintptr tiny;
  uintptr tinyoffset;
  uintptr tinyAllocs;
  runtime_mspan_0 *alloc[136];
  runtime_stackfreelist stackcache[4];
  internal_runtime_atomic_Uint32 flushGen;
};

/* 3076 */
struct _slice_unsafe_Pointer_0
{
  void **array;
  int len;
  int cap;
};

/* 4552 */
struct runtime_pinner_0
{
  _slice_unsafe_Pointer_0 refs;
  void *refStore[13];
};

/* 4547 */
struct runtime_workbuf_0
{
  runtime_workbufhdr workbufhdr;
  uintptr obj[508];
};

/* 4533 */
typedef runtime_statAggregate runtime_statAggregate_0;

/* 3043 */
typedef void (*func_ptr_runtime_statAggregate_comma__ptr_runtime_metricValue)(runtime_statAggregate_0 *, runtime_metricValue *);

/* 3044 */
typedef uint64 runtime_statDepSet_0[1];

/* 3045 */
typedef uint8 internal_abi_IntArgRegBitmap[];

/* 4559 */
struct runtime_atomicSpanSetSpinePointer
{
  internal_runtime_atomic_UnsafePointer a;
};

/* 4558 */
struct runtime_atomicHeadTailIndex
{
  internal_runtime_atomic_Uint64 u;
};

/* 4560 */
struct runtime_spanSet
{
  runtime_mutex_1 spineLock;
  runtime_atomicSpanSetSpinePointer spine;
  internal_runtime_atomic_Uintptr spineLen;
  uintptr spineCap;
  runtime_atomicHeadTailIndex index;
};

/* 4561 */
struct runtime_mcentral
{
  unsigned __int8 spanclass;
  runtime_spanSet partial[2];
  runtime_spanSet full[2];
};

/* 3051 */
struct _runtime_mcentral_runtime_mcentral_runtime_pad__24_uint8_
{
  runtime_mcentral mcentral;
  uint8 pad[24];
};

/* 3052 */
struct _slice_runtime_atomicScavChunkData
{
  runtime_atomicScavChunkData *array;
  int len;
  int cap;
};

/* 4566 */
struct runtime_atomicScavChunkData
{
  internal_runtime_atomic_Uint64 value;
};

/* 4625 */
typedef runtime_addrRange runtime_addrRange_0;

/* 3053 */
struct _slice_runtime_addrRange
{
  runtime_addrRange_0 *array;
  int len;
  int cap;
};

/* 3054 */
typedef uint64 runtime_pageBits[8];

/* 3055 */
typedef uint64 runtime_pallocBits[8];

/* 3056 */
struct _slice_runtime_pallocSum
{
  unsigned __int64 *array;
  int len;
  int cap;
};

/* 4565 */
struct runtime_atomicOffAddr
{
  internal_runtime_atomic_Int64 a;
};

/* 4567 */
struct __attribute__((aligned(8))) runtime_scavengeIndex
{
  _slice_runtime_atomicScavChunkData chunks;
  internal_runtime_atomic_Uintptr min;
  internal_runtime_atomic_Uintptr max;
  internal_runtime_atomic_Uintptr minHeapIdx;
  runtime_atomicOffAddr searchAddrBg;
  runtime_atomicOffAddr searchAddrForce;
  runtime_offAddr freeHWM;
  uint32 gen;
  bool test;
};

/* 3057 */
struct _runtime_index_runtime_scavengeIndex_runtime_releasedBg_internal_runtime_atomic_Uintptr_runtime_releasedEager_internal_runtime_atomic_Uintptr_
{
  runtime_scavengeIndex index;
  internal_runtime_atomic_Uintptr releasedBg;
  internal_runtime_atomic_Uintptr releasedEager;
};

/* 3058 */
struct _runtime_arenaHints__ptr_runtime_arenaHint_runtime_quarantineList_runtime_mSpanList_runtime_readyList_runtime_mSpanList_
{
  runtime_arenaHint *arenaHints;
  runtime_mSpanList_0 quarantineList;
  runtime_mSpanList_0 readyList;
};

/* 4575 */
struct runtime_arenaHint
{
  uintptr addr;
  bool down;
  runtime_arenaHint *next;
};

/* 3059 */
struct _runtime_base_uintptr_runtime_end_uintptr_
{
  uintptr base;
  uintptr end;
};

/* 3060 */
struct _slice_runtime_arenaIdx
{
  unsigned int *array;
  int len;
  int cap;
};

/* 3061 */
struct _slice__ptr_runtime_mspan_0
{
  runtime_mspan_0 **array;
  int len;
  int cap;
};

/* 3062 */
typedef void (*funcunsafe_Pointer_comma_unsafe_Pointer)(void *, void *);

/* 3063 */
struct _slice__ptr_runtime_moduledata_0
{
  runtime_moduledata_0 **array;
  int len;
  int cap;
};

/* 3073 */
struct _slice_runtime_functab_0
{
  runtime_functab *array;
  int len;
  int cap;
};

/* 3072 */
struct _slice_runtime_textsect_0
{
  runtime_textsect *array;
  int len;
  int cap;
};

/* 3070 */
struct _slice__ptr_internal_abi_ITab
{
  internal_abi_ITab **array;
  int len;
  int cap;
};

/* 3069 */
struct _slice_runtime_ptabEntry_0
{
  runtime_ptabEntry *array;
  int len;
  int cap;
};

/* 3067 */
struct _slice_runtime_modulehash_0
{
  runtime_modulehash_0 *array;
  int len;
  int cap;
};

/* 3068 */
struct _slice__ptr_runtime_initTask_0
{
  runtime_initTask **array;
  int len;
  int cap;
};

/* 3066 */
typedef hash<internal_abi_TypeOff_comma__ptr_internal_abi_Type> *map_internal_abi_TypeOff__ptr_internal_abi_Type;

/* 4592 */
struct runtime_moduledata_0
{
  runtime_pcHeader *pcHeader;
  _slice_uint8_0 funcnametab;
  _slice_uint32_0 cutab;
  _slice_uint8_0 filetab;
  _slice_uint8_0 pctab;
  _slice_uint8_0 pclntable;
  _slice_runtime_functab_0 ftab;
  uintptr findfunctab;
  uintptr minpc;
  uintptr maxpc;
  uintptr text;
  uintptr etext;
  uintptr noptrdata;
  uintptr enoptrdata;
  uintptr data;
  uintptr edata;
  uintptr bss;
  uintptr ebss;
  uintptr noptrbss;
  uintptr enoptrbss;
  uintptr covctrs;
  uintptr ecovctrs;
  uintptr end;
  uintptr gcdata;
  uintptr gcbss;
  uintptr types;
  uintptr etypes;
  uintptr rodata;
  uintptr gofunc;
  _slice_runtime_textsect_0 textsectmap;
  _slice_int32_0 typelinks;
  _slice__ptr_internal_abi_ITab itablinks;
  _slice_runtime_ptabEntry_0 ptab;
  string_0 pluginpath;
  _slice_runtime_modulehash_0 pkghashes;
  _slice__ptr_runtime_initTask_0 inittasks;
  string_0 modulename;
  _slice_runtime_modulehash_0 modulehashes;
  uint8 hasmain;
  bool bad;
  runtime_bitvector gcdatamask;
  runtime_bitvector gcbssmask;
  map_internal_abi_TypeOff__ptr_internal_abi_Type typemap;
  runtime_moduledata_0 *next;
};

/* 4591 */
struct runtime_modulehash_0
{
  string_0 modulename;
  string_0 linktimehash;
  string_0 *runtimehash;
};

/* 3446 */
struct hash<internal_abi_TypeOff_comma__ptr_internal_abi_Type>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<internal_abi_TypeOff_comma__ptr_internal_abi_Type> *buckets;
  bucket<internal_abi_TypeOff_comma__ptr_internal_abi_Type> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3447 */
struct bucket<internal_abi_TypeOff_comma__ptr_internal_abi_Type>
{
  uint8 tophash[8];
  int keys[8];
  internal_abi_Type *values[8];
  bucket<internal_abi_TypeOff_comma__ptr_internal_abi_Type> *overflow;
};

/* 3064 */
struct _slice_float64_0
{
  float64 *array;
  int len;
  int cap;
};

/* 3065 */
struct _slice_runtime_Frame_0
{
  runtime_Frame_0 *array;
  int len;
  int cap;
};

/* 4594 */
struct runtime_funcInfo_0
{
  runtime__func_0 *_func;
  runtime_moduledata_0 *datap;
};

/* 4712 */
typedef runtime_funcInfo_0 runtime_funcInfo_1;

/* 4589 */
struct runtime_Frame_0
{
  uintptr PC;
  runtime_Func_0 *Func;
  string_0 Function;
  string_0 File;
  int Line;
  int startLine;
  uintptr Entry;
  runtime_funcInfo_1 funcInfo;
};

/* 4588 */
struct runtime_Func_0
{
};

/* 4593 */
struct runtime__func_0
{
  uint32 entryOff;
  int32 nameOff;
  int32 args;
  uint32 deferreturn;
  uint32 pcsp;
  uint32 pcfile;
  uint32 pcln;
  uint32 npcdata;
  uint32 cuOffset;
  int32 startLine;
  unsigned __int8 funcID;
  unsigned __int8 flag;
  uint8 _[1];
  uint8 nfuncdata;
};

/* 3075 */
struct _slice_uint64_0
{
  uint64 *array;
  int len;
  int cap;
};

/* 3085 */
struct _slice_internal_abi_StructField
{
  internal_abi_StructField *array;
  int len;
  int cap;
};

/* 4656 */
struct internal_abi_StructField
{
  internal_abi_Name Name;
  internal_abi_Type *Typ;
  uintptr Offset;
};

/* 3086 */
typedef void (*funcunsafe_Pointer_comma_uintptr_uintptr)(void *, uintptr, uintptr *);

/* 3090 */
struct _slice__slice_int32_0
{
  _slice_int32_0 *array;
  int len;
  int cap;
};

/* 3093 */
typedef void (*func_uint64)(uint64 *);

/* 3094 */
typedef hash<runtime__typePair_comma_struct_> *map_runtime__typePair_struct__0;

/* 3452 */
struct hash<runtime__typePair_comma_struct_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<runtime__typePair_comma_struct_> *buckets;
  bucket<runtime__typePair_comma_struct_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3453 */
struct bucket<runtime__typePair_comma_struct_>
{
  uint8 tophash[8];
  runtime__typePair_0 keys[8];
  bucket<runtime__typePair_comma_struct_> *overflow;
};

/* 3095 */
struct _slice_runtime_traceFrame
{
  runtime_traceFrame *array;
  int len;
  int cap;
};

/* 3096 */
struct _slice_runtime_traceArg
{
  unsigned __int64 *array;
  int len;
  int cap;
};

/* 3097 */
typedef void (*func_bool_comma_bool)(bool *, bool *);

/* 3098 */
struct _slice_runtime_stackObjectRecord
{
  runtime_stackObjectRecord *array;
  int len;
  int cap;
};

/* 4518 */
struct runtime_stackObjectRecord
{
  int32 off;
  int32 size;
  int32 _ptrdata;
  uint32 gcdataoff;
};

/* 3100 */
struct _slice_runtime_scase
{
  runtime_scase *array;
  int len;
  int cap;
};

/* 4450 */
struct runtime_scase
{
  runtime_hchan_0 *c;
  void *elem;
};

/* 3101 */
typedef hash<string_comma_bool> *map_string_bool_0;

/* 3102 */
struct _slice__ptr_runtime_p
{
  runtime_p_0 **array;
  int len;
  int cap;
};

/* 3103 */
typedef void (*func_ptr_runtime_g)(runtime_g_0 *);

/* 3104 */
typedef void (*funcuintptr_uint8)(uintptr, uint8 *);

/* 3105 */
typedef hchan<int> *chan_int_0;

/* 3399 */
struct waitq<int>
{
  sudog<int> *first;
  sudog<int> *last;
};

/* 3398 */
struct hchan<int>
{
  uint qcount;
  uint dataqsiz;
  void *buf;
  uint16 elemsize;
  uint32 closed;
  runtime_timer_0 *timer;
  internal_abi_Type *elemtype;
  uint sendx;
  uint recvx;
  waitq<int> recvq;
  waitq<int> sendq;
  runtime_mutex_1 lock;
};

/* 3400 */
struct sudog<int>
{
  runtime_g_0 *g;
  runtime_sudog_0 *next;
  runtime_sudog_0 *prev;
  int *elem;
  int64 acquiretime;
  int64 releasetime;
  uint32 ticket;
  bool isSelect;
  bool success;
  uint16 waiters;
  runtime_sudog_0 *parent;
  runtime_sudog_0 *waitlink;
  runtime_sudog_0 *waittail;
  runtime_hchan_0 *c;
};

/* 3106 */
typedef void (*func_bool)(bool *);

/* 3108 */
typedef void (*func_ptr_internal_abi_ITab)(internal_abi_ITab *);

/* 3109 */
struct runtime_plainError_0
{
  uint8 *str;
  int len;
};

/* 3110 */
struct runtime_errorString_0
{
  uint8 *str;
  int len;
};

/* 3112 */
struct _slice_runtime_statDep
{
  unsigned int *array;
  int len;
  int cap;
};

/* 3114 */
struct _slice_internal_runtime_syscall_EpollEvent
{
  internal_runtime_syscall_EpollEvent *array;
  int len;
  int cap;
};

/* 4639 */
struct internal_runtime_syscall_EpollEvent
{
  uint32 Events;
  uint32 _pad;
  uint8 Data[8];
};

/* 4362 */
typedef runtime_iface io_WriterTo_0;

/* 4746 */
typedef io_WriterTo_0 io_WriterTo_1;

/* 3115 */
struct _io_Reader_io_WriterTo_
{
  io_Reader_0 Reader;
  io_WriterTo_1 WriterTo;
};

/* 3117 */
typedef void (*net_http_HandlerFunc)(net_http_ResponseWriter, net_http_Request *);

/* 3119 */
struct net_http_relationship
{
  uint8 *str;
  int len;
};

/* 3120 */
struct _slice_net_http_keyValues
{
  net_http_keyValues *array;
  int len;
  int cap;
};

/* 3663 */
struct net_http_keyValues
{
  string_0 key;
  _slice_string_0 values;
};

/* 3671 */
typedef runtime_iface net_http_http2writeContext;

/* 3121 */
typedef void (*funcnet_http_http2writeContext_comma__slice_uint8_comma_bool_comma_bool_error)(net_http_http2writeContext, _slice_uint8_0, bool, bool, error_0 *);

/* 3122 */
typedef void (*func_ptr_net_http_http2serverConn)(net_http_http2serverConn *);

/* 3124 */
struct _slice_net_http_http2Setting
{
  net_http_http2Setting *array;
  int len;
  int cap;
};

/* 3708 */
struct net_http_http2Setting
{
  unsigned __int16 ID;
  uint32 Val;
};

/* 3125 */
typedef void (*funcnet_http_http2Setting_error)(net_http_http2Setting, error_0 *);

/* 3126 */
struct net_http_http2headerFieldValueError
{
  uint8 *str;
  int len;
};

/* 3127 */
struct net_http_http2headerFieldNameError
{
  uint8 *str;
  int len;
};

/* 3128 */
struct net_http_http2duplicatePseudoHeaderError
{
  uint8 *str;
  int len;
};

/* 3129 */
struct net_http_http2pseudoHeaderError
{
  uint8 *str;
  int len;
};

/* 3130 */
struct _slice_net_http_httpRange
{
  net_http_httpRange *array;
  int len;
  int cap;
};

/* 3717 */
struct net_http_httpRange
{
  int64 start;
  int64 length;
};

/* 3132 */
typedef void (*func_int64_comma_error)(int64 *, error_0 *);

/* 3133 */
struct net_http_Dir
{
  uint8 *str;
  int len;
};

/* 4237 */
typedef runtime_iface io_fs_FileInfo;

/* 3134 */
typedef void (*funcstring_io_fs_FileInfo_comma_error)(string_0, io_fs_FileInfo *, error_0 *);

/* 3660 */
struct go_shape_struct__net_http_key_string_net_http_values__slice_string__0
{
  string_0 key;
  _slice_string_0 values;
};

/* 3135 */
typedef void (*funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int)(go_shape_struct__net_http_key_string_net_http_values__slice_string__0, go_shape_struct__net_http_key_string_net_http_values__slice_string__0, int *);

/* 3136 */
struct _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_
{
  go_shape_struct__net_http_key_string_net_http_values__slice_string__0 *array;
  int len;
  int cap;
};

/* 3615 */
typedef void (*funcgo_shape_string_bool)(go_shape_string_0, bool *);

/* 3137 */
typedef void (*iter_Seq_go_shape_string_)(funcgo_shape_string_bool);

/* 3139 */
struct _slice_go_shape_string
{
  go_shape_string_0 *array;
  int len;
  int cap;
};

/* 3140 */
typedef hchan<os_exec_ctxResult> *chan_chan_left__os_exec_ctxResult;

/* 3142 */
struct _slice_internal_abi_Method
{
  internal_abi_Method *array;
  int len;
  int cap;
};

/* 4652 */
struct internal_abi_Method
{
  int Name;
  int Mtyp;
  int Ifn;
  int Tfn;
};

/* 3143 */
struct _slice_unicode_CaseRange
{
  unicode_CaseRange *array;
  int len;
  int cap;
};

/* 4351 */
struct unicode_CaseRange
{
  uint32 Lo;
  uint32 Hi;
  unicode_d Delta;
};

/* 3144 */
struct _slice_unicode_Range32_0
{
  unicode_Range32 *array;
  int len;
  int cap;
};

/* 3145 */
struct _slice_unicode_Range16_0
{
  unicode_Range16 *array;
  int len;
  int cap;
};

/* 3147 */
struct net_url_InvalidHostError
{
  uint8 *str;
  int len;
};

/* 3148 */
struct net_url_EscapeError
{
  uint8 *str;
  int len;
};

/* 3150 */
struct internal_poll_String
{
  uint8 *str;
  int len;
};

/* 3152 */
typedef hchan<internal_singleflight_Result> *_chan_left_chan_internal_singleflight_Result;

/* 3153 */
typedef void (*funcnet_KeepAliveConfig)(net_KeepAliveConfig);

/* 3154 */
typedef void (*func_ptr_net_netFD)(net_netFD_0 *);

/* 3155 */
typedef void (*funcuintptr_bool)(uintptr, bool *);

/* 3156 */
typedef void (*funcstring_error)(string_0, error_0 *);

/* 3157 */
struct net_UnknownNetworkError_0
{
  uint8 *str;
  int len;
};

/* 3158 */
typedef void (*funcnet_IPAddr_net_Addr)(net_IPAddr_0, net_Addr_0 *);

/* 3159 */
typedef void (*funcnet_IPAddr_bool)(net_IPAddr_0, bool *);

/* 3160 */
typedef void (*funcnet_Addr_bool)(net_Addr_0, bool *);

/* 3161 */
struct _slice_syscall_NetlinkRouteAttr
{
  syscall_NetlinkRouteAttr_0 *array;
  int len;
  int cap;
};

/* 4275 */
struct syscall_NetlinkRouteAttr_0
{
  syscall_RtAttr Attr;
  _slice_uint8_0 Value;
};

/* 3162 */
struct _slice_net_Interface
{
  net_Interface_0 *array;
  int len;
  int cap;
};

/* 3957 */
struct net_HardwareAddr_0
{
  uint8 *array;
  int len;
  int cap;
};

/* 4707 */
typedef net_HardwareAddr_0 net_HardwareAddr_1;

/* 3958 */
struct net_Interface_0
{
  int Index;
  int MTU;
  string_0 Name;
  net_HardwareAddr_1 HardwareAddr;
  unsigned int Flags;
};

/* 3163 */
struct _slice_net_netip_Addr
{
  net_netip_Addr *array;
  int len;
  int cap;
};

/* 4038 */
struct net_netip_uint128
{
  uint64 hi;
  uint64 lo;
};

/* 4037 */
struct unique_Handle_net_netip_addrDetail__0
{
  net_netip_addrDetail *value;
};

/* 4708 */
typedef unique_Handle_net_netip_addrDetail__0 unique_Handle_net_netip_addrDetail__1;

/* 4039 */
struct __attribute__((packed)) __attribute__((aligned(4))) net_netip_Addr
{
  net_netip_uint128 addr;
  unique_Handle_net_netip_addrDetail__1 z;
};

/* 4036 */
struct net_netip_addrDetail
{
  bool isV6;
  string_0 zoneV6;
};

/* 3164 */
typedef void (*funccontext_Context_comma_string_comma_string__slice_net_IPAddr_comma_error)(context_Context_0, string_0, string_0, _slice_net_IPAddr_0 *, error_0 *);

/* 3165 */
typedef void (*func_interface__comma_error)(interface__0 *, error_0 *);

/* 3166 */
typedef internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent_NewHashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__::_param1;

/* 3167 */
typedef internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ unique_addUniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___func1_1::_param6;

/* 4023 */
struct internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__
{
  void *u;
};

/* 3168 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 unique_addUniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___func1_1::_param5;

/* 4033 */
struct go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0
{
  bool isV6;
  string_0 zoneV6;
};

/* 3169 */
typedef unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___0 *unique_addUniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param3;

/* 3170 */
typedef internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ internal_weak_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param2;

/* 3171 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 *internal_weak_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param1;

/* 3172 */
typedef internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___func1::_param11;

/* 3173 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___func1::_param6;

/* 3174 */
typedef unique_Handle_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param7;

/* 4034 */
struct unique_Handle_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__
{
  go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 *value;
};

/* 3175 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param6;

/* 3176 */
typedef go_shape_struct__internal_weak_u_unsafe_Pointer_ internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___lookup::_param4;

/* 3177 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___lookup::_param3;

/* 3178 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___lookup::_param2;

/* 4027 */
struct sync_atomic_Pointer_internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___
{
  void *v;
};

/* 4028 */
struct internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__
{
  internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ node;
  sync_atomic_Pointer_internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___ overflow;
  go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 key;
  go_shape_struct__internal_weak_u_unsafe_Pointer_ value;
};

/* 3179 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___compareAndDelete::_param10;

/* 3180 */
typedef go_shape_struct__internal_weak_u_unsafe_Pointer_ internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___compareAndDelete::_param9;

/* 3181 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___compareAndDelete::_param8;

/* 3182 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___compareAndDelete::_param7;

/* 3183 */
typedef internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___empty::_param1;

/* 3184 */
typedef go_shape_struct__internal_weak_u_unsafe_Pointer_ internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___Load::_param22;

/* 3185 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___Load::_param21;

/* 3186 */
typedef internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___Load::_param20;

/* 3187 */
typedef go_shape_struct__internal_weak_u_unsafe_Pointer_ internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param28;

/* 3188 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param27;

/* 3189 */
typedef internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param26;

/* 3190 */
typedef internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___expand::_param38;

/* 3191 */
typedef internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___expand::_param37;

/* 3192 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___expand::_param36;

/* 3193 */
typedef internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___expand::_param35;

/* 3194 */
typedef go_shape_struct__internal_weak_u_unsafe_Pointer_ internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___CompareAndDelete::_param43;

/* 3195 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___CompareAndDelete::_param42;

/* 3196 */
typedef internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___CompareAndDelete::_param41;

/* 3213 */
typedef void (*funcgo_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__bool)(go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0, go_shape_struct__internal_weak_u_unsafe_Pointer_, bool *);

/* 3197 */
typedef funcgo_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__bool internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___iter::_param55;

/* 3198 */
typedef internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___iter::_param54;

/* 3199 */
typedef internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___iter::_param53;

/* 4378 */
typedef runtime_eface go_shape_interface__0;

/* 3200 */
typedef go_shape_interface__0 internal_concurrent__ptr_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___lookup::_param4;

/* 3214 */
typedef internal_abi_Type *go_shape__ptr_internal_abi_Type_0;

/* 3201 */
typedef go_shape__ptr_internal_abi_Type_0 internal_concurrent__ptr_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___lookup::_param3;

/* 3202 */
typedef internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___lookup::_param2;

/* 4050 */
struct internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  bool isEntry;
};

/* 4047 */
struct sync_atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___
{
  void *v;
};

/* 4048 */
struct internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ node;
  sync_atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___ overflow;
  go_shape__ptr_internal_abi_Type_0 key;
  go_shape_interface__0 value;
};

/* 3203 */
typedef go_shape_interface__0 internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___Load::_param22;

/* 3204 */
typedef go_shape__ptr_internal_abi_Type_0 internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___Load::_param21;

/* 3205 */
typedef internal_concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___Load::_param20;

/* 4052 */
struct internal_concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  internal_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *root;
  internal_concurrent_hashFunc keyHash;
  internal_concurrent_equalFunc keyEqual;
  internal_concurrent_equalFunc valEqual;
  uintptr seed;
};

/* 4051 */
struct internal_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__
{
  internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ node;
  sync_atomic_Bool dead;
  sync_Mutex mu;
  internal_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *parent;
  sync_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ children[16];
};

/* 3206 */
typedef go_shape_interface__0 internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param28;

/* 3207 */
typedef go_shape__ptr_internal_abi_Type_0 internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param27;

/* 3208 */
typedef internal_concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param26;

/* 3209 */
typedef internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___expand::_param38;

/* 3210 */
typedef internal_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___expand::_param37;

/* 3211 */
typedef internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___expand::_param36;

/* 3212 */
typedef internal_concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___expand::_param35;

/* 3215 */
typedef internal_concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent_NewHashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__::_param1;

/* 3217 */
typedef void (*funcinterface__comma_interface__bool_comma_error)(interface__0, interface__0, bool *, error_0 *);

/* 4253 */
typedef runtime_iface io_fs_DirEntry;

/* 3218 */
struct _slice_io_fs_DirEntry
{
  io_fs_DirEntry *array;
  int len;
  int cap;
};

/* 3219 */
typedef void (*funcint_comma__slice_uint8_error)(int, _slice_uint8_0, error_0 *);

/* 3220 */
struct _slice_crypto_x509_potentialParent
{
  crypto_x509_potentialParent *array;
  int len;
  int cap;
};

/* 3921 */
struct crypto_x509_potentialParent
{
  crypto_x509_Certificate *cert;
  func_slice__ptr_crypto_x509_Certificate_error constraint;
};

/* 3222 */
typedef void (*func_hash_Hash)(hash_Hash_0 *);

/* 3223 */
typedef void (*func_slice_uint8_error)(_slice_uint8_0, error_0 *);

/* 3224 */
struct _slice__ptr_crypto_internal_edwards25519_Point
{
  crypto_internal_edwards25519_Point **array;
  int len;
  int cap;
};

/* 4130 */
struct crypto_internal_edwards25519_field_Element
{
  uint64 l0;
  uint64 l1;
  uint64 l2;
  uint64 l3;
  uint64 l4;
};

/* 4078 */
struct crypto_internal_edwards25519_Point
{
  crypto_internal_edwards25519_field_Element x;
  crypto_internal_edwards25519_field_Element y;
  crypto_internal_edwards25519_field_Element z;
  crypto_internal_edwards25519_field_Element t;
};

/* 3225 */
typedef crypto_ecdsa_nistCurve_go_shape__ptr_uint8_ *crypto_ecdsa_hashToNat_go_shape__ptr_uint8_::_param0;

/* 4114 */
typedef runtime_iface crypto_elliptic_Curve;

/* 4080 */
struct crypto_ecdsa_nistCurve_go_shape__ptr_uint8_
{
  func_go_shape__ptr_uint8 newPoint;
  crypto_elliptic_Curve curve;
  crypto_internal_bigmod_Modulus *N;
  _slice_uint8_0 nMinus2;
};

/* 4104 */
struct crypto_internal_bigmod_Modulus
{
  crypto_internal_bigmod_Nat *nat;
  int leading;
  uint m0inv;
  crypto_internal_bigmod_Nat *rr;
};

/* 3256 */
struct _slice_uint_0
{
  uint *array;
  int len;
  int cap;
};

/* 4105 */
struct crypto_internal_bigmod_Nat
{
  _slice_uint_0 limbs;
};

/* 3226 */
typedef crypto_ecdsa_nistCurve_go_shape__ptr_uint8_ *crypto_ecdsa_inverse_go_shape__ptr_uint8_::_param0;

/* 3227 */
typedef crypto_ecdsa_nistCurve_go_shape__ptr_uint8_ *crypto_ecdsa_verifyNISTEC_go_shape__ptr_uint8_::_param7;

/* 3228 */
typedef crypto_ecdsa_nistCurve_go_shape__ptr_uint8_ *crypto_ecdsa_precomputeParams_go_shape__ptr_uint8_::_param0;

/* 3229 */
typedef go_shape__ptr_uint8 crypto_ecdsa__ptr_nistCurve_go_shape__ptr_uint8__pointFromAffine::_param3;

/* 3230 */
typedef crypto_ecdsa_nistCurve_go_shape__ptr_uint8_ *crypto_ecdsa__ptr_nistCurve_go_shape__ptr_uint8__pointFromAffine::_param2;

/* 3231 */
typedef void (*vendor_golang_org_x_crypto_cryptobyte_BuilderContinuation)(vendor_golang_org_x_crypto_cryptobyte_Builder *);

/* 4082 */
struct vendor_golang_org_x_crypto_cryptobyte_Builder
{
  error_0 err;
  _slice_uint8_0 result;
  bool fixedSize;
  vendor_golang_org_x_crypto_cryptobyte_Builder *child;
  int offset;
  int pendingLenLen;
  bool pendingIsASN1;
  bool *inContinuation;
};

/* 4348 */
struct go_shape__slice_uint8
{
  uint8 *array;
  int len;
  int cap;
};

/* 3253 */
typedef void (*funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int)(go_shape__slice_uint8, go_shape__slice_uint8, int *);

/* 3232 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_insertionSortCmpFunc_go_shape__slice_uint8_::_param1;

/* 3233 */
typedef _slice_go_shape__slice_uint8 slices_insertionSortCmpFunc_go_shape__slice_uint8_::_param0;

/* 3254 */
struct _slice_go_shape__slice_uint8
{
  go_shape__slice_uint8 *array;
  int len;
  int cap;
};

/* 3234 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_siftDownCmpFunc_go_shape__slice_uint8_::_param1;

/* 3235 */
typedef _slice_go_shape__slice_uint8 slices_siftDownCmpFunc_go_shape__slice_uint8_::_param0;

/* 3236 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_heapSortCmpFunc_go_shape__slice_uint8_::_param2;

/* 3237 */
typedef _slice_go_shape__slice_uint8 slices_heapSortCmpFunc_go_shape__slice_uint8_::_param1;

/* 3238 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_breakPatternsCmpFunc_go_shape__slice_uint8_::_param1;

/* 3239 */
typedef _slice_go_shape__slice_uint8 slices_breakPatternsCmpFunc_go_shape__slice_uint8_::_param0;

/* 3240 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_medianCmpFunc_go_shape__slice_uint8_::_param2;

/* 3241 */
typedef _slice_go_shape__slice_uint8 slices_medianCmpFunc_go_shape__slice_uint8_::_param1;

/* 3242 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_choosePivotCmpFunc_go_shape__slice_uint8_::_param3;

/* 3243 */
typedef _slice_go_shape__slice_uint8 slices_choosePivotCmpFunc_go_shape__slice_uint8_::_param2;

/* 3244 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_partialInsertionSortCmpFunc_go_shape__slice_uint8_::_param1;

/* 3245 */
typedef _slice_go_shape__slice_uint8 slices_partialInsertionSortCmpFunc_go_shape__slice_uint8_::_param0;

/* 3246 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_partitionEqualCmpFunc_go_shape__slice_uint8_::_param1;

/* 3247 */
typedef _slice_go_shape__slice_uint8 slices_partitionEqualCmpFunc_go_shape__slice_uint8_::_param0;

/* 3248 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_partitionCmpFunc_go_shape__slice_uint8_::_param1;

/* 3249 */
typedef _slice_go_shape__slice_uint8 slices_partitionCmpFunc_go_shape__slice_uint8_::_param0;

/* 3250 */
typedef funcgo_shape__slice_uint8_comma_go_shape__slice_uint8_int slices_pdqsortCmpFunc_go_shape__slice_uint8_::_param10;

/* 3251 */
typedef _slice_go_shape__slice_uint8 slices_pdqsortCmpFunc_go_shape__slice_uint8_::_param9;

/* 3252 */
struct encoding_asn1_stringEncoder
{
  uint8 *str;
  int len;
};

/* 3255 */
struct reflect_StructTag_0
{
  uint8 *str;
  int len;
};

/* 3257 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P224Point__Params::_param13;

/* 4107 */
struct crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_
{
  func__ptr_crypto_internal_nistec_P224Point newPoint;
  crypto_elliptic_CurveParams *params;
};

/* 4112 */
struct crypto_elliptic_CurveParams
{
  math_big_Int *P;
  math_big_Int *N;
  math_big_Int *B;
  math_big_Int *Gx;
  math_big_Int *Gy;
  int BitSize;
  string_0 Name;
};

/* 3258 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P224Point__IsOnCurve::_param14;

/* 3259 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P224Point__Add::_param19;

/* 3260 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P224Point__ScalarMult::_param24;

/* 3261 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P224Point__ScalarBaseMult::_param26;

/* 3262 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P224Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P224Point__Unmarshal::_param30;

/* 3263 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__Params::_param13;

/* 4109 */
struct crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_
{
  func__ptr_crypto_internal_nistec_P384Point newPoint;
  crypto_elliptic_CurveParams *params;
};

/* 3264 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__IsOnCurve::_param14;

/* 3265 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__Add::_param19;

/* 3266 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__ScalarMult::_param24;

/* 3267 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__ScalarBaseMult::_param26;

/* 3268 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__Unmarshal::_param30;

/* 3269 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__Params::_param13;

/* 4110 */
struct crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_
{
  func__ptr_crypto_internal_nistec_P521Point newPoint;
  crypto_elliptic_CurveParams *params;
};

/* 3270 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__IsOnCurve::_param14;

/* 3271 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__Add::_param19;

/* 3272 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__ScalarMult::_param24;

/* 3273 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__ScalarBaseMult::_param26;

/* 3274 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__Unmarshal::_param30;

/* 3275 */
typedef crypto_elliptic_nistCurve_go_shape__ptr_uint8_ *crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__IsOnCurve::_param14;

/* 4111 */
struct crypto_elliptic_nistCurve_go_shape__ptr_uint8_
{
  func_go_shape__ptr_uint8 newPoint;
  crypto_elliptic_CurveParams *params;
};

/* 3276 */
typedef go_shape__ptr_uint8 crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__pointFromAffine::_param16;

/* 3277 */
typedef crypto_elliptic_nistCurve_go_shape__ptr_uint8_ *crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__pointFromAffine::_param15;

/* 3278 */
typedef go_shape__ptr_uint8 crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__pointToAffine::_param18;

/* 3279 */
typedef crypto_elliptic_nistCurve_go_shape__ptr_uint8_ *crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__pointToAffine::_param17;

/* 3280 */
typedef crypto_elliptic_nistCurve_go_shape__ptr_uint8_ *crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__Add::_param19;

/* 3281 */
typedef crypto_elliptic_nistCurve_go_shape__ptr_uint8_ *crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__normalizeScalar::_param23;

/* 3282 */
typedef crypto_elliptic_nistCurve_go_shape__ptr_uint8_ *crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__ScalarMult::_param24;

/* 3283 */
typedef crypto_elliptic_nistCurve_go_shape__ptr_uint8_ *crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__ScalarBaseMult::_param26;

/* 3284 */
typedef crypto_elliptic_nistCurve_go_shape__ptr_uint8_ *crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__Unmarshal::_param30;

/* 3285 */
struct _slice__ptr_math_big_nat
{
  math_big_nat **array;
  int len;
  int cap;
};

/* 3286 */
struct _slice_math_big_Word
{
  unsigned int *array;
  int len;
  int cap;
};

/* 3287 */
struct _slice_math_big_divisor
{
  math_big_divisor *array;
  int len;
  int cap;
};

/* 4115 */
struct math_big_divisor
{
  math_big_nat bbb;
  int nbits;
  int ndigits;
};

/* 3288 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__String::_param6;

/* 4120 */
struct crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_
{
  string_0 name;
  func__ptr_crypto_internal_nistec_P256Point newPoint;
  _slice_uint8_0 scalarOrder;
};

/* 3289 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__GenerateKey::_param7;

/* 3290 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__privateKeyToPublicKey::_param9;

/* 3291 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__NewPublicKey::_param11;

/* 3292 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__ecdh::_param12;

/* 3293 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__String::_param6;

/* 4121 */
struct crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_
{
  string_0 name;
  func__ptr_crypto_internal_nistec_P384Point newPoint;
  _slice_uint8_0 scalarOrder;
};

/* 3294 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__GenerateKey::_param7;

/* 3295 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__privateKeyToPublicKey::_param9;

/* 3296 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__NewPublicKey::_param11;

/* 3297 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P384Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P384Point__ecdh::_param12;

/* 3298 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__String::_param6;

/* 4122 */
struct crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_
{
  string_0 name;
  func__ptr_crypto_internal_nistec_P521Point newPoint;
  _slice_uint8_0 scalarOrder;
};

/* 3299 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__GenerateKey::_param7;

/* 3300 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__privateKeyToPublicKey::_param9;

/* 3301 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__NewPublicKey::_param11;

/* 3302 */
typedef crypto_ecdh_nistCurve__ptr_crypto_internal_nistec_P521Point_ *crypto_ecdh__ptr_nistCurve__ptr_crypto_internal_nistec_P521Point__ecdh::_param12;

/* 3303 */
typedef crypto_ecdh_nistCurve_go_shape__ptr_uint8_ *crypto_ecdh__ptr_nistCurve_go_shape__ptr_uint8__GenerateKey::_param7;

/* 4123 */
struct crypto_ecdh_nistCurve_go_shape__ptr_uint8_
{
  string_0 name;
  func_go_shape__ptr_uint8 newPoint;
  _slice_uint8_0 scalarOrder;
};

/* 3304 */
typedef crypto_ecdh_nistCurve_go_shape__ptr_uint8_ *crypto_ecdh__ptr_nistCurve_go_shape__ptr_uint8__NewPrivateKey::_param8;

/* 3305 */
typedef crypto_ecdh_nistCurve_go_shape__ptr_uint8_ *crypto_ecdh__ptr_nistCurve_go_shape__ptr_uint8__privateKeyToPublicKey::_param9;

/* 3306 */
typedef crypto_ecdh_nistCurve_go_shape__ptr_uint8_ *crypto_ecdh__ptr_nistCurve_go_shape__ptr_uint8__NewPublicKey::_param11;

/* 3307 */
typedef crypto_ecdh_nistCurve_go_shape__ptr_uint8_ *crypto_ecdh__ptr_nistCurve_go_shape__ptr_uint8__ecdh::_param12;

/* 3308 */
struct _slice_go_shape_uint8
{
  unsigned __int8 *array;
  int len;
  int cap;
};

/* 3309 */
struct _slice_go_shape_uintptr
{
  unsigned int *array;
  int len;
  int cap;
};

/* 3310 */
typedef void (*func_ptr_net_url_URL__ptr_net_url_URL_comma_error)(net_url_URL *, net_url_URL **, error_0 *);

/* 3311 */
struct compress_flate_InternalError
{
  uint8 *str;
  int len;
};

/* 3312 */
typedef void (*funcint_comma_int_bool)(int, int, bool *);

/* 3313 */
typedef void (*funcint_bool)(int, bool *);

/* 3314 */
typedef _slice_go_shape_int slices_insertionSortOrdered_go_shape_int_::_param1;

/* 3315 */
struct _slice_go_shape_int
{
  int *array;
  int len;
  int cap;
};

/* 3316 */
typedef _slice_go_shape_int slices_siftDownOrdered_go_shape_int_::_param1;

/* 3317 */
typedef _slice_go_shape_int slices_heapSortOrdered_go_shape_int_::_param1;

/* 3318 */
typedef _slice_go_shape_int slices_breakPatternsOrdered_go_shape_int_::_param0;

/* 3319 */
typedef _slice_go_shape_int slices_medianOrdered_go_shape_int_::_param1;

/* 3320 */
typedef _slice_go_shape_int slices_choosePivotOrdered_go_shape_int_::_param2;

/* 3321 */
typedef _slice_go_shape_int slices_partialInsertionSortOrdered_go_shape_int_::_param1;

/* 3322 */
typedef _slice_go_shape_int slices_partitionEqualOrdered_go_shape_int_::_param1;

/* 3323 */
typedef _slice_go_shape_int slices_partitionOrdered_go_shape_int_::_param1;

/* 3324 */
typedef _slice_go_shape_int slices_pdqsortOrdered_go_shape_int_::_param10;

/* 3325 */
struct _slice_error_0
{
  error_0 *array;
  int len;
  int cap;
};

/* 4321 */
struct reflect_Value_0
{
  internal_abi_Type *typ_;
  void *ptr;
  unsigned int flag;
};

/* 4208 */
struct go_shape_struct__Key_reflect_Value_Value_reflect_Value__0
{
  reflect_Value_0 Key;
  reflect_Value_0 Value;
};

/* 3334 */
typedef void (*funcgo_shape_struct__Key_reflect_Value_Value_reflect_Value__comma_go_shape_struct__Key_reflect_Value_Value_reflect_Value__int)(go_shape_struct__Key_reflect_Value_Value_reflect_Value__0, go_shape_struct__Key_reflect_Value_Value_reflect_Value__0, int *);

/* 3326 */
typedef funcgo_shape_struct__Key_reflect_Value_Value_reflect_Value__comma_go_shape_struct__Key_reflect_Value_Value_reflect_Value__int slices_insertionSortCmpFunc_go_shape_struct__Key_reflect_Value_Value_reflect_Value__::_param1;

/* 3327 */
typedef _slice_go_shape_struct__Key_reflect_Value_Value_reflect_Value_ slices_insertionSortCmpFunc_go_shape_struct__Key_reflect_Value_Value_reflect_Value__::_param0;

/* 3335 */
struct _slice_go_shape_struct__Key_reflect_Value_Value_reflect_Value_
{
  go_shape_struct__Key_reflect_Value_Value_reflect_Value__0 *array;
  int len;
  int cap;
};

/* 3328 */
typedef funcgo_shape_struct__Key_reflect_Value_Value_reflect_Value__comma_go_shape_struct__Key_reflect_Value_Value_reflect_Value__int slices_rotateCmpFunc_go_shape_struct__Key_reflect_Value_Value_reflect_Value__::_param2;

/* 3329 */
typedef _slice_go_shape_struct__Key_reflect_Value_Value_reflect_Value_ slices_rotateCmpFunc_go_shape_struct__Key_reflect_Value_Value_reflect_Value__::_param1;

/* 3330 */
typedef funcgo_shape_struct__Key_reflect_Value_Value_reflect_Value__comma_go_shape_struct__Key_reflect_Value_Value_reflect_Value__int slices_symMergeCmpFunc_go_shape_struct__Key_reflect_Value_Value_reflect_Value__::_param3;

/* 3331 */
typedef _slice_go_shape_struct__Key_reflect_Value_Value_reflect_Value_ slices_symMergeCmpFunc_go_shape_struct__Key_reflect_Value_Value_reflect_Value__::_param2;

/* 3332 */
typedef funcgo_shape_struct__Key_reflect_Value_Value_reflect_Value__comma_go_shape_struct__Key_reflect_Value_Value_reflect_Value__int slices_stableCmpFunc_go_shape_struct__Key_reflect_Value_Value_reflect_Value__::_param3;

/* 3333 */
typedef _slice_go_shape_struct__Key_reflect_Value_Value_reflect_Value_ slices_stableCmpFunc_go_shape_struct__Key_reflect_Value_Value_reflect_Value__::_param2;

/* 3336 */
typedef void (*path_filepath_WalkFunc)(string_0, io_fs_FileInfo, error_0, error_0 *);

/* 3337 */
struct _slice_io_fs_FileInfo
{
  io_fs_FileInfo *array;
  int len;
  int cap;
};

/* 4742 */
typedef go_shape_interface__Error_string__0 go_shape_interface__Error_string__1;

/* 3338 */
typedef go_shape_interface__Error_string__1 os_init_OnceValue_go_shape_interface__Error_string___func3::_param2;

/* 4239 */
typedef runtime_iface go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_;

/* 3359 */
typedef void (*funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int)(go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_, go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_, int *);

/* 3339 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_insertionSortCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param1;

/* 3340 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_insertionSortCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param0;

/* 3360 */
struct _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_
{
  go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ *array;
  int len;
  int cap;
};

/* 3341 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_siftDownCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param1;

/* 3342 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_siftDownCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param0;

/* 3343 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_heapSortCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param2;

/* 3344 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_heapSortCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param1;

/* 3345 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_breakPatternsCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param1;

/* 3346 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_breakPatternsCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param0;

/* 3347 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_medianCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param2;

/* 3348 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_medianCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param1;

/* 3349 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_choosePivotCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param3;

/* 3350 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_choosePivotCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param2;

/* 3351 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_partialInsertionSortCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param1;

/* 3352 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_partialInsertionSortCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param0;

/* 3353 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_partitionEqualCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param1;

/* 3354 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_partitionEqualCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param0;

/* 3355 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_partitionCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param1;

/* 3356 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_partitionCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param0;

/* 3357 */
typedef funcgo_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__comma_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__int slices_pdqsortCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param10;

/* 3358 */
typedef _slice_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode_ slices_pdqsortCmpFunc_go_shape_interface__Info_io_fs_FileInfo_comma_error_IsDir_bool_Name_string_Type_io_fs_FileMode__::_param9;

/* 3361 */
typedef bool internal_poll_init_OnceValue_go_shape_bool__func5::_param2;

/* 3362 */
typedef void (*funcint_comma__slice_uint8_int_comma_error)(int, _slice_uint8_0, int *, error_0 *);

/* 3363 */
typedef go_shape_string_0 time_parseRFC3339_go_shape_string_::_param2;

/* 3364 */
typedef go_shape_string_0 time_atoi_go_shape_string_::_param1;

/* 3365 */
typedef go_shape_string_0 time_parseNanoseconds_go_shape_string_::_param1;

/* 3366 */
struct time_fileSizeError_0
{
  uint8 *str;
  int len;
};

/* 3367 */
typedef hchan<time_Time> *chan_time_Time_0;

/* 3368 */
struct _slice_syscall_NetlinkMessage
{
  syscall_NetlinkMessage_0 *array;
  int len;
  int cap;
};

/* 4276 */
struct syscall_NetlinkMessage_0
{
  syscall_NlMsghdr Header;
  _slice_uint8_0 Data;
};

/* 3369 */
struct _slice__ptr_uint8
{
  uint8 **array;
  int len;
  int cap;
};

/* 3372 */
typedef unsigned __int16 go_shape__256_crypto_internal_mlkem768_fieldElement[256];

/* 3370 */
typedef go_shape__256_crypto_internal_mlkem768_fieldElement crypto_internal_mlkem768_polyByteEncode_go_shape__256_crypto_internal_mlkem768_fieldElement_::_param0;

/* 3371 */
typedef unsigned __int16 crypto_internal_mlkem768_ringElement[256];

/* 3373 */
typedef go_shape__slice_crypto_tls_CurveID slices_DeleteFunc_go_shape__slice_crypto_tls_CurveID_comma_go_shape_uint16_::_param1;

/* 3863 */
struct go_shape__slice_crypto_tls_CurveID
{
  unsigned __int16 *array;
  int len;
  int cap;
};

/* 3383 */
typedef void (*funcgo_shape_uint16_bool)(unsigned __int16, bool *);

/* 3374 */
typedef funcgo_shape_uint16_bool slices_DeleteFunc_go_shape__slice_crypto_tls_CurveID_comma_go_shape_uint16_::_param2;

/* 3375 */
typedef go_shape__slice_uint16 slices_DeleteFunc_go_shape__slice_uint16_comma_go_shape_uint16_::_param1;

/* 4328 */
struct go_shape__slice_uint16
{
  uint16 *array;
  int len;
  int cap;
};

/* 3376 */
typedef funcgo_shape_uint16_bool slices_DeleteFunc_go_shape__slice_uint16_comma_go_shape_uint16_::_param2;

/* 3384 */
typedef void (*funcgo_shape_struct__crypto_tls_group_crypto_tls_CurveID_crypto_tls_data__slice_uint8__bool)(go_shape_struct__crypto_tls_group_crypto_tls_CurveID_crypto_tls_data__slice_uint8_, bool *);

/* 3377 */
typedef funcgo_shape_struct__crypto_tls_group_crypto_tls_CurveID_crypto_tls_data__slice_uint8__bool slices_ContainsFunc_go_shape__slice_crypto_tls_keyShare_comma_go_shape_struct__crypto_tls_group_crypto_tls_CurveID_crypto_tls_data__slice_uint8__::_param2;

/* 3809 */
struct go_shape_struct__crypto_tls_group_crypto_tls_CurveID_crypto_tls_data__slice_uint8_
{
  unsigned __int16 group;
  _slice_uint8_0 data;
};

/* 3378 */
typedef go_shape__slice_crypto_tls_keyShare slices_ContainsFunc_go_shape__slice_crypto_tls_keyShare_comma_go_shape_struct__crypto_tls_group_crypto_tls_CurveID_crypto_tls_data__slice_uint8__::_param1;

/* 3816 */
struct go_shape__slice_crypto_tls_keyShare
{
  crypto_tls_keyShare *array;
  int len;
  int cap;
};

/* 3380 */
typedef void (*func_slice_uint8_comma_hash_Hash__slice_uint8)(_slice_uint8_0, hash_Hash_0, _slice_uint8_0 *);

/* 3381 */
struct _slice_crypto_tls_echConfig
{
  crypto_tls_echConfig *array;
  int len;
  int cap;
};

/* 3847 */
struct crypto_tls_echConfig
{
  _slice_uint8_0 raw;
  uint16 Version;
  uint16 Length;
  uint8 ConfigID;
  uint16 KemID;
  _slice_uint8_0 PublicKey;
  _slice_crypto_tls_echCipher SymmetricCipherSuite;
  uint8 MaxNameLength;
  _slice_uint8_0 PublicName;
  _slice_crypto_tls_echExtension Extensions;
};

/* 3385 */
typedef void (*crypto_tls_marshalingFunction)(vendor_golang_org_x_crypto_cryptobyte_Builder *, error_0 *);

/* 3386 */
typedef void (*func_slice_uint8__slice_uint8)(_slice_uint8_0, _slice_uint8_0 *);

/* 3387 */
struct net_textproto_ProtocolError
{
  uint8 *str;
  int len;
};

/* 3389 */
typedef void (*funcreflect_Value_comma_reflect_Type_reflect_Value)(reflect_Value_0, reflect_Type_0, reflect_Value_0 *);

/* 3390 */
typedef hash<reflect_visit_comma_bool> *map_reflect_visit_bool_0;

/* 3458 */
struct hash<reflect_visit_comma_bool>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<reflect_visit_comma_bool> *buckets;
  bucket<reflect_visit_comma_bool> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3459 */
struct bucket<reflect_visit_comma_bool>
{
  uint8 tophash[8];
  reflect_visit_0 keys[8];
  bool values[8];
  bucket<reflect_visit_comma_bool> *overflow;
};

/* 3391 */
typedef void (*funcint32_bool)(int32, bool *);

/* 3392 */
typedef void (*funcint32_int32)(int32, int32 *);

/* 3393 */
typedef uint32 strings_asciiSet[8];

/* 3394 */
typedef go_shape__slice_uint8 internal_bytealg_IndexRabinKarp_go_shape__slice_uint8_::_param1;

/* 3395 */
typedef uint32 bytes_asciiSet[8];

/* 3396 */
typedef void (*funcinterface__comma_interface__bool)(interface__0, interface__0, bool *);

/* 3397 */
typedef void (*funcint_comma_int)(int, int);

/* 3448 */
struct hash<string_comma_runtime_metricData>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_runtime_metricData> *buckets;
  bucket<string_comma_runtime_metricData> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 4534 */
typedef runtime_metricData runtime_metricData_0;

/* 3449 */
struct bucket<string_comma_runtime_metricData>
{
  uint8 tophash[8];
  string_0 keys[8];
  runtime_metricData_0 values[8];
  bucket<string_comma_runtime_metricData> *overflow;
};

/* 3450 */
struct hash<uint32_comma__slice__ptr_internal_abi_Type>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint32_comma__slice__ptr_internal_abi_Type> *buckets;
  bucket<uint32_comma__slice__ptr_internal_abi_Type> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3451 */
struct bucket<uint32_comma__slice__ptr_internal_abi_Type>
{
  uint8 tophash[8];
  uint32 keys[8];
  _slice__ptr_internal_abi_Type values[8];
  bucket<uint32_comma__slice__ptr_internal_abi_Type> *overflow;
};

/* 3456 */
struct hash<string_comma__ptr_unicode_RangeTable>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma__ptr_unicode_RangeTable> *buckets;
  bucket<string_comma__ptr_unicode_RangeTable> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3457 */
struct bucket<string_comma__ptr_unicode_RangeTable>
{
  uint8 tophash[8];
  string_0 keys[8];
  unicode_RangeTable_0 *values[8];
  bucket<string_comma__ptr_unicode_RangeTable> *overflow;
};

/* 4352 */
struct unicode_RangeTable_0
{
  _slice_unicode_Range16_0 R16;
  _slice_unicode_Range32_0 R32;
  int LatinOffset;
};

/* 3466 */
struct hash<crypto_Hash_comma__slice_uint8>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<crypto_Hash_comma__slice_uint8> *buckets;
  bucket<crypto_Hash_comma__slice_uint8> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3467 */
struct bucket<crypto_Hash_comma__slice_uint8>
{
  uint8 tophash[8];
  unsigned int keys[8];
  _slice_uint8_0 values[8];
  bucket<crypto_Hash_comma__slice_uint8> *overflow;
};

/* 3470 */
struct hash<go_shape__ptr_internal_abi_Type_comma_go_shape_interface_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<go_shape__ptr_internal_abi_Type_comma_go_shape_interface_> *buckets;
  bucket<go_shape__ptr_internal_abi_Type_comma_go_shape_interface_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3471 */
struct bucket<go_shape__ptr_internal_abi_Type_comma_go_shape_interface_>
{
  uint8 tophash[8];
  go_shape__ptr_internal_abi_Type_0 keys[8];
  go_shape_interface__0 values[8];
  bucket<go_shape__ptr_internal_abi_Type_comma_go_shape_interface_> *overflow;
};

/* 3472 */
struct hash<go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer_> *buckets;
  bucket<go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3473 */
struct bucket<go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer_>
{
  uint8 tophash[8];
  go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 keys[8];
  go_shape_struct__internal_weak_u_unsafe_Pointer_ values[8];
  bucket<go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer_> *overflow;
};

/* 3476 */
struct hash<vendor_golang_org_x_net_dns_dnsmessage_Class_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<vendor_golang_org_x_net_dns_dnsmessage_Class_comma_string> *buckets;
  bucket<vendor_golang_org_x_net_dns_dnsmessage_Class_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3477 */
struct bucket<vendor_golang_org_x_net_dns_dnsmessage_Class_comma_string>
{
  uint8 tophash[8];
  unsigned __int16 keys[8];
  string_0 values[8];
  bucket<vendor_golang_org_x_net_dns_dnsmessage_Class_comma_string> *overflow;
};

/* 3478 */
struct hash<vendor_golang_org_x_net_dns_dnsmessage_RCode_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<vendor_golang_org_x_net_dns_dnsmessage_RCode_comma_string> *buckets;
  bucket<vendor_golang_org_x_net_dns_dnsmessage_RCode_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3479 */
struct bucket<vendor_golang_org_x_net_dns_dnsmessage_RCode_comma_string>
{
  uint8 tophash[8];
  unsigned __int16 keys[8];
  string_0 values[8];
  bucket<vendor_golang_org_x_net_dns_dnsmessage_RCode_comma_string> *overflow;
};

/* 3480 */
struct hash<vendor_golang_org_x_net_dns_dnsmessage_section_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<vendor_golang_org_x_net_dns_dnsmessage_section_comma_string> *buckets;
  bucket<vendor_golang_org_x_net_dns_dnsmessage_section_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3481 */
struct bucket<vendor_golang_org_x_net_dns_dnsmessage_section_comma_string>
{
  uint8 tophash[8];
  unsigned __int8 keys[8];
  string_0 values[8];
  bucket<vendor_golang_org_x_net_dns_dnsmessage_section_comma_string> *overflow;
};

/* 3484 */
struct hash<net_hostLookupOrder_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_hostLookupOrder_comma_string> *buckets;
  bucket<net_hostLookupOrder_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3485 */
struct bucket<net_hostLookupOrder_comma_string>
{
  uint8 tophash[8];
  int keys[8];
  string_0 values[8];
  bucket<net_hostLookupOrder_comma_string> *overflow;
};

/* 3486 */
struct hash<string_comma_int>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_int> *buckets;
  bucket<string_comma_int> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3487 */
struct bucket<string_comma_int>
{
  uint8 tophash[8];
  string_0 keys[8];
  int values[8];
  bucket<string_comma_int> *overflow;
};

/* 3488 */
struct hash<string_comma_map_string_int>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_map_string_int> *buckets;
  bucket<string_comma_map_string_int> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3490 */
typedef hash<string_comma_int> *map_string_int_0;

/* 3489 */
struct bucket<string_comma_map_string_int>
{
  uint8 tophash[8];
  string_0 keys[8];
  map_string_int_0 values[8];
  bucket<string_comma_map_string_int> *overflow;
};

/* 3494 */
struct hash<string_comma_net_byName>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_net_byName> *buckets;
  bucket<string_comma_net_byName> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3959 */
struct net_byName_0
{
  _slice_string_0 addrs;
  string_0 canonicalName;
};

/* 3495 */
struct bucket<string_comma_net_byName>
{
  uint8 tophash[8];
  string_0 keys[8];
  net_byName_0 values[8];
  bucket<string_comma_net_byName> *overflow;
};

/* 3502 */
struct hash<uint16_comma_func__ptr_crypto_internal_hpke_hkdfKDF>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint16_comma_func__ptr_crypto_internal_hpke_hkdfKDF> *buckets;
  bucket<uint16_comma_func__ptr_crypto_internal_hpke_hkdfKDF> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3504 */
typedef void (*func__ptr_crypto_internal_hpke_hkdfKDF)(crypto_internal_hpke_hkdfKDF **);

/* 3503 */
struct bucket<uint16_comma_func__ptr_crypto_internal_hpke_hkdfKDF>
{
  uint8 tophash[8];
  uint16 keys[8];
  func__ptr_crypto_internal_hpke_hkdfKDF values[8];
  bucket<uint16_comma_func__ptr_crypto_internal_hpke_hkdfKDF> *overflow;
};

/* 3894 */
struct crypto_internal_hpke_hkdfKDF
{
  unsigned int hash;
};

/* 3505 */
struct hash<uint16_comma_struct__crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint16_comma_struct__crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_> *buckets;
  bucket<uint16_comma_struct__crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 4127 */
typedef runtime_iface crypto_ecdh_Curve;

/* 3507 */
struct __attribute__((aligned(4))) _crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_
{
  crypto_ecdh_Curve curve;
  unsigned int hash;
  uint16 nSecret;
};

/* 3506 */
struct bucket<uint16_comma_struct__crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_>
{
  uint8 tophash[8];
  uint16 keys[8];
  _crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_ values[8];
  bucket<uint16_comma_struct__crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_> *overflow;
};

/* 3508 */
struct hash<uint16_comma_struct__crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint16_comma_struct__crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_> *buckets;
  bucket<uint16_comma_struct__crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 4149 */
typedef runtime_iface crypto_cipher_AEAD;

/* 3893 */
typedef void (*func_slice_uint8_crypto_cipher_AEAD_comma_error)(_slice_uint8_0, crypto_cipher_AEAD *, error_0 *);

/* 3510 */
struct _crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_
{
  int keySize;
  int nonceSize;
  func_slice_uint8_crypto_cipher_AEAD_comma_error aead;
};

/* 3509 */
struct bucket<uint16_comma_struct__crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_>
{
  uint8 tophash[8];
  uint16 keys[8];
  _crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_ values[8];
  bucket<uint16_comma_struct__crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_> *overflow;
};

/* 3511 */
struct hash<uint16_comma_bool>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint16_comma_bool> *buckets;
  bucket<uint16_comma_bool> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3512 */
struct bucket<uint16_comma_bool>
{
  uint8 tophash[8];
  uint16 keys[8];
  bool values[8];
  bucket<uint16_comma_bool> *overflow;
};

/* 3513 */
struct hash<crypto_tls_alert_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<crypto_tls_alert_comma_string> *buckets;
  bucket<crypto_tls_alert_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3514 */
struct bucket<crypto_tls_alert_comma_string>
{
  uint8 tophash[8];
  unsigned __int8 keys[8];
  string_0 values[8];
  bucket<crypto_tls_alert_comma_string> *overflow;
};

/* 3517 */
struct hash<string_comma_map_string_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<string_comma_map_string_string> *buckets;
  bucket<string_comma_map_string_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3518 */
struct bucket<string_comma_map_string_string>
{
  uint8 tophash[8];
  string_0 keys[8];
  map_string_string_0 values[8];
  bucket<string_comma_map_string_string> *overflow;
};

/* 3526 */
struct hash<net_http_ConnState_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_ConnState_comma_string> *buckets;
  bucket<net_http_ConnState_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3527 */
struct bucket<net_http_ConnState_comma_string>
{
  uint8 tophash[8];
  int keys[8];
  string_0 values[8];
  bucket<net_http_ConnState_comma_string> *overflow;
};

/* 3528 */
struct hash<net_http_http2SettingID_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_http2SettingID_comma_string> *buckets;
  bucket<net_http_http2SettingID_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3529 */
struct bucket<net_http_http2SettingID_comma_string>
{
  uint8 tophash[8];
  unsigned __int16 keys[8];
  string_0 values[8];
  bucket<net_http_http2SettingID_comma_string> *overflow;
};

/* 3543 */
struct hash<net_http_http2ErrCode_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_http2ErrCode_comma_string> *buckets;
  bucket<net_http_http2ErrCode_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3544 */
struct bucket<net_http_http2ErrCode_comma_string>
{
  uint8 tophash[8];
  unsigned int keys[8];
  string_0 values[8];
  bucket<net_http_http2ErrCode_comma_string> *overflow;
};

/* 3545 */
struct hash<net_http_http2FrameType_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_http2FrameType_comma_string> *buckets;
  bucket<net_http_http2FrameType_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3546 */
struct bucket<net_http_http2FrameType_comma_string>
{
  uint8 tophash[8];
  unsigned __int8 keys[8];
  string_0 values[8];
  bucket<net_http_http2FrameType_comma_string> *overflow;
};

/* 3547 */
struct hash<net_http_http2Flags_comma_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_http2Flags_comma_string> *buckets;
  bucket<net_http_http2Flags_comma_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3548 */
struct bucket<net_http_http2Flags_comma_string>
{
  uint8 tophash[8];
  unsigned __int8 keys[8];
  string_0 values[8];
  bucket<net_http_http2Flags_comma_string> *overflow;
};

/* 3549 */
struct hash<net_http_http2FrameType_comma_map_net_http_http2Flags_string>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_http2FrameType_comma_map_net_http_http2Flags_string> *buckets;
  bucket<net_http_http2FrameType_comma_map_net_http_http2Flags_string> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3551 */
typedef hash<net_http_http2Flags_comma_string> *map_net_http_http2Flags_string;

/* 3550 */
struct bucket<net_http_http2FrameType_comma_map_net_http_http2Flags_string>
{
  uint8 tophash[8];
  unsigned __int8 keys[8];
  map_net_http_http2Flags_string values[8];
  bucket<net_http_http2FrameType_comma_map_net_http_http2Flags_string> *overflow;
};

/* 3552 */
struct hash<net_http_http2FrameType_comma_net_http_http2frameParser>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_http2FrameType_comma_net_http_http2frameParser> *buckets;
  bucket<net_http_http2FrameType_comma_net_http_http2frameParser> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3554 */
typedef void (*net_http_http2frameParser)(net_http_http2frameCache *, net_http_http2FrameHeader, funcstring, _slice_uint8_0, net_http_http2Frame *, error_0 *);

/* 3553 */
struct bucket<net_http_http2FrameType_comma_net_http_http2frameParser>
{
  uint8 tophash[8];
  unsigned __int8 keys[8];
  net_http_http2frameParser values[8];
  bucket<net_http_http2FrameType_comma_net_http_http2frameParser> *overflow;
};

/* 3555 */
struct hash<net_http_http2SettingID_comma_bool>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<net_http_http2SettingID_comma_bool> *buckets;
  bucket<net_http_http2SettingID_comma_bool> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3556 */
struct bucket<net_http_http2SettingID_comma_bool>
{
  uint8 tophash[8];
  unsigned __int16 keys[8];
  bool values[8];
  bucket<net_http_http2SettingID_comma_bool> *overflow;
};

/* 3557 */
struct hash<uint32_comma__ptr_net_http_http2writeQueue>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint32_comma__ptr_net_http_http2writeQueue> *buckets;
  bucket<uint32_comma__ptr_net_http_http2writeQueue> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3558 */
struct bucket<uint32_comma__ptr_net_http_http2writeQueue>
{
  uint8 tophash[8];
  uint32 keys[8];
  net_http_http2writeQueue *values[8];
  bucket<uint32_comma__ptr_net_http_http2writeQueue> *overflow;
};

/* 3689 */
struct net_http_http2writeQueue
{
  _slice_net_http_http2FrameWriteRequest s;
  net_http_http2writeQueue *prev;
  net_http_http2writeQueue *next;
};

/* 3573 */
struct hash<uint32_comma_int32>
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  bucket<uint32_comma_int32> *buckets;
  bucket<uint32_comma_int32> *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 3574 */
struct bucket<uint32_comma_int32>
{
  uint8 tophash[8];
  uint32 keys[8];
  int32 values[8];
  bucket<uint32_comma_int32> *overflow;
};

/* 3575 */
struct __attribute__((aligned(4))) _crypto_tls_scheme_crypto_tls_SignatureScheme_crypto_tls_minModulusBytes_int_crypto_tls_maxVersion_uint16_
{
  unsigned __int16 scheme;
  int minModulusBytes;
  uint16 maxVersion;
};

/* 4096 */
struct encoding_asn1_RawValue
{
  int Class;
  int Tag;
  bool IsCompound;
  _slice_uint8_0 Bytes;
  _slice_uint8_0 FullBytes;
};

/* 3576 */
struct __attribute__((aligned(4))) _crypto_x509_algo_crypto_x509_SignatureAlgorithm_crypto_x509_name_string_crypto_x509_oid_encoding_asn1_ObjectIdentifier_crypto_x509_params_encoding_asn1_RawValue_crypto_x509_pubKeyAlgo_crypto_x509_PublicKeyAlgorithm_crypto_x509_hash_crypto_Hash_crypto_x509_isRSAPSS_bool_
{
  int algo;
  string_0 name;
  encoding_asn1_ObjectIdentifier oid;
  encoding_asn1_RawValue params;
  int pubKeyAlgo;
  unsigned int hash;
  bool isRSAPSS;
};

/* 3577 */
struct _crypto_x509_extKeyUsage_crypto_x509_ExtKeyUsage_crypto_x509_oid_encoding_asn1_ObjectIdentifier_
{
  int extKeyUsage;
  encoding_asn1_ObjectIdentifier oid;
};

/* 3578 */
struct runtime_stringStructDWARF
{
  uint8 *str;
  int len;
};

/* 4586 */
struct runtime_timeHistogram
{
  internal_runtime_atomic_Uint64 counts[160];
  internal_runtime_atomic_Uint64 underflow;
  internal_runtime_atomic_Uint64 overflow;
};

/* 3579 */
struct runtime_schedt
{
  internal_runtime_atomic_Uint64 goidgen;
  internal_runtime_atomic_Int64 lastpoll;
  internal_runtime_atomic_Int64 pollUntil;
  runtime_mutex_1 lock;
  unsigned int midle;
  int32 nmidle;
  int32 nmidlelocked;
  int64 mnext;
  int32 maxmcount;
  int32 nmsys;
  int64 nmfreed;
  internal_runtime_atomic_Int32 ngsys;
  unsigned int pidle;
  internal_runtime_atomic_Int32 npidle;
  internal_runtime_atomic_Int32 nmspinning;
  internal_runtime_atomic_Uint32 needspinning;
  runtime_gQueue runq;
  int32 runqsize;
  _runtime_user_bool_runtime_runnable_runtime_gQueue_runtime_n_int32_ disable;
  _runtime_lock_runtime_mutex_runtime_stack_runtime_gList_runtime_noStack_runtime_gList_runtime_n_int32_ gFree;
  runtime_mutex_1 sudoglock;
  runtime_sudog_0 *sudogcache;
  runtime_mutex_1 deferlock;
  runtime__defer_0 *deferpool;
  runtime_m_0 *freem;
  internal_runtime_atomic_Bool gcwaiting;
  int32 stopwait;
  runtime_note stopnote;
  internal_runtime_atomic_Bool sysmonwait;
  runtime_note sysmonnote;
  func_ptr_runtime_p safePointFn;
  int32 safePointWait;
  runtime_note safePointNote;
  int32 profilehz;
  int64 procresizetime;
  int64 totaltime;
  runtime_mutex_1 sysmonlock;
  runtime_timeHistogram timeToRun;
  internal_runtime_atomic_Int64 idleTime;
  internal_runtime_atomic_Int64 totalMutexWaitTime;
  runtime_timeHistogram stwStoppingTimeGC;
  runtime_timeHistogram stwStoppingTimeOther;
  runtime_timeHistogram stwTotalTimeGC;
  runtime_timeHistogram stwTotalTimeOther;
  internal_runtime_atomic_Int64 totalRuntimeLockWaitTime;
};

/* 3580 */
struct internal_concurrent_HashTrieMap__ptr_internal_abi_Type_comma_interface__
{
  internal_concurrent_indirect__ptr_internal_abi_Type_comma_interface__ *root;
  internal_concurrent_hashFunc keyHash;
  internal_concurrent_equalFunc keyEqual;
  internal_concurrent_equalFunc valEqual;
  uintptr seed;
};

/* 4043 */
struct internal_concurrent_node__ptr_internal_abi_Type_comma_interface__
{
  bool isEntry;
};

/* 4044 */
struct internal_concurrent_indirect__ptr_internal_abi_Type_comma_interface__
{
  internal_concurrent_node__ptr_internal_abi_Type_comma_interface__ node;
  sync_atomic_Bool dead;
  sync_Mutex mu;
  internal_concurrent_indirect__ptr_internal_abi_Type_comma_interface__ *parent;
  sync_atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___ children[16];
};

/* 4042 */
struct sync_atomic_Pointer_internal_concurrent_node__ptr_internal_abi_Type_comma_interface___
{
  void *v;
};

/* 3581 */
struct vendor_golang_org_x_sys_cpu_CacheLinePad
{
  uint8 _[32];
};

/* 3582 */
struct __attribute__((aligned(4))) internal_runtime_exithook_Hook
{
  func F;
  bool RunOnFailure;
};

/* 3583 */
struct crypto_ecdsa_nistCurve__ptr_crypto_internal_nistec_P521Point_
{
  func__ptr_crypto_internal_nistec_P521Point newPoint;
  crypto_elliptic_Curve curve;
  crypto_internal_bigmod_Modulus *N;
  _slice_uint8_0 nMinus2;
};

/* 3584 */
struct crypto_ecdsa_nistCurve__ptr_crypto_internal_nistec_P384Point_
{
  func__ptr_crypto_internal_nistec_P384Point newPoint;
  crypto_elliptic_Curve curve;
  crypto_internal_bigmod_Modulus *N;
  _slice_uint8_0 nMinus2;
};

/* 3585 */
struct crypto_ecdsa_nistCurve__ptr_crypto_internal_nistec_P256Point_
{
  func__ptr_crypto_internal_nistec_P256Point newPoint;
  crypto_elliptic_Curve curve;
  crypto_internal_bigmod_Modulus *N;
  _slice_uint8_0 nMinus2;
};

/* 3586 */
struct crypto_ecdsa_nistCurve__ptr_crypto_internal_nistec_P224Point_
{
  func__ptr_crypto_internal_nistec_P224Point newPoint;
  crypto_elliptic_Curve curve;
  crypto_internal_bigmod_Modulus *N;
  _slice_uint8_0 nMinus2;
};

/* 3587 */
struct sync_atomic_Pointer_syscall_Rlimit_
{
  void *v;
};

/* 3588 */
struct internal_runtime_atomic_Pointer_runtime_profBuf_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 3589 */
struct runtime_sigTabT
{
  int32 flags;
  string_0 name;
};

/* 3590 */
struct __attribute__((aligned(4))) runtime_forcegcstate
{
  runtime_mutex_1 lock;
  runtime_g_0 *g;
  internal_runtime_atomic_Bool idle;
};

/* 3591 */
struct internal_runtime_atomic_Pointer_funcstring_func_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 3592 */
struct internal_runtime_atomic_Pointer_string_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 3593 */
struct internal_runtime_atomic_Pointer_funcstring_comma_string_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 3594 */
struct internal_runtime_atomic_Pointer_runtime_g_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4491 */
struct runtime_consistentHeapStats
{
  runtime_heapStatsDelta stats[3];
  internal_runtime_atomic_Uint32 gen;
  runtime_mutex_1 noPLock;
};

/* 3595 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_mstats
{
  runtime_consistentHeapStats heapStats;
  unsigned __int64 stacks_sys;
  unsigned __int64 mspan_sys;
  unsigned __int64 mcache_sys;
  unsigned __int64 buckhash_sys;
  unsigned __int64 gcMiscSys;
  unsigned __int64 other_sys;
  uint64 last_gc_unix;
  uint64 pause_total_ns;
  uint64 pause_ns[256];
  uint64 pause_end[256];
  uint32 numgc;
  uint32 numforcedgc;
  float64 gc_cpu_fraction;
  uint64 last_gc_nanotime;
  uint64 lastHeapInUse;
  bool enablegc;
};

/* 4522 */
struct runtime_activeSweep
{
  internal_runtime_atomic_Uint32 state;
};

/* 3596 */
struct runtime_sweepdata
{
  runtime_mutex_1 lock;
  runtime_g_0 *g;
  bool parked;
  runtime_activeSweep active;
  unsigned int centralIndex;
};

/* 4564 */
struct internal_cpu_CacheLinePad
{
  uint8 _[32];
};

/* 3597 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_workType
{
  unsigned __int64 full;
  internal_cpu_CacheLinePad _;
  unsigned __int64 empty;
  internal_cpu_CacheLinePad __2;
  _runtime_lock_runtime_mutex_runtime_free_runtime_mSpanList_runtime_busy_runtime_mSpanList_ wbufSpans;
  uint32 __3;
  uint64 bytesMarked;
  uint32 markrootNext;
  uint32 markrootJobs;
  uint32 nproc;
  int64 tstart;
  uint32 nwait;
  int nDataRoots;
  int nBSSRoots;
  int nSpanRoots;
  int nStackRoots;
  uint32 baseData;
  uint32 baseBSS;
  uint32 baseSpans;
  uint32 baseStacks;
  uint32 baseEnd;
  _slice__ptr_runtime_g stackRoots;
  uint32 startSema;
  uint32 markDoneSema;
  uint32 bgMarkDone;
  int mode;
  bool userForced;
  __attribute__((aligned(4))) uint64 initialHeapLive;
  _runtime_lock_runtime_mutex_runtime_q_runtime_gQueue_ assistQueue;
  _runtime_lock_runtime_mutex_runtime_list_runtime_gList_ sweepWaiters;
  _runtime_block_bool_runtime_lock_runtime_mutex_runtime_q_runtime_gQueue_ strongFromWeak;
  internal_runtime_atomic_Uint32 cycles;
  int32 stwprocs;
  int32 maxprocs;
  int64 tSweepTerm;
  int64 tMark;
  int64 tMarkTerm;
  int64 tEnd;
  int64 pauseNS;
  uint64 heap0;
  uint64 heap1;
  uint64 heap2;
  runtime_cpuStats cpuStats;
};

/* 3598 */
struct _slice_runtime_liveUserArenaChunk
{
  runtime_liveUserArenaChunk *array;
  int len;
  int cap;
};

/* 4527 */
struct runtime_liveUserArenaChunk
{
  runtime_mspan_0 *mspan;
  void *x;
};

/* 3600 */
typedef hash<string_comma_net_byName> *map_string_net_byName_0;

/* 3601 */
struct unicode_foldPair
{
  uint16 From;
  uint16 To;
};

/* 3602 */
struct unicode_utf8_acceptRange
{
  uint8 lo;
  uint8 hi;
};

/* 3603 */
struct strconv_leftCheat
{
  int delta;
  string_0 cutoff;
};

/* 3604 */
struct __attribute__((packed)) __attribute__((aligned(4))) main_fInfo_0
{
  string_0 name;
  time_Time_1 modTime;
  int64 size;
};

/* 3605 */
struct main_fIList_0
{
  main_fInfo_0 *array;
  int len;
  int cap;
};

/* 3606 */
struct os_exec_prefixSuffixSaver
{
  int N;
  _slice_uint8_0 prefix;
  _slice_uint8_0 suffix;
  int suffixOff;
  int64 skipped;
};

/* 3607 */
struct os_exec_ExitError
{
  os_ProcessState_0 *ProcessState;
  _slice_uint8_0 Stderr;
};

/* 3612 */
struct os_exec_wrappedError
{
  string_0 prefix;
  error_0 err;
};

/* 3613 */
struct os_exec_Error
{
  string_0 Name;
  error_0 Err;
};

/* 3614 */
struct go_shape__slice_go_shape_string_0
{
  go_shape_string_0 *array;
  int len;
  int cap;
};

/* 3616 */
struct net_http_bodyLocked
{
  net_http_body *b;
};

/* 3633 */
struct net_http_body
{
  io_Reader_0 src;
  interface__0 hdr;
  bufio_Reader_0 *r;
  bool closing;
  bool doEarlyClose;
  sync_Mutex mu;
  bool sawEOF;
  bool closed;
  bool earlyClose;
  func onHitEOF;
};

/* 3617 */
struct net_http_unsupportedTEError
{
  string_0 err;
};

/* 3618 */
struct net_http_transferReader
{
  net_http_Header Header;
  int StatusCode;
  string_0 RequestMethod;
  int ProtoMajor;
  int ProtoMinor;
  io_ReadCloser_0 Body;
  int64 ContentLength;
  bool Chunked;
  bool Close;
  net_http_Header Trailer;
};

/* 3619 */
struct net_http_textSig
{
};

/* 3620 */
struct net_http_mp4Sig
{
};

/* 3621 */
struct net_http_htmlSig
{
  uint8 *array;
  int len;
  int cap;
};

/* 3622 */
struct net_http_maskedSig
{
  _slice_uint8_0 mask;
  _slice_uint8_0 pat;
  bool skipWS;
  string_0 ct;
};

/* 3623 */
struct net_http_exactSig
{
  _slice_uint8_0 sig;
  string_0 ct;
};

/* 3624 */
typedef runtime_iface net_http_sniffSig;

/* 3625 */
struct net_http_checkConnErrorWriter
{
  net_http_conn *c;
};

/* 3626 */
struct net_http_globalOptionsHandler
{
};

/* 3627 */
struct net_http_onceCloseListener
{
  net_Listener_0 Listener;
  sync_Once_1 once;
  error_0 closeErr;
};

/* 3647 */
struct net_http_routingIndex
{
  map_net_http_routingIndexKey__slice__ptr_net_http_pattern segments;
  _slice__ptr_net_http_pattern multis;
};

/* 3641 */
struct __attribute__((aligned(4))) net_http_serveMux121
{
  sync_RWMutex_1 mu;
  map_string_net_http_muxEntry m;
  _slice_net_http_muxEntry es;
  bool hosts;
};

/* 3628 */
struct net_http_ServeMux
{
  sync_RWMutex_1 mu;
  net_http_routingNode tree;
  net_http_routingIndex index;
  _slice__ptr_net_http_pattern patterns;
  net_http_serveMux121 mux121;
};

/* 3629 */
struct net_http_redirectHandler
{
  string_0 url;
  int code;
};

/* 3630 */
struct net_http_serverHandler
{
  net_http_Server *srv;
};

/* 3631 */
struct net_http_initALPNRequest
{
  context_Context_0 ctx;
  crypto_tls_Conn *c;
  net_http_serverHandler h;
};

/* 3632 */
typedef runtime_iface net_http_closeWriter;

/* 3634 */
struct net_http_extraHeader
{
  string_0 contentType;
  string_0 connection;
  string_0 transferEncoding;
  _slice_uint8_0 date;
  _slice_uint8_0 contentLength;
};

/* 3635 */
struct net_http_statusError
{
  int code;
  string_0 text;
};

/* 3636 */
struct net_http_expectContinueReader
{
  net_http_response *resp;
  io_ReadCloser_0 readCloser;
  sync_atomic_Bool closed;
  sync_atomic_Bool sawEOF;
};

/* 3742 */
struct __attribute__((aligned(4))) net_http_chunkWriter
{
  net_http_response *res;
  net_http_Header header;
  bool wroteHeader;
  bool chunking;
};

/* 3747 */
struct net_http_response
{
  net_http_conn *conn;
  net_http_Request *req;
  io_ReadCloser_0 reqBody;
  context_CancelFunc cancelCtx;
  bool wroteHeader;
  bool wants10KeepAlive;
  bool wantsClose;
  sync_Mutex writeContinueMu;
  sync_atomic_Bool canWriteContinue;
  bufio_Writer_0 *w;
  net_http_chunkWriter cw;
  net_http_Header handlerHeader;
  bool calledHeader;
  __attribute__((packed)) __attribute__((aligned(4))) int64 written;
  __attribute__((packed)) __attribute__((aligned(1))) int64 contentLength;
  int status;
  bool closeAfterReply;
  bool fullDuplex;
  bool requestBodyLimitHit;
  _slice_string_0 trailers;
  sync_atomic_Bool handlerDone;
  uint8 dateBuf[29];
  uint8 clenBuf[10];
  uint8 statusBuf[3];
  chan_bool_0 closeNotifyCh;
  sync_atomic_Bool didCloseNotify;
};

/* 3637 */
struct go_shape_57957d6f4bc2fc9dae5a5f3759675b937e776e008bf21b749ef11b98e51af132
{
  net_http_conn *conn;
  net_http_Request *req;
  io_ReadCloser_0 reqBody;
  context_CancelFunc cancelCtx;
  bool wroteHeader;
  bool wants10KeepAlive;
  bool wantsClose;
  sync_Mutex writeContinueMu;
  sync_atomic_Bool canWriteContinue;
  bufio_Writer_0 *w;
  net_http_chunkWriter cw;
  net_http_Header handlerHeader;
  bool calledHeader;
  __attribute__((packed)) __attribute__((aligned(4))) int64 written;
  __attribute__((packed)) __attribute__((aligned(1))) int64 contentLength;
  int status;
  bool closeAfterReply;
  bool fullDuplex;
  bool requestBodyLimitHit;
  _slice_string_0 trailers;
  sync_atomic_Bool handlerDone;
  uint8 dateBuf[29];
  uint8 clenBuf[10];
  uint8 statusBuf[3];
  chan_bool_0 closeNotifyCh;
  sync_atomic_Bool didCloseNotify;
};

/* 3638 */
struct sync_atomic_Pointer_go_shape_57957d6f4bc2fc9dae5a5f3759675b937e776e008bf21b749ef11b98e51af132_
{
  void *v;
};

/* 3639 */
struct net_http_writerOnly
{
  io_Writer_0 Writer;
};

/* 3643 */
struct net_http_mapping_go_shape_string_comma_go_shape__ptr_uint8_
{
  _slice_net_http_entry_go_shape_string_comma_go_shape__ptr_uint8_ s;
  map_go_shape_string_go_shape__ptr_uint8 m;
};

/* 3649 */
typedef runtime_iface net_http_requestTooLarger_5;

/* 3650 */
struct net_http_maxBytesReader
{
  net_http_ResponseWriter w;
  io_ReadCloser_0 r;
  int64 i;
  int64 n;
  error_0 err;
};

/* 3651 */
struct net_http_MaxBytesError
{
  int64 Limit;
};

/* 3652 */
struct net_http_ProtocolError
{
  string_0 ErrorString;
};

/* 3653 */
struct net_http_noBody
{
};

/* 3654 */
struct net_http_contextKey
{
  string_0 name;
};

/* 3659 */
struct net_http_httptrace_ClientTrace
{
  funcstring GetConn;
  funcnet_http_httptrace_GotConnInfo GotConn;
  funcerror PutIdleConn;
  func GotFirstResponseByte;
  func Got100Continue;
  funcint_comma_net_textproto_MIMEHeader_error Got1xxResponse;
  funcnet_http_httptrace_DNSStartInfo DNSStart;
  funcnet_http_httptrace_DNSDoneInfo DNSDone;
  funcstring_comma_string ConnectStart;
  funcstring_comma_string_comma_error ConnectDone;
  func TLSHandshakeStart;
  funccrypto_tls_ConnectionState_comma_error TLSHandshakeDone;
  funcstring_comma__slice_string WroteHeaderField;
  func WroteHeaders;
  func Wait100Continue;
  funcnet_http_httptrace_WroteRequestInfo WroteRequest;
};

/* 3661 */
struct go_shape__slice_net_http_keyValues
{
  net_http_keyValues *array;
  int len;
  int cap;
};

/* 3662 */
struct net_http_headerSorter
{
  _slice_net_http_keyValues kvs;
};

/* 3664 */
struct net_http_stringWriter
{
  io_Writer_0 w;
};

/* 3665 */
struct net_http_http2OpenStreamOptions
{
  uint32 PusherID;
};

/* 3666 */
struct net_http_http2write100ContinueHeadersFrame
{
  uint32 streamID;
};

/* 3667 */
struct net_http_http2writePingAck
{
  net_http_http2PingFrame *pf;
};

/* 3706 */
struct net_http_http2PingFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  uint8 Data[8];
};

/* 3668 */
struct net_http_http2handlerPanicRST
{
  uint32 StreamID;
};

/* 3669 */
struct net_http_http2writeGoAway
{
  uint32 maxStreamID;
  unsigned int code;
};

/* 3670 */
struct net_http_http2writeSettings
{
  net_http_http2Setting *array;
  int len;
  int cap;
};

/* 3672 */
struct net_http_http2timeTimer
{
  time_Timer_0 *Timer;
};

/* 3673 */
typedef runtime_iface net_http_I_4;

/* 3675 */
struct net_http_http2chunkWriter
{
  net_http_http2responseWriterState *rws;
};

/* 3676 */
struct net_http_http2writeWindowUpdate
{
  uint32 streamID;
  uint32 n;
};

/* 3677 */
struct __attribute__((aligned(4))) net_http_http2requestBody
{
  net_http_http2stream *stream;
  net_http_http2serverConn *conn;
  sync_Once_1 closeOnce;
  bool sawEOF;
  net_http_http2pipe *pipe;
  bool needsContinue;
};

/* 3678 */
struct net_http_http2requestParam
{
  string_0 method;
  string_0 scheme;
  string_0 authority;
  string_0 path;
  net_http_Header header;
};

/* 3679 */
struct net_http_http2writeSettingsAck
{
};

/* 3680 */
struct net_http_http2flushFrameWriter
{
};

/* 3681 */
struct net_http_http2writeResHeaders
{
  uint32 streamID;
  int httpResCode;
  net_http_Header h;
  _slice_string_0 trailers;
  bool endStream;
  string_0 date;
  string_0 contentType;
  string_0 contentLength;
};

/* 3682 */
struct net_http_http2writePushPromise
{
  uint32 streamID;
  string_0 method;
  net_url_URL *url;
  net_http_Header h;
  func_uint32_comma_error allocatePromisedID;
  uint32 promisedID;
};

/* 3683 */
struct __attribute__((aligned(4))) net_http_http2writeData
{
  uint32 streamID;
  _slice_uint8_0 p;
  bool endStream;
};

/* 3684 */
struct noalg_struct__F_uintptr_X0_chan_struct__
{
  uintptr F;
  chan_struct__0 X0;
};

/* 3685 */
struct net_http_http2writeQueuePool
{
  net_http_http2writeQueue **array;
  int len;
  int cap;
};

/* 3687 */
typedef hash<uint32_comma__ptr_net_http_http2writeQueue> *map_uint32__ptr_net_http_http2writeQueue;

/* 3686 */
struct net_http_http2roundRobinWriteScheduler
{
  net_http_http2writeQueue control;
  map_uint32__ptr_net_http_http2writeQueue streams;
  net_http_http2writeQueue *head;
  net_http_http2writeQueuePool queuePool;
};

/* 3688 */
typedef runtime_iface net_http_http2connectionStater;

/* 3690 */
typedef runtime_iface net_http_baseContexter_3;

/* 3691 */
struct __attribute__((aligned(4))) net_http_http2ServeConnOpts
{
  context_Context_0 Context;
  net_http_Server *BaseConfig;
  net_http_Handler Handler;
  net_http_Request *UpgradeRequest;
  _slice_uint8_0 Settings;
  bool SawClientPreface;
};

/* 3692 */
struct net_http_http2sorter
{
  _slice_string_0 v;
};

/* 3693 */
typedef runtime_iface net_http_http2headersOrContinuation;

/* 3694 */
struct __attribute__((aligned(4))) net_http_http2MetaHeadersFrame
{
  net_http_http2HeadersFrame *http2HeadersFrame;
  _slice_vendor_golang_org_x_net_http2_hpack_HeaderField Fields;
  bool Truncated;
};

/* 3701 */
struct __attribute__((aligned(4))) net_http_http2PriorityParam
{
  uint32 StreamDep;
  bool Exclusive;
  uint8 Weight;
};

/* 3702 */
struct net_http_http2HeadersFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  net_http_http2PriorityParam Priority;
  _slice_uint8_0 headerFragBuf;
};

/* 3695 */
struct __attribute__((aligned(4))) net_http_http2PushPromiseParam
{
  uint32 StreamID;
  uint32 PromiseID;
  _slice_uint8_0 BlockFragment;
  bool EndHeaders;
  uint8 PadLength;
};

/* 3696 */
struct net_http_http2PushPromiseFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  uint32 PromiseID;
  _slice_uint8_0 headerFragBuf;
};

/* 3697 */
struct net_http_http2ContinuationFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  _slice_uint8_0 headerFragBuf;
};

/* 3698 */
struct net_http_http2RSTStreamFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  unsigned int ErrCode;
};

/* 3699 */
struct net_http_http2PriorityFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  net_http_http2PriorityParam http2PriorityParam;
};

/* 3700 */
struct net_http_http2HeadersFrameParam
{
  uint32 StreamID;
  _slice_uint8_0 BlockFragment;
  bool EndStream;
  bool EndHeaders;
  uint8 PadLength;
  net_http_http2PriorityParam Priority;
};

/* 3703 */
struct net_http_http2WindowUpdateFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  uint32 Increment;
};

/* 3704 */
struct net_http_http2UnknownFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  _slice_uint8_0 p;
};

/* 3705 */
struct net_http_http2GoAwayFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  uint32 LastStreamID;
  unsigned int ErrCode;
  _slice_uint8_0 debugData;
};

/* 3707 */
struct noalg_map_bucket_net_http_http2SettingID_bool
{
  uint8 topbits[8];
  noalg__8_net_http_http2SettingID keys;
  noalg__8_bool elems;
  uintptr overflow;
};

/* 3709 */
struct net_http_http2SettingsFrame
{
  net_http_http2FrameHeader http2FrameHeader;
  _slice_uint8_0 p;
};

/* 3710 */
struct net_http_http2connError
{
  unsigned int Code;
  string_0 Reason;
};

/* 3711 */
struct net_http_http2goAwayFlowError
{
};

/* 3712 */
struct net_http_http2StreamError
{
  uint32 StreamID;
  unsigned int Code;
  error_0 Cause;
};

/* 3713 */
struct net_http_http2dataBuffer
{
  _slice__slice_uint8_0 chunks;
  int r;
  int w;
  int size;
  int64 expected;
};

/* 3715 */
typedef runtime_iface net_http_FileSystem;

/* 3714 */
struct net_http_fileHandler
{
  net_http_FileSystem root;
};

/* 3716 */
typedef runtime_iface io_ReadSeeker_0;

/* 3718 */
typedef runtime_iface io_fs_ReadDirFile;

/* 3719 */
typedef runtime_iface net_http_anyDirs;

/* 3720 */
struct net_http_dirEntryDirs
{
  io_fs_DirEntry *array;
  int len;
  int cap;
};

/* 3721 */
struct net_http_fileInfoDirs
{
  io_fs_FileInfo *array;
  int len;
  int cap;
};

/* 3722 */
typedef runtime_iface net_http_File;

/* 3761 */
struct vendor_golang_org_x_net_http_httpproxy_cidrMatch
{
  net_IPNet_0 *cidr;
};

/* 3762 */
struct vendor_golang_org_x_net_http_httpproxy_ipMatch
{
  net_IP_1 ip;
  string_0 port;
};

/* 3763 */
struct __attribute__((aligned(4))) vendor_golang_org_x_net_http_httpproxy_domainMatch
{
  string_0 host;
  string_0 port;
  bool matchHost;
};

/* 3764 */
struct vendor_golang_org_x_net_http_httpproxy_allMatch
{
};

/* 3767 */
struct __attribute__((aligned(4))) vendor_golang_org_x_net_http_httpproxy_Config
{
  string_0 HTTPProxy;
  string_0 HTTPSProxy;
  string_0 NoProxy;
  bool CGI;
};

/* 3766 */
struct vendor_golang_org_x_net_http_httpproxy_config
{
  vendor_golang_org_x_net_http_httpproxy_Config Config;
  net_url_URL *httpsProxy;
  net_url_URL *httpProxy;
  _slice_vendor_golang_org_x_net_http_httpproxy_matcher ipMatchers;
  _slice_vendor_golang_org_x_net_http_httpproxy_matcher domainMatchers;
};

/* 3768 */
struct net_http_internal_chunkedReader
{
  bufio_Reader_0 *r;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 n;
  error_0 err;
  uint8 buf[2];
  bool checkEnd;
  int64 excess;
};

/* 3769 */
struct __attribute__((aligned(4))) vendor_golang_org_x_net_http2_hpack_node
{
  vendor_golang_org_x_net_http2_hpack_node *(*children)[256];
  uint8 codeLen;
  uint8 sym;
};

/* 3770 */
struct vendor_golang_org_x_net_http2_hpack_undecodedString
{
  bool isHuff;
  _slice_uint8_0 b;
};

/* 3772 */
struct vendor_golang_org_x_net_http2_hpack_DecodingError
{
  error_0 Err;
};

/* 3781 */
struct vendor_golang_org_x_net_idna_sparseBlocks
{
  _slice_vendor_golang_org_x_net_idna_valueRange values;
  _slice_uint16_0 offset;
};

/* 3782 */
struct vendor_golang_org_x_net_idna_labelIter
{
  string_0 orig;
  _slice_string_0 slice;
  int curStart;
  int curEnd;
  int i;
};

/* 3786 */
struct vendor_golang_org_x_net_idna_labelError
{
  string_0 label;
  string_0 code_;
};

/* 3788 */
struct vendor_golang_org_x_text_unicode_norm_sparseBlocks
{
  _slice_vendor_golang_org_x_text_unicode_norm_valueRange values;
  _slice_uint16_0 offset;
};

/* 3789 */
struct vendor_golang_org_x_text_unicode_norm_nfkcTrie
{
};

/* 3790 */
struct vendor_golang_org_x_text_unicode_norm_nfcTrie
{
};

/* 3796 */
struct vendor_golang_org_x_text_secure_bidirule_ruleTransition
{
  unsigned __int8 next;
  uint16 mask;
};

/* 3797 */
struct vendor_golang_org_x_text_secure_bidirule_Transformer
{
  unsigned __int8 state;
  bool hasRTL;
  uint16 seen;
};

/* 3798 */
struct vendor_golang_org_x_text_unicode_bidi_bidiTrie
{
};

/* 3799 */
struct vendor_golang_org_x_text_unicode_bidi_Properties
{
  uint8 entry;
  uint8 last;
};

/* 3800 */
struct mime_multipart_part
{
  mime_multipart_Writer *mw;
  bool closed;
  error_0 we;
};

/* 3801 */
struct mime_multipart_Writer
{
  io_Writer_0 w;
  string_0 boundary;
  mime_multipart_part *lastpart;
};

/* 3804 */
struct net_textproto_dotReader
{
  net_textproto_Reader *r;
  int state;
};

/* 3805 */
struct net_textproto_Reader
{
  bufio_Reader_0 *R;
  net_textproto_dotReader *dot;
  _slice_uint8_0 buf;
};

/* 3806 */
struct sync_atomic_Pointer_go_shape_string_
{
  void *v;
};

/* 3810 */
struct crypto_tls_ecdheKeyAgreement
{
  uint16 version;
  bool isRSA;
  crypto_ecdh_PrivateKey *key;
  crypto_tls_clientKeyExchangeMsg *ckx;
  _slice_uint8_0 preMasterSecret;
};

/* 4125 */
struct crypto_ecdh_PrivateKey
{
  crypto_ecdh_Curve curve;
  _slice_uint8_0 privateKey;
  crypto_internal_boring_PrivateKeyECDH *boring;
  crypto_ecdh_PublicKey *publicKey;
  sync_Once_1 publicKeyOnce;
};

/* 3827 */
struct crypto_tls_clientKeyExchangeMsg
{
  _slice_uint8_0 ciphertext;
};

/* 4144 */
struct crypto_internal_boring_PrivateKeyECDH
{
};

/* 4128 */
struct crypto_ecdh_PublicKey
{
  crypto_ecdh_Curve curve;
  _slice_uint8_0 publicKey;
  crypto_internal_boring_PublicKeyECDH *boring;
};

/* 4145 */
struct crypto_internal_boring_PublicKeyECDH
{
};

/* 3811 */
typedef runtime_iface crypto_tls_binaryMarshaler_1;

/* 3812 */
typedef runtime_iface crypto_tls_handshakeMessageWithOriginalBytes;

/* 3813 */
struct crypto_tls_newSessionTicketMsg
{
  _slice_uint8_0 ticket;
};

/* 3814 */
struct crypto_tls_endOfEarlyDataMsg
{
};

/* 3815 */
struct go_shape__slice_crypto_tls_pskIdentity
{
  crypto_tls_pskIdentity *array;
  int len;
  int cap;
};

/* 3817 */
struct go_shape__slice_crypto_tls_SignatureScheme
{
  unsigned __int16 *array;
  int len;
  int cap;
};

/* 3818 */
struct noalg_map_bucket_uint16_bool
{
  uint8 topbits[8];
  noalg__8_uint16 keys;
  noalg__8_bool elems;
  uintptr overflow;
};

/* 3819 */
typedef runtime_iface vendor_golang_org_x_crypto_cryptobyte_MarshalingValue;

/* 3820 */
struct crypto_tls_newSessionTicketMsgTLS13
{
  uint32 lifetime;
  uint32 ageAdd;
  _slice_uint8_0 nonce;
  _slice_uint8_0 label;
  uint32 maxEarlyData;
};

/* 3821 */
struct __attribute__((aligned(4))) crypto_tls_certificateMsgTLS13
{
  crypto_tls_Certificate certificate;
  bool ocspStapling;
  bool scts;
};

/* 3822 */
struct crypto_tls_encryptedExtensionsMsg
{
  string_0 alpnProtocol;
  _slice_uint8_0 quicTransportParameters;
  bool earlyData;
  _slice_uint8_0 echRetryConfigs;
};

/* 3823 */
struct crypto_tls_finishedMsg
{
  _slice_uint8_0 verifyData;
};

/* 3824 */
typedef runtime_iface crypto_SignerOpts_0;

/* 3825 */
struct crypto_tls_certificateVerifyMsg
{
  bool hasSignatureAlgorithm;
  unsigned __int16 signatureAlgorithm;
  _slice_uint8_0 signature;
};

/* 3826 */
struct crypto_tls_serverKeyExchangeMsg
{
  _slice_uint8_0 key;
};

/* 3828 */
struct crypto_tls_serverHelloDoneMsg
{
};

/* 3829 */
struct crypto_tls_certificateStatusMsg
{
  _slice_uint8_0 response;
};

/* 3830 */
struct crypto_tls_certificateRequestMsg
{
  bool hasSignatureAlgorithm;
  _slice_uint8_0 certificateTypes;
  _slice_crypto_tls_SignatureScheme supportedSignatureAlgorithms;
  _slice__slice_uint8_0 certificateAuthorities;
};

/* 3831 */
struct crypto_tls_certificateMsg
{
  _slice__slice_uint8_0 certificates;
};

/* 3832 */
struct crypto_tls_ClientSessionState
{
  crypto_tls_SessionState *session;
};

/* 3833 */
struct crypto_tls_finishedHash
{
  hash_Hash_0 client;
  hash_Hash_0 server;
  hash_Hash_0 clientMD5;
  hash_Hash_0 serverMD5;
  _slice_uint8_0 buffer;
  uint16 version;
  func_slice_uint8_comma__slice_uint8_comma__slice_uint8_comma__slice_uint8 prf;
};

/* 3834 */
struct crypto_tls_clientHandshakeState
{
  crypto_tls_Conn *c;
  context_Context_0 ctx;
  crypto_tls_serverHelloMsg *serverHello;
  crypto_tls_clientHelloMsg *hello;
  crypto_tls_cipherSuite *suite;
  crypto_tls_finishedHash finishedHash;
  _slice_uint8_0 masterSecret;
  crypto_tls_SessionState *session;
  _slice_uint8_0 ticket;
};

/* 3836 */
struct __attribute__((aligned(4))) crypto_tls_serverHelloMsg
{
  _slice_uint8_0 original;
  uint16 vers;
  _slice_uint8_0 random;
  _slice_uint8_0 sessionId;
  uint16 cipherSuite;
  uint8 compressionMethod;
  bool ocspStapling;
  bool ticketSupported;
  bool secureRenegotiationSupported;
  _slice_uint8_0 secureRenegotiation;
  bool extendedMasterSecret;
  string_0 alpnProtocol;
  _slice__slice_uint8_0 scts;
  uint16 supportedVersion;
  crypto_tls_keyShare serverShare;
  bool selectedIdentityPresent;
  uint16 selectedIdentity;
  _slice_uint8_0 supportedPoints;
  _slice_uint8_0 encryptedClientHello;
  bool serverNameAck;
  _slice_uint8_0 cookie;
  unsigned __int16 selectedGroup;
};

/* 3844 */
struct crypto_tls_clientHelloMsg
{
  _slice_uint8_0 original;
  uint16 vers;
  _slice_uint8_0 random;
  _slice_uint8_0 sessionId;
  _slice_uint16_0 cipherSuites;
  _slice_uint8_0 compressionMethods;
  string_0 serverName;
  bool ocspStapling;
  _slice_crypto_tls_CurveID supportedCurves;
  _slice_uint8_0 supportedPoints;
  bool ticketSupported;
  _slice_uint8_0 sessionTicket;
  _slice_crypto_tls_SignatureScheme supportedSignatureAlgorithms;
  _slice_crypto_tls_SignatureScheme supportedSignatureAlgorithmsCert;
  bool secureRenegotiationSupported;
  _slice_uint8_0 secureRenegotiation;
  bool extendedMasterSecret;
  _slice_string_0 alpnProtocols;
  bool scts;
  _slice_uint16_0 supportedVersions;
  _slice_uint8_0 cookie;
  _slice_crypto_tls_keyShare keyShares;
  bool earlyData;
  _slice_uint8_0 pskModes;
  _slice_crypto_tls_pskIdentity pskIdentities;
  _slice__slice_uint8_0 pskBinders;
  _slice_uint8_0 quicTransportParameters;
  _slice_uint8_0 encryptedClientHello;
};

/* 3838 */
struct crypto_tls_cipherSuite
{
  uint16 id;
  int keyLen;
  int macLen;
  int ivLen;
  funcuint16_crypto_tls_keyAgreement ka;
  int flags;
  func_slice_uint8_comma__slice_uint8_comma_bool_interface_ cipher;
  func_slice_uint8_hash_Hash mac;
  func_slice_uint8_comma__slice_uint8_crypto_tls_aead aead;
};

/* 3835 */
struct crypto_tls_certificateRequestMsgTLS13
{
  bool ocspStapling;
  bool scts;
  _slice_crypto_tls_SignatureScheme supportedSignatureAlgorithms;
  _slice_crypto_tls_SignatureScheme supportedSignatureAlgorithmsCert;
  _slice__slice_uint8_0 certificateAuthorities;
};

/* 3837 */
struct crypto_tls_clientHandshakeStateTLS13
{
  crypto_tls_Conn *c;
  context_Context_0 ctx;
  crypto_tls_serverHelloMsg *serverHello;
  crypto_tls_clientHelloMsg *hello;
  crypto_tls_keySharePrivateKeys *keyShareKeys;
  crypto_tls_SessionState *session;
  _slice_uint8_0 earlySecret;
  _slice_uint8_0 binderKey;
  crypto_tls_certificateRequestMsgTLS13 *certReq;
  bool usingPSK;
  bool sentDummyCCS;
  crypto_tls_cipherSuiteTLS13 *suite;
  hash_Hash_0 transcript;
  _slice_uint8_0 masterSecret;
  _slice_uint8_0 trafficSecret;
  crypto_tls_echContext *echContext;
};

/* 3839 */
struct crypto_tls_keySharePrivateKeys
{
  unsigned __int16 curveID;
  crypto_ecdh_PrivateKey *ecdhe;
  crypto_internal_mlkem768_DecapsulationKey *kyber;
};

/* 3856 */
struct crypto_tls_cipherSuiteTLS13
{
  uint16 id;
  int keyLen;
  func_slice_uint8_comma__slice_uint8_crypto_tls_aead aead;
  unsigned int hash;
};

/* 3841 */
struct __attribute__((aligned(4))) crypto_tls_echContext
{
  crypto_tls_echConfig *config;
  crypto_internal_hpke_Sender *hpkeContext;
  _slice_uint8_0 encapsulatedKey;
  crypto_tls_clientHelloMsg *innerHello;
  hash_Hash_0 innerTranscript;
  uint16 kdfID;
  uint16 aeadID;
  bool echRejected;
};

/* 3885 */
struct crypto_internal_mlkem768_encryptionKey
{
  crypto_internal_mlkem768_nttElement t[3];
  crypto_internal_mlkem768_nttElement A[9];
};

/* 3884 */
struct crypto_internal_mlkem768_decryptionKey
{
  crypto_internal_mlkem768_nttElement s[3];
};

/* 3886 */
struct crypto_internal_mlkem768_DecapsulationKey
{
  uint8 dk[2400];
  crypto_internal_mlkem768_encryptionKey encryptionKey;
  crypto_internal_mlkem768_decryptionKey decryptionKey;
};

/* 3890 */
struct crypto_internal_hpke_uint128
{
  uint64 hi;
  uint64 lo;
};

/* 3891 */
struct crypto_internal_hpke_Sender
{
  crypto_cipher_AEAD aead;
  crypto_internal_hpke_dhKEM *kem;
  _slice_uint8_0 sharedSecret;
  _slice_uint8_0 suiteID;
  _slice_uint8_0 key;
  _slice_uint8_0 baseNonce;
  _slice_uint8_0 exporterSecret;
  crypto_internal_hpke_uint128 seqNum;
};

/* 3892 */
struct __attribute__((aligned(4))) crypto_internal_hpke_dhKEM
{
  crypto_ecdh_Curve dh;
  crypto_internal_hpke_hkdfKDF kdf;
  _slice_uint8_0 suiteID;
  uint16 nSecret;
};

/* 3840 */
struct crypto_tls_ECHRejectionError
{
  _slice_uint8_0 RetryConfigList;
};

/* 3848 */
struct crypto_tls_keyUpdateMsg
{
  bool updateRequested;
};

/* 3849 */
struct crypto_tls_helloRequestMsg
{
};

/* 3850 */
typedef runtime_iface crypto_tls_transcriptHash;

/* 3851 */
typedef runtime_iface crypto_tls_handshakeMessage;

/* 3852 */
struct crypto_tls_atLeastReader
{
  io_Reader_0 R;
  int64 N;
};

/* 3853 */
struct crypto_tls_RecordHeaderError
{
  string_0 Msg;
  uint8 RecordHeader[5];
  net_Conn_0 Conn;
};

/* 3854 */
typedef runtime_iface crypto_cipher_Stream;

/* 3855 */
typedef runtime_iface crypto_tls_cbcMode;

/* 3961 */
typedef runtime_iface net_Error_0;

/* 4747 */
typedef net_Error_0 net_Error_1;

/* 3857 */
struct crypto_tls_permanentError
{
  net_Error_1 err;
};

/* 3862 */
struct crypto_tls_CertificateVerificationError
{
  _slice__ptr_crypto_x509_Certificate UnverifiedCertificates;
  error_0 Err;
};

/* 3871 */
struct crypto_tls_rsaKeyAgreement
{
};

/* 3874 */
struct crypto_tls_xorNonceAEAD
{
  uint8 nonceMask[12];
  crypto_cipher_AEAD aead;
};

/* 3875 */
struct crypto_tls_prefixNonceAEAD
{
  uint8 nonce[12];
  crypto_cipher_AEAD aead;
};

/* 3876 */
typedef runtime_iface crypto_tls_constantTimeHash;

/* 3877 */
struct crypto_tls_cthWrapper
{
  crypto_tls_constantTimeHash h;
};

/* 4391 */
struct sync_atomic_Int64
{
  int64 v;
};

/* 3878 */
struct __attribute__((aligned(8))) crypto_tls_cacheEntry
{
  sync_atomic_Int64 refs;
  crypto_x509_Certificate *cert;
};

/* 4385 */
struct sync_atomic_Pointer_sync_readOnly_
{
  void *v;
};

/* 4386 */
struct sync_Map_0
{
  sync_Mutex mu;
  sync_atomic_Pointer_sync_readOnly_ read;
  map_interface___ptr_sync_entry_0 dirty;
  int misses;
};

/* 4733 */
typedef sync_Map_0 sync_Map_1;

/* 3879 */
struct crypto_tls_certCache
{
  sync_Map_1 Map;
};

/* 3881 */
typedef runtime_iface crypto_Signer_0;

/* 3887 */
struct vendor_golang_org_x_crypto_sha3_state
{
  uint64 a[25];
  int rate;
  uint8 dsbyte;
  int i;
  int n;
  uint8 storage[168];
  int outputLen;
  int state;
};

/* 3888 */
struct vendor_golang_org_x_sys_cpu_littleEndian
{
};

/* 3889 */
struct __attribute__((aligned(2))) vendor_golang_org_x_sys_cpu_option
{
  string_0 Name;
  bool *Feature;
  bool Specified;
  bool Enable;
  bool Required;
};

/* 3895 */
struct vendor_golang_org_x_crypto_hkdf_hkdf
{
  hash_Hash_0 expander;
  int size;
  _slice_uint8_0 info;
  uint8 counter;
  _slice_uint8_0 prev;
  _slice_uint8_0 buf;
};

/* 3896 */
struct vendor_golang_org_x_crypto_chacha20poly1305_chacha20poly1305
{
  uint8 key[32];
};

/* 3897 */
struct vendor_golang_org_x_crypto_internal_poly1305_uint128
{
  uint64 lo;
  uint64 hi;
};

/* 3898 */
struct vendor_golang_org_x_crypto_internal_poly1305_macState
{
  uint64 h[3];
  uint64 r[2];
  uint64 s[2];
};

/* 3899 */
struct __attribute__((packed)) __attribute__((aligned(4))) vendor_golang_org_x_crypto_internal_poly1305_macGeneric
{
  vendor_golang_org_x_crypto_internal_poly1305_macState macState;
  uint8 buffer[16];
  int offset;
};

/* 3900 */
struct vendor_golang_org_x_crypto_internal_poly1305_mac
{
  vendor_golang_org_x_crypto_internal_poly1305_macGeneric macGeneric;
};

/* 3901 */
struct __attribute__((aligned(4))) vendor_golang_org_x_crypto_internal_poly1305_MAC
{
  vendor_golang_org_x_crypto_internal_poly1305_mac mac;
  bool finalized;
};

/* 3902 */
struct vendor_golang_org_x_crypto_chacha20_Cipher
{
  uint32 key[8];
  uint32 counter;
  uint32 nonce[3];
  uint8 buf[64];
  int len;
  bool overflow;
  bool precompDone;
  uint32 p1;
  uint32 p5;
  uint32 p9;
  uint32 p13;
  uint32 p2;
  uint32 p6;
  uint32 p10;
  uint32 p14;
  uint32 p3;
  uint32 p7;
  uint32 p11;
  uint32 p15;
};

/* 3903 */
struct __attribute__((aligned(4))) crypto_rc4_Cipher
{
  uint32 s[256];
  uint8 i;
  uint8 j;
};

/* 3904 */
typedef runtime_iface crypto_hmac_marshalable;

/* 3905 */
struct __attribute__((aligned(4))) crypto_hmac_hmac
{
  _slice_uint8_0 opad;
  _slice_uint8_0 ipad;
  hash_Hash_0 outer;
  hash_Hash_0 inner;
  bool marshaled;
};

/* 3906 */
struct crypto_x509_ConstraintViolationError
{
};

/* 3920 */
struct crypto_x509_pkix_AlgorithmIdentifier
{
  encoding_asn1_ObjectIdentifier Algorithm;
  encoding_asn1_RawValue Parameters;
};

/* 3907 */
struct crypto_x509_pssParameters
{
  crypto_x509_pkix_AlgorithmIdentifier Hash;
  crypto_x509_pkix_AlgorithmIdentifier MGF;
  int SaltLength;
  int TrailerField;
};

/* 3908 */
struct crypto_x509_VerifyOptions
{
  string_0 DNSName;
  crypto_x509_CertPool *Intermediates;
  crypto_x509_CertPool *Roots;
  time_Time_1 CurrentTime;
  _slice_crypto_x509_ExtKeyUsage KeyUsages;
  int MaxConstraintComparisions;
};

/* 3909 */
struct crypto_x509_UnhandledCriticalExtension
{
};

/* 3910 */
struct crypto_x509_rfc2821Mailbox
{
  string_0 local;
  string_0 domain;
};

/* 3911 */
struct crypto_x509_SystemRootsError
{
  error_0 Err;
};

/* 3912 */
struct crypto_x509_UnknownAuthorityError
{
  crypto_x509_Certificate *Cert;
  error_0 hintErr;
  crypto_x509_Certificate *hintCert;
};

/* 3913 */
struct crypto_x509_HostnameError
{
  crypto_x509_Certificate *Certificate;
  string_0 Host;
};

/* 3914 */
struct crypto_x509_CertificateInvalidError
{
  crypto_x509_Certificate *Cert;
  int Reason;
  string_0 Detail;
};

/* 3915 */
struct crypto_dsa_Parameters
{
  math_big_Int *P;
  math_big_Int *Q;
  math_big_Int *G;
};

/* 3916 */
struct crypto_dsa_PublicKey
{
  crypto_dsa_Parameters Parameters;
  math_big_Int *Y;
};

/* 3917 */
struct encoding_asn1_RawContent
{
  uint8 *array;
  int len;
  int cap;
};

/* 4100 */
struct encoding_asn1_BitString
{
  _slice_uint8_0 Bytes;
  int BitLength;
};

/* 3918 */
struct crypto_x509_publicKeyInfo
{
  encoding_asn1_RawContent Raw;
  crypto_x509_pkix_AlgorithmIdentifier Algorithm;
  encoding_asn1_BitString PublicKey;
};

/* 3919 */
struct crypto_x509_pkcs1PublicKey
{
  math_big_Int *N;
  int E;
};

/* 3927 */
struct crypto_sha1_digest
{
  uint32 h[5];
  uint8 x[64];
  int nx;
  uint64 len;
};

/* 3928 */
struct __attribute__((packed)) __attribute__((aligned(4))) crypto_md5_digest
{
  uint32 s[4];
  uint8 x[64];
  int nx;
  uint64 len;
};

/* 3930 */
struct crypto_des_desCipher
{
  uint64 subkeys[16];
};

/* 3929 */
struct crypto_des_tripleDESCipher
{
  crypto_des_desCipher cipher1;
  crypto_des_desCipher cipher2;
  crypto_des_desCipher cipher3;
};

/* 3933 */
typedef runtime_iface interface__Temporary_bool_;

/* 3934 */
struct net_url_Error
{
  string_0 Op;
  string_0 URL;
  error_0 Err;
};

/* 3935 */
struct net_UnixListener_0
{
  net_netFD_0 *fd;
  string_0 path;
  bool unlink;
  sync_Once_1 unlinkOnce;
};

/* 3936 */
struct net_UnixConn_0
{
  net_conn_1 conn;
};

/* 3938 */
struct net_rawConn_0
{
  net_netFD_0 *fd;
};

/* 4728 */
typedef net_rawConn_0 net_rawConn_1;

/* 3937 */
struct net_rawListener_0
{
  net_rawConn_1 rawConn;
};

/* 3939 */
struct net_nsswitchConfig
{
  sync_Once_1 initOnce;
  chan_struct__0 ch;
  time_Time_1 lastChecked;
  sync_Mutex mu;
  net_nssConf_0 *nssConf;
};

/* 3981 */
struct net_nssConf_0
{
  time_Time_1 mtime;
  error_0 err;
  map_string__slice_net_nssSource_0 sources;
};

/* 3940 */
struct net_tcpConnWithoutWriteTo_0
{
  net_TCPConn_0 *TCPConn;
};

/* 3941 */
struct net_tcpConnWithoutReadFrom_0
{
  net_TCPConn_0 *TCPConn;
};

/* 3942 */
struct net_temporaryError_0
{
  string_0 s;
};

/* 3943 */
struct net_notFoundError_0
{
  string_0 s;
};

/* 3944 */
struct net_ParseError_0
{
  string_0 Type;
  string_0 Text;
};

/* 3945 */
typedef runtime_iface net_temporary_0;

/* 3946 */
typedef runtime_iface net_timeout_0;

/* 3947 */
struct net_OpError_0
{
  string_0 Op;
  string_0 Net;
  net_Addr_0 Source;
  net_Addr_0 Addr;
  error_0 Err;
};

/* 3968 */
struct __attribute__((aligned(4))) net_ListenConfig_0
{
  funcstring_comma_string_comma_syscall_RawConn_error Control;
  __attribute__((packed)) __attribute__((aligned(1))) __int64 KeepAlive;
  net_KeepAliveConfig KeepAliveConfig;
  unsigned __int8 mptcpStatus;
};

/* 4756 */
typedef net_ListenConfig_0 net_ListenConfig_1;

/* 3948 */
struct net_TCPListener_0
{
  net_netFD_0 *fd;
  net_ListenConfig_1 lc;
};

/* 3949 */
struct internal_nettrace_LookupIPAltResolverKey
{
};

/* 3950 */
struct net_onlyValuesCtx_0
{
  context_Context_0 Context;
  context_Context_0 lookupValues;
};

/* 3951 */
typedef runtime_iface net_sockaddr_0;

/* 3952 */
struct __attribute__((aligned(2))) net_ipStackCapabilities
{
  sync_Once_1 Once;
  bool ipv4Enabled;
  bool ipv6Enabled;
  bool ipv4MappedIPv6Enabled;
};

/* 3953 */
struct net_IPConn_0
{
  net_conn_1 conn;
};

/* 3955 */
struct syscall_IfInfomsg
{
  uint8 Family;
  uint8 X__ifi_pad;
  uint16 Type;
  int32 Index;
  uint32 Flags;
  uint32 Change;
};

/* 3956 */
struct net_ipv6ZoneCache
{
  sync_RWMutex_1 RWMutex;
  time_Time_1 lastFetched;
  map_string_int_0 toIndex;
  map_int_string_0 toName;
};

/* 3960 */
struct __attribute__((aligned(4))) net_file_0
{
  os_File_0 *file;
  _slice_uint8_0 data;
  bool atEOF;
};

/* 3963 */
struct sync_atomic_Pointer_net_dnsConfig_
{
  void *v;
};

/* 3964 */
struct net_resolverConfig
{
  sync_Once_1 initOnce;
  chan_struct__0 ch;
  time_Time_1 lastChecked;
  sync_atomic_Pointer_net_dnsConfig_ dnsConfig;
};

/* 3965 */
struct __attribute__((packed)) __attribute__((aligned(4))) go_shape_struct__net_servers__slice_string_net_search__slice_string_net_ndots_int_net_timeout_time_Duration_net_attempts_int_net_rotate_bool_net_unknownOpt_bool_net_lookup__slice_string_net_err_error_net_mtime_time_Time_net_soffset_uint32_net_singleRequest_bool_net_useTCP_bool_net_trustAD_bool_net_noReload_bool_
{
  _slice_string_0 servers;
  _slice_string_0 search;
  int ndots;
  __int64 timeout;
  int attempts;
  bool rotate;
  bool unknownOpt;
  __attribute__((aligned(4))) _slice_string_0 lookup;
  error_0 err;
  time_Time_1 mtime;
  uint32 soffset;
  bool singleRequest;
  bool useTCP;
  bool trustAD;
  bool noReload;
};

/* 3966 */
struct sync_atomic_Pointer_go_shape_struct__net_servers__slice_string_net_search__slice_string_net_ndots_int_net_timeout_time_Duration_net_attempts_int_net_rotate_bool_net_unknownOpt_bool_net_lookup__slice_string_net_err_error_net_mtime_time_Time_net_soffset_uint32_net_singleRequest_bool_net_useTCP_bool_net_trustAD_bool_net_noReload_bool__
{
  void *v;
};

/* 3967 */
struct __attribute__((aligned(2))) net_DNSError_0
{
  error_0 UnwrapErr;
  string_0 Err;
  string_0 Name;
  string_0 Server;
  bool IsTimeout;
  bool IsTemporary;
  bool IsNotFound;
};

/* 3969 */
struct net_sysListener
{
  net_ListenConfig_1 ListenConfig;
  string_0 network;
  string_0 address;
};

/* 3971 */
struct net_AddrError_0
{
  string_0 Err;
  string_0 Addr;
};

/* 3973 */
struct internal_nettrace_Trace
{
  funcstring DNSStart;
  func_slice_interface__comma_bool_comma_error DNSDone;
  funcstring_comma_string ConnectStart;
  funcstring_comma_string_comma_error ConnectDone;
};

/* 3976 */
struct internal_nettrace_TraceKey
{
};

/* 3979 */
struct net_UnixAddr_0
{
  string_0 Name;
  string_0 Net;
};

/* 3987 */
struct net_conf
{
  bool netGo;
  bool netCgo;
  int dnsDebugLevel;
  bool preferCgo;
  string_0 goos;
  int mdnsTest;
};

/* 3988 */
struct net_policyTable
{
  net_policyTableEntry *array;
  int len;
  int cap;
};

/* 4032 */
struct __attribute__((aligned(4))) net_netip_Prefix
{
  net_netip_Addr ip;
  uint8 bitsPlusOne;
};

/* 3991 */
struct __attribute__((aligned(4))) net_policyTableEntry
{
  net_netip_Prefix Prefix;
  uint8 Precedence;
  uint8 Label;
};

/* 3990 */
struct _slice_net_ipAttr_0
{
  net_ipAttr *array;
  int len;
  int cap;
};

/* 3989 */
struct net_byRFC6724_0
{
  _slice_net_IPAddr_0 addrs;
  _slice_net_ipAttr_0 addrAttr;
  _slice_net_netip_Addr srcs;
  _slice_net_ipAttr_0 srcAttr;
};

/* 3993 */
struct net_UDPConn_0
{
  net_conn_1 conn;
};

/* 3994 */
struct net_UDPAddr_0
{
  net_IP_1 IP;
  int Port;
  string_0 Zone;
};

/* 4005 */
struct vendor_golang_org_x_net_dns_dnsmessage_OPTResource
{
  _slice_vendor_golang_org_x_net_dns_dnsmessage_Option Options;
};

/* 4006 */
struct vendor_golang_org_x_net_dns_dnsmessage_Builder
{
  _slice_uint8_0 msg;
  unsigned __int8 section;
  vendor_golang_org_x_net_dns_dnsmessage_header header;
  int start;
  map_string_uint16_0 compression;
};

/* 4007 */
struct vendor_golang_org_x_net_dns_dnsmessage_AAAAResource
{
  uint8 AAAA[16];
};

/* 4008 */
struct vendor_golang_org_x_net_dns_dnsmessage_AResource
{
  uint8 A[4];
};

/* 4011 */
struct vendor_golang_org_x_net_dns_dnsmessage_Name
{
  uint8 Data[255];
  uint8 Length;
};

/* 4009 */
struct vendor_golang_org_x_net_dns_dnsmessage_CNAMEResource
{
  vendor_golang_org_x_net_dns_dnsmessage_Name CNAME;
};

/* 4010 */
struct vendor_golang_org_x_net_dns_dnsmessage_Question
{
  vendor_golang_org_x_net_dns_dnsmessage_Name Name;
  unsigned __int16 Type;
  unsigned __int16 Class;
};

/* 4012 */
struct __attribute__((aligned(4))) vendor_golang_org_x_net_dns_dnsmessage_ResourceHeader
{
  vendor_golang_org_x_net_dns_dnsmessage_Name Name;
  unsigned __int16 Type;
  unsigned __int16 Class;
  uint32 TTL;
  uint16 Length;
};

/* 4014 */
struct vendor_golang_org_x_net_dns_dnsmessage_Header
{
  uint16 ID;
  bool Response;
  unsigned __int16 OpCode;
  bool Authoritative;
  bool Truncated;
  bool RecursionDesired;
  bool RecursionAvailable;
  bool AuthenticData;
  bool CheckingDisabled;
  unsigned __int16 RCode;
};

/* 4016 */
struct vendor_golang_org_x_net_dns_dnsmessage_nestedError
{
  string_0 s;
  error_0 err;
};

/* 4017 */
struct internal_weak_Pointer_net_netip_addrDetail_
{
  void *u;
};

/* 4018 */
struct sync_atomic_Pointer_internal_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___
{
  void *v;
};

/* 4021 */
struct internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  bool isEntry;
};

/* 4019 */
struct internal_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ node;
  sync_atomic_Pointer_internal_concurrent_entry_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___ overflow;
  net_netip_addrDetail key;
  internal_weak_Pointer_net_netip_addrDetail_ value;
};

/* 4020 */
struct sync_atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___
{
  void *v;
};

/* 4022 */
struct internal_concurrent_indirect_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__
{
  internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ node;
  sync_atomic_Bool dead;
  sync_Mutex mu;
  internal_concurrent_indirect_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail__ *parent;
  sync_atomic_Pointer_internal_concurrent_node_net_netip_addrDetail_comma_internal_weak_Pointer_net_netip_addrDetail___ children[16];
};

/* 4025 */
struct go_shape_ea0710d912261ce6c8a6c91ea69f308f3d93959fe0c1ec034c5de474e276239b
{
  internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ node;
  sync_atomic_Pointer_internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___ overflow;
  go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 key;
  go_shape_struct__internal_weak_u_unsafe_Pointer_ value;
};

/* 4026 */
struct sync_atomic_Pointer_go_shape_ea0710d912261ce6c8a6c91ea69f308f3d93959fe0c1ec034c5de474e276239b_
{
  void *v;
};

/* 4035 */
struct net_netip_parseAddrError
{
  string_0 in;
  string_0 msg;
  string_0 at;
};

/* 4040 */
struct sync_atomic_Pointer_internal_concurrent_entry__ptr_internal_abi_Type_comma_interface___
{
  void *v;
};

/* 4041 */
struct internal_concurrent_entry__ptr_internal_abi_Type_comma_interface__
{
  internal_concurrent_node__ptr_internal_abi_Type_comma_interface__ node;
  sync_atomic_Pointer_internal_concurrent_entry__ptr_internal_abi_Type_comma_interface___ overflow;
  internal_abi_Type *key;
  interface__0 value;
};

/* 4045 */
struct go_shape_struct__internal_concurrent_node___internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___internal_concurrent_overflow_sync_atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface____internal_concurrent_key_go_shape__ptr_internal_abi_Type_internal_concurrent_value_go_shape_interface__
{
  internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ node;
  sync_atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___ overflow;
  go_shape__ptr_internal_abi_Type_0 key;
  go_shape_interface__0 value;
};

/* 4046 */
struct sync_atomic_Pointer_go_shape_struct__internal_concurrent_node___internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___internal_concurrent_overflow_sync_atomic_Pointer_internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface____internal_concurrent_key_go_shape__ptr_internal_abi_Type_internal_concurrent_value_go_shape_interface___
{
  void *v;
};

/* 4054 */
typedef runtime_iface math_rand_v2_Source;

/* 4055 */
struct math_rand_v2_Rand
{
  math_rand_v2_Source src;
};

/* 4056 */
struct math_rand_v2_runtimeSource
{
};

/* 4058 */
struct crypto_x509_pkix_RelativeDistinguishedNameSET
{
  crypto_x509_pkix_AttributeTypeAndValue *array;
  int len;
  int cap;
};

/* 4059 */
struct crypto_x509_pkix_RDNSequence
{
  crypto_x509_pkix_RelativeDistinguishedNameSET *array;
  int len;
  int cap;
};

/* 4061 */
struct encoding_pem_Block
{
  string_0 Type;
  map_string_string_0 Headers;
  _slice_uint8_0 Bytes;
};

/* 4062 */
struct encoding_binary_bigEndian
{
};

/* 4063 */
struct __attribute__((aligned(4))) encoding_base64_Encoding
{
  uint8 encode[64];
  uint8 decodeMap[256];
  int32 padChar;
  bool strict;
};

/* 4064 */
struct __attribute__((aligned(4))) crypto_sha256_digest
{
  uint32 h[8];
  uint8 x[64];
  int nx;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 len;
  bool is224;
};

/* 4065 */
struct crypto_rsa_PSSOptions
{
  int SaltLength;
  unsigned int Hash;
};

/* 4066 */
struct crypto_rsa_PublicKey
{
  math_big_Int *N;
  int E;
};

/* 4067 */
struct crypto_ed25519_PublicKey
{
  uint8 *array;
  int len;
  int cap;
};

/* 4068 */
struct crypto_rand_reader
{
  io_Reader_0 f;
  sync_Mutex mu;
  sync_atomic_Uint32 used;
};

/* 4069 */
struct crypto_rand_hideAgainReader
{
  io_Reader_0 r;
};

/* 4074 */
struct crypto_internal_edwards25519_affineCached
{
  crypto_internal_edwards25519_field_Element YplusX;
  crypto_internal_edwards25519_field_Element YminusX;
  crypto_internal_edwards25519_field_Element T2d;
};

/* 4070 */
struct crypto_internal_edwards25519_nafLookupTable8
{
  crypto_internal_edwards25519_affineCached points[64];
};

/* 4075 */
struct crypto_internal_edwards25519_projCached
{
  crypto_internal_edwards25519_field_Element YplusX;
  crypto_internal_edwards25519_field_Element YminusX;
  crypto_internal_edwards25519_field_Element Z;
  crypto_internal_edwards25519_field_Element T2d;
};

/* 4071 */
struct crypto_internal_edwards25519_nafLookupTable5
{
  crypto_internal_edwards25519_projCached points[8];
};

/* 4072 */
typedef uint64 crypto_internal_edwards25519_fiatScalarNonMontgomeryDomainFieldElement[4];

/* 4073 */
struct crypto_internal_edwards25519_Scalar
{
  crypto_internal_edwards25519_fiatScalarMontgomeryDomainFieldElement s;
};

/* 4076 */
struct crypto_internal_edwards25519_projP1xP1
{
  crypto_internal_edwards25519_field_Element X;
  crypto_internal_edwards25519_field_Element Y;
  crypto_internal_edwards25519_field_Element Z;
  crypto_internal_edwards25519_field_Element T;
};

/* 4077 */
struct crypto_internal_edwards25519_projP2
{
  crypto_internal_edwards25519_field_Element X;
  crypto_internal_edwards25519_field_Element Y;
  crypto_internal_edwards25519_field_Element Z;
};

/* 4081 */
struct crypto_ecdsa_PublicKey
{
  crypto_elliptic_Curve Curve;
  math_big_Int *X;
  math_big_Int *Y;
};

/* 4079 */
struct crypto_ecdsa_PrivateKey
{
  crypto_ecdsa_PublicKey PublicKey;
  math_big_Int *D;
};

/* 4083 */
struct vendor_golang_org_x_crypto_cryptobyte_String
{
  uint8 *array;
  int len;
  int cap;
};

/* 4084 */
struct go_shape_struct__Bytes__slice_uint8_BitLength_int_
{
  _slice_uint8_0 Bytes;
  int BitLength;
};

/* 4085 */
struct __attribute__((packed)) __attribute__((aligned(4))) go_shape_struct__time_wall_uint64_time_ext_int64_time_loc__ptr_time_Location_
{
  uint64 wall;
  int64 ext;
  time_Location_0 *loc;
};

/* 4086 */
struct go_shape_struct__Class_int_Tag_int_IsCompound_bool_Bytes__slice_uint8_FullBytes__slice_uint8_
{
  int Class;
  int Tag;
  bool IsCompound;
  _slice_uint8_0 Bytes;
  _slice_uint8_0 FullBytes;
};

/* 4087 */
struct encoding_asn1_oidEncoder
{
  int *array;
  int len;
  int cap;
};

/* 4088 */
struct encoding_asn1_bitStringEncoder
{
  _slice_uint8_0 Bytes;
  int BitLength;
};

/* 4092 */
typedef runtime_iface encoding_asn1_encoder;

/* 4089 */
struct encoding_asn1_taggedEncoder
{
  uint8 scratch[8];
  encoding_asn1_encoder tag;
  encoding_asn1_encoder body;
};

/* 4090 */
struct go_shape__slice__slice_uint8
{
  _slice_uint8_0 *array;
  int len;
  int cap;
};

/* 4091 */
struct encoding_asn1_setEncoder
{
  encoding_asn1_encoder *array;
  int len;
  int cap;
};

/* 4093 */
struct encoding_asn1_multiEncoder
{
  encoding_asn1_encoder *array;
  int len;
  int cap;
};

/* 4094 */
struct encoding_asn1_bytesEncoder
{
  uint8 *array;
  int len;
  int cap;
};

/* 4095 */
struct encoding_asn1_invalidUnmarshalError
{
  reflect_Type_0 Type;
};

/* 4097 */
struct __attribute__((aligned(4))) encoding_asn1_fieldParameters
{
  bool optional;
  bool explicit;
  bool application;
  bool private;
  int64 *defaultValue;
  int *tag;
  int stringType;
  int timeType;
  bool set;
  bool omitEmpty;
};

/* 4098 */
struct __attribute__((aligned(4))) encoding_asn1_tagAndLength
{
  int class;
  int tag;
  int length;
  bool isCompound;
};

/* 4101 */
struct encoding_asn1_SyntaxError
{
  string_0 Msg;
};

/* 4102 */
struct encoding_asn1_StructuralError
{
  string_0 Msg;
};

/* 4103 */
struct crypto_sha512_digest
{
  uint64 h[8];
  uint8 x[128];
  int nx;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 len;
  unsigned int function;
};

/* 4108 */
struct crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_
{
  func__ptr_crypto_internal_nistec_P256Point newPoint;
  crypto_elliptic_CurveParams *params;
};

/* 4106 */
struct crypto_elliptic_p256Curve
{
  crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ nistCurve;
};

/* 4113 */
typedef runtime_iface crypto_elliptic_unmarshaler;

/* 4116 */
typedef runtime_iface fmt_State_0;

/* 4117 */
typedef runtime_iface io_ByteScanner_0;

/* 4124 */
struct crypto_ecdh_x25519Curve
{
};

/* 4126 */
typedef runtime_eface crypto_PublicKey_0;

/* 4129 */
struct crypto_internal_edwards25519_field_uint128
{
  uint64 lo;
  uint64 hi;
};

/* 4135 */
typedef uint64 crypto_internal_nistec_fiat_p521NonMontgomeryDomainFieldElement[9];

/* 4137 */
typedef uint64 crypto_internal_nistec_fiat_p384NonMontgomeryDomainFieldElement[6];

/* 4139 */
typedef uint64 crypto_internal_nistec_fiat_p256NonMontgomeryDomainFieldElement[4];

/* 4141 */
typedef uint64 crypto_internal_nistec_fiat_p224NonMontgomeryDomainFieldElement[4];

/* 4143 */
struct crypto_aes_aesCipher
{
  uint8 l;
  uint32 enc[60];
  uint32 dec[60];
};

/* 4146 */
typedef runtime_iface crypto_cipher_gcmAble;

/* 4155 */
typedef runtime_iface crypto_cipher_Block;

/* 4148 */
struct crypto_cipher_gcmFieldElement
{
  uint64 low;
  uint64 high;
};

/* 4147 */
struct crypto_cipher_gcm
{
  crypto_cipher_Block cipher;
  int nonceSize;
  int tagSize;
  crypto_cipher_gcmFieldElement productTable[16];
};

/* 4150 */
struct crypto_cipher_cbcDecrypter
{
  crypto_cipher_Block b;
  int blockSize;
  _slice_uint8_0 iv;
  _slice_uint8_0 tmp;
};

/* 4151 */
typedef runtime_iface crypto_cipher_cbcDecAble;

/* 4152 */
struct crypto_cipher_cbcEncrypter
{
  crypto_cipher_Block b;
  int blockSize;
  _slice_uint8_0 iv;
  _slice_uint8_0 tmp;
};

/* 4153 */
typedef runtime_iface crypto_cipher_cbcEncAble;

/* 4154 */
typedef runtime_iface crypto_cipher_BlockMode;

/* 4156 */
struct crypto_cipher_cbc
{
  crypto_cipher_Block b;
  int blockSize;
  _slice_uint8_0 iv;
  _slice_uint8_0 tmp;
};

/* 4158 */
struct context_valueCtx_0
{
  context_Context_0 Context;
  interface__0 key;
  interface__0 val;
};

/* 4393 */
struct sync_atomic_Value
{
  interface__0 v;
};

/* 4165 */
struct context_cancelCtx_0
{
  context_Context_0 Context;
  sync_Mutex mu;
  sync_atomic_Value done;
  map_context_canceler_struct__0 children;
  error_0 err;
  error_0 cause;
};

/* 4159 */
struct context_timerCtx_0
{
  context_cancelCtx_0 cancelCtx;
  time_Timer_0 *timer;
  time_Time_1 deadline;
};

/* 4160 */
typedef runtime_iface context_stringer_0;

/* 4161 */
typedef runtime_iface context_afterFuncer_0;

/* 4162 */
struct context_stopCtx_0
{
  context_Context_0 Context;
  func_bool stop;
};

/* 4166 */
typedef context_backgroundCtx context_backgroundCtx_0;

/* 4167 */
struct archive_zip_nopCloser
{
  io_Writer_0 Writer;
};

/* 4168 */
struct archive_zip_dirWriter
{
};

/* 4169 */
struct archive_zip_writeBuf
{
  uint8 *array;
  int len;
  int cap;
};

/* 4170 */
typedef runtime_iface hash_Hash32_0;

/* 4735 */
typedef hash_Hash32_0 hash_Hash32_1;

/* 4171 */
struct __attribute__((aligned(4))) archive_zip_fileWriter
{
  archive_zip_header *header;
  io_Writer_0 zipw;
  archive_zip_countWriter *rawCount;
  io_WriteCloser_0 comp;
  archive_zip_countWriter *compCount;
  hash_Hash32_1 crc32;
  bool closed;
};

/* 4172 */
struct archive_zip_countWriter
{
  io_Writer_0 w;
  int64 count;
};

/* 4173 */
struct archive_zip_Writer
{
  archive_zip_countWriter *cw;
  _slice__ptr_archive_zip_header dir;
  archive_zip_fileWriter *last;
  bool closed;
  map_uint16_archive_zip_Compressor compressors;
  string_0 comment;
  funcuint64_comma_uint64 testHookCloseSizeOffset;
};

/* 4174 */
struct encoding_binary_littleEndian
{
};

/* 4177 */
struct archive_zip_pooledFlateReader
{
  sync_Mutex mu;
  io_ReadCloser_0 fr;
};

/* 4178 */
struct archive_zip_pooledFlateWriter
{
  sync_Mutex mu;
  compress_flate_Writer *fw;
};

/* 4185 */
struct compress_flate_Writer
{
  compress_flate_compressor d;
  _slice_uint8_0 dict;
};

/* 4183 */
struct compress_flate_levelInfo
{
  int32 level;
  int32 lastFreq;
  int32 nextCharFreq;
  int32 nextPairFreq;
  int32 needed;
};

/* 4186 */
struct compress_flate_dictWriter
{
  io_Writer_0 w;
};

/* 4197 */
struct sort_lessSwap
{
  funcint_comma_int_bool Less;
  funcint_comma_int Swap;
};

/* 4198 */
typedef runtime_iface sort_Interface_0;

/* 4199 */
typedef runtime_iface fmt_Stringer_0;

/* 4200 */
typedef runtime_iface fmt_GoStringer_0;

/* 4201 */
typedef runtime_iface fmt_Formatter_0;

/* 4202 */
struct fmt_wrapErrors_0
{
  string_0 msg;
  _slice_error_0 errs;
};

/* 4203 */
struct go_shape__slice_int
{
  int *array;
  int len;
  int cap;
};

/* 4204 */
struct fmt_wrapError_0
{
  string_0 msg;
  error_0 err;
};

/* 4205 */
struct fmt_fmt_0
{
  fmt_buffer_0 *buf;
  fmt_fmtFlags fmtFlags;
  int wid;
  int prec;
  uint8 intbuf[68];
};

/* 4206 */
struct fmt_buffer_0
{
  uint8 *array;
  int len;
  int cap;
};

/* 4709 */
typedef fmt_buffer_0 fmt_buffer_1;

/* 4718 */
typedef fmt_fmt_0 fmt_fmt_1;

/* 4207 */
struct fmt_pp_0
{
  fmt_buffer_1 buf;
  interface__0 arg;
  reflect_Value_0 value;
  fmt_fmt_1 fmt;
  bool reordered;
  bool goodArgNum;
  bool panicking;
  bool erroring;
  bool wrapErrs;
  _slice_int_0 wrappedErrs;
};

/* 4209 */
struct go_shape__slice_internal_fmtsort_KeyValue
{
  internal_fmtsort_KeyValue *array;
  int len;
  int cap;
};

/* 4211 */
struct internal_fmtsort_KeyValue
{
  reflect_Value_0 Key;
  reflect_Value_0 Value;
};

/* 4210 */
struct internal_fmtsort_SortedMap
{
  internal_fmtsort_KeyValue *array;
  int len;
  int cap;
};

/* 4212 */
struct go_shape__slice_string
{
  string_0 *array;
  int len;
  int cap;
};

/* 4213 */
typedef runtime_iface interface__Network_internal_poll_String_PollFD__ptr_internal_poll_FD_;

/* 4214 */
typedef runtime_iface syscall_Conn_0;

/* 4215 */
struct os_rawConn_0
{
  os_File_0 *file;
};

/* 4216 */
struct internal_syscall_unix_siErrnoCode
{
  int32 Errno;
  int32 Code;
};

/* 4217 */
struct internal_syscall_unix_SiginfoChild
{
  int32 Signo;
  internal_syscall_unix_siErrnoCode siErrnoCode;
  int32 Pid;
  uint32 Uid;
  int32 Status;
  uint8 _[104];
};

/* 4218 */
struct os_fileStat_0
{
  string_0 name;
  int64 size;
  unsigned int mode;
  time_Time_1 modTime;
  syscall_Stat_t sys;
};

/* 4219 */
struct os_unixDirent_0
{
  string_0 parent;
  string_0 name;
  unsigned int typ;
  io_fs_FileInfo info;
};

/* 4221 */
struct os_fileWithoutWriteTo_0
{
  os_File_0 *File;
};

/* 4222 */
struct os_fileWithoutReadFrom_0
{
  os_File_0 *File;
};

/* 4223 */
typedef runtime_iface os_Signal_0;

/* 4225 */
struct os_ProcAttr
{
  string_0 Dir;
  _slice_string_0 Env;
  _slice__ptr_os_File_0 Files;
  syscall_SysProcAttr_0 *Sys;
};

/* 4227 */
struct os_LinkError_0
{
  string_0 Op;
  string_0 Old;
  string_0 New;
  error_0 Err;
};

/* 4228 */
typedef runtime_iface os_timeout_0;

/* 4229 */
struct os_SyscallError_0
{
  string_0 Syscall;
  error_0 Err;
};

/* 4230 */
struct go_shape_struct__os_mu_sync_Mutex_os_buf__ptr__slice_uint8_os_nbuf_int_os_bufp_int_
{
  sync_Mutex mu;
  _slice_uint8_0 *buf;
  int nbuf;
  int bufp;
};

/* 4231 */
struct sync_atomic_Pointer_go_shape_struct__os_mu_sync_Mutex_os_buf__ptr__slice_uint8_os_nbuf_int_os_bufp_int__
{
  void *v;
};

/* 4232 */
struct go_shape__slice_io_fs_DirEntry
{
  io_fs_DirEntry *array;
  int len;
  int cap;
};

/* 4233 */
struct os_dirInfo_0
{
  sync_Mutex mu;
  _slice_uint8_0 *buf;
  int nbuf;
  int bufp;
};

/* 4240 */
struct internal_poll_splicePipeFields
{
  int rfd;
  int wfd;
  int data;
};

/* 4241 */
struct internal_poll_splicePipe
{
  internal_poll_splicePipeFields splicePipeFields;
  uint8 _[12];
};

/* 4242 */
struct internal_poll_DeadlineExceededError
{
};

/* 4243 */
struct internal_poll_errNetClosing
{
};

/* 4249 */
typedef runtime_iface internal_testlog_Interface;

/* 4250 */
struct internal_filepathlite_lazybuf
{
  string_0 path;
  _slice_uint8_0 buf;
  int w;
  string_0 volAndPath;
  int volLen;
};

/* 4251 */
typedef runtime_iface interface__Timeout_bool_;

/* 4252 */
struct io_fs_PathError
{
  string_0 Op;
  string_0 Path;
  error_0 Err;
};

/* 4254 */
struct path_lazybuf
{
  string_0 s;
  _slice_uint8_0 buf;
  int w;
};

/* 4255 */
struct __attribute__((aligned(4))) time_dataIO
{
  _slice_uint8_0 p;
  bool error;
};

/* 4256 */
struct time_rule
{
  int kind;
  int day;
  int week;
  int mon;
  int time;
};

/* 4258 */
struct time_ParseError_0
{
  string_0 Layout;
  string_0 Value;
  string_0 LayoutElem;
  string_0 ValueElem;
  string_0 Message;
};

/* 4262 */
struct syscall_Utsname
{
  uint8 Sysname[65];
  uint8 Nodename[65];
  uint8 Release[65];
  uint8 Version[65];
  uint8 Machine[65];
  uint8 Domainname[65];
};

/* 4263 */
struct syscall_rlimit32
{
  uint32 Cur;
  uint32 Max;
};

/* 4264 */
struct syscall_RawSockaddr
{
  uint16 Family;
  uint8 Data[14];
};

/* 4265 */
struct syscall_RawSockaddrAny
{
  syscall_RawSockaddr Addr;
  uint8 Pad[96];
};

/* 4266 */
typedef syscall_RawSockaddrLinklayer syscall_RawSockaddrLinklayer_0;

/* 4267 */
typedef syscall_SockaddrLinklayer syscall_SockaddrLinklayer_0;

/* 4268 */
struct __attribute__((aligned(4))) syscall_SockaddrUnix_0
{
  string_0 Name;
  syscall_RawSockaddrUnix raw;
};

/* 4269 */
typedef syscall_RawSockaddrInet6 syscall_RawSockaddrInet6_0;

/* 4270 */
typedef syscall_SockaddrInet6 syscall_SockaddrInet6_0;

/* 4271 */
typedef syscall_RawSockaddrInet4 syscall_RawSockaddrInet4_0;

/* 4272 */
typedef syscall_SockaddrInet4 syscall_SockaddrInet4_0;

/* 4273 */
typedef syscall_Rusage syscall_Rusage_0;

/* 4274 */
typedef syscall_Stat_t syscall_Stat_t_0;

/* 4277 */
typedef runtime_iface syscall_Sockaddr_0;

/* 4278 */
typedef syscall_SockaddrNetlink syscall_SockaddrNetlink_0;

/* 4279 */
struct syscall_RtGenmsg
{
  uint8 Family;
};

/* 4280 */
struct __attribute__((aligned(4))) syscall_NetlinkRouteRequest
{
  syscall_NlMsghdr Header;
  syscall_RtGenmsg Data;
};

/* 4281 */
struct go_shape_struct__Cur_uint64_Max_uint64_
{
  uint64 Cur;
  uint64 Max;
};

/* 4282 */
struct sync_atomic_Pointer_go_shape_struct__Cur_uint64_Max_uint64__
{
  void *v;
};

/* 4283 */
struct syscall_cloneArgs
{
  uint64 flags;
  uint64 pidFD;
  uint64 childTID;
  uint64 parentTID;
  uint64 exitSignal;
  uint64 stack;
  uint64 stackSize;
  uint64 tls;
  uint64 setTID;
  uint64 setTIDSize;
  uint64 cgroup;
};

/* 4284 */
struct syscall_capData
{
  uint32 effective;
  uint32 permitted;
  uint32 inheritable;
};

/* 4285 */
struct syscall_capHeader
{
  uint32 version;
  int32 pid;
};

/* 4286 */
struct syscall_caps
{
  syscall_capHeader hdr;
  syscall_capData data[2];
};

/* 4289 */
struct syscall_ProcAttr
{
  string_0 Dir;
  _slice_string_0 Env;
  _slice_uintptr_0 Files;
  syscall_SysProcAttr_0 *Sys;
};

/* 4290 */
struct internal_godebug_runtimeStderr
{
};

/* 4291 */
struct go_shape_struct__internal_godebug_text_string_internal_godebug_bisect__ptr_internal_bisect_Matcher_
{
  string_0 text;
  internal_bisect_Matcher *bisect;
};

/* 4302 */
struct sync_atomic_Pointer_internal_bisect_dedup_
{
  void *v;
};

/* 4304 */
struct internal_bisect_Matcher
{
  bool verbose;
  bool quiet;
  bool enable;
  _slice_internal_bisect_cond list;
  sync_atomic_Pointer_internal_bisect_dedup_ dedup;
};

/* 4292 */
struct sync_atomic_Pointer_go_shape_struct__internal_godebug_text_string_internal_godebug_bisect__ptr_internal_bisect_Matcher__
{
  void *v;
};

/* 4293 */
struct internal_godebug_value
{
  string_0 text;
  internal_bisect_Matcher *bisect;
};

/* 4294 */
struct sync_atomic_Pointer_internal_godebug_value_
{
  void *v;
};

/* 4295 */
struct __attribute__((aligned(8))) internal_godebug_setting
{
  sync_atomic_Pointer_internal_godebug_value_ value;
  sync_Once_1 nonDefaultOnce;
  sync_atomic_Uint64 nonDefault;
  internal_godebugs_Info *info;
};

/* 4640 */
struct __attribute__((aligned(4))) internal_godebugs_Info
{
  string_0 Name;
  string_0 Package;
  int Changed;
  string_0 Old;
  bool Opaque;
};

/* 4296 */
struct internal_godebug_Setting
{
  string_0 name;
  sync_Once_1 once;
  internal_godebug_setting *setting;
};

/* 4297 */
struct __attribute__((packed)) __attribute__((aligned(4))) go_shape_struct__internal_bisect_recent__128__4_uint64_internal_bisect_mu_sync_Mutex_internal_bisect_m_map_uint64_bool_
{
  uint64 recent[128][4];
  sync_Mutex mu;
  map_uint64_bool_0 m;
};

/* 4298 */
struct sync_atomic_Pointer_go_shape_struct__internal_bisect_recent__128__4_uint64_internal_bisect_mu_sync_Mutex_internal_bisect_m_map_uint64_bool__
{
  void *v;
};

/* 4299 */
typedef runtime_iface internal_bisect_Writer;

/* 4300 */
struct internal_bisect_parseError
{
  string_0 text;
};

/* 4301 */
struct __attribute__((packed)) __attribute__((aligned(4))) internal_bisect_dedup
{
  uint64 recent[128][4];
  sync_Mutex mu;
  map_uint64_bool_0 m;
};

/* 4305 */
struct hash_crc32_digest
{
  uint32 crc;
  hash_crc32_Table *tab;
};

/* 4306 */
struct reflect_Method_0
{
  string_0 Name;
  string_0 PkgPath;
  reflect_Type_0 Type;
  reflect_Value_0 Func;
  int Index;
};

/* 4660 */
struct internal_abi_PtrType
{
  internal_abi_Type Type;
  internal_abi_Type *Elem;
};

/* 4307 */
struct reflect_ptrType_0
{
  internal_abi_PtrType PtrType;
};

/* 4308 */
struct reflect_nonEmptyInterface
{
  internal_abi_ITab *itab;
  void *word;
};

/* 4309 */
struct reflect_ValueError_0
{
  string_0 Method;
  unsigned int Kind;
};

/* 4326 */
struct reflect_abiSeq_0
{
  _slice_reflect_abiStep_0 steps;
  _slice_int_0 valueStart;
  uintptr stackBytes;
  int iregs;
  int fregs;
};

/* 4729 */
typedef reflect_abiSeq_0 reflect_abiSeq_1;

/* 4324 */
struct __attribute__((aligned(4))) reflect_abiDesc_0
{
  reflect_abiSeq_1 call;
  reflect_abiSeq_1 ret;
  uintptr stackCallArgsSize;
  uintptr retOffset;
  uintptr spill;
  reflect_bitVector_0 *stackPtrs;
  _BYTE gap58[4];
};

/* 4310 */
struct reflect_layoutType_0
{
  internal_abi_Type *t;
  sync_Pool_0 *framePool;
  reflect_abiDesc_0 abid;
};

/* 4376 */
struct sync_Pool_0
{
  void *local;
  uintptr localSize;
  void *victim;
  uintptr victimSize;
  func_interface_ New;
};

/* 4323 */
struct reflect_bitVector_0
{
  uint32 n;
  _slice_uint8_0 data;
};

/* 4311 */
struct reflect_layoutKey_0
{
  internal_abi_FuncType *ftyp;
  internal_abi_Type *rcvr;
};

/* 4662 */
struct internal_abi_FuncType
{
  internal_abi_Type Type;
  uint16 InCount;
  uint16 OutCount;
};

/* 4312 */
struct reflect_interfaceType
{
  internal_abi_InterfaceType InterfaceType;
};

/* 4313 */
struct __attribute__((aligned(4))) reflect_StructField_0
{
  string_0 Name;
  string_0 PkgPath;
  reflect_Type_0 Type;
  reflect_StructTag_0 Tag;
  uintptr Offset;
  _slice_int_0 Index;
  bool Anonymous;
};

/* 4314 */
struct reflect_rtype_0
{
  internal_abi_Type t;
};

/* 4315 */
struct __attribute__((aligned(8))) reflect_makeFuncCtxt_0
{
  uintptr fn;
  reflect_bitVector_0 *stack;
  uintptr argLen;
};

/* 4719 */
typedef reflect_makeFuncCtxt_0 reflect_makeFuncCtxt_1;

/* 4316 */
struct reflect_methodValue_0
{
  reflect_makeFuncCtxt_1 makeFuncCtxt;
  int method;
  reflect_Value_0 rcvr;
};

/* 4317 */
struct noalg_map_bucket_reflect_visit_bool
{
  uint8 topbits[8];
  noalg__8_reflect_visit keys;
  noalg__8_bool elems;
  void *overflow;
};

/* 4320 */
struct reflect_hiter
{
  void *key;
  void *elem;
  void *t;
  void *h;
  void *buckets;
  void *bptr;
  _slice_unsafe_Pointer_0 *overflow;
  _slice_unsafe_Pointer_0 *oldoverflow;
  uintptr startBucket;
  uint8 offset;
  bool wrapped;
  uint8 B;
  uint8 i;
  uintptr bucket;
  uintptr checkBucket;
};

/* 4322 */
struct reflect_MapIter
{
  reflect_Value_0 m;
  reflect_hiter hiter;
};

/* 4658 */
struct internal_abi_StructType
{
  internal_abi_Type Type;
  internal_abi_Name PkgPath;
  _slice_internal_abi_StructField Fields;
};

/* 4325 */
struct reflect_structType
{
  internal_abi_StructType StructType;
};

/* 4327 */
struct go_shape__slice_uint32
{
  uint32 *array;
  int len;
  int cap;
};

/* 4329 */
struct strconv_decimalSlice
{
  _slice_uint8_0 d;
  int nd;
  int dp;
};

/* 4330 */
struct strconv_floatInfo
{
  uint mantbits;
  uint expbits;
  int bias;
};

/* 4331 */
struct __attribute__((aligned(4))) strconv_decimal
{
  uint8 d[800];
  int nd;
  int dp;
  bool neg;
  bool trunc;
};

/* 4332 */
struct strconv_NumError_0
{
  string_0 Func;
  string_0 Num;
  error_0 Err;
};

/* 4333 */
struct __attribute__((aligned(4))) bufio_Scanner
{
  io_Reader_0 r;
  bufio_SplitFunc split;
  int maxTokenSize;
  _slice_uint8_0 token;
  _slice_uint8_0 buf;
  int start;
  int end;
  error_0 err;
  int empties;
  bool scanCalled;
  bool done;
};

/* 4336 */
struct strings_span_1
{
  int start;
  int end;
};

/* 4337 */
struct strings_singleStringReplacer_0
{
  strings_stringFinder_0 *finder;
  string_0 value;
};

/* 4345 */
struct strings_stringFinder_0
{
  string_0 pattern;
  int badCharSkip[256];
  _slice_int_0 goodSuffixSkip;
};

/* 4338 */
struct strings_stringWriter_0
{
  io_Writer_0 w;
};

/* 4339 */
struct strings_appendSliceWriter_0
{
  uint8 *array;
  int len;
  int cap;
};

/* 4730 */
typedef strings_trieNode_0 strings_trieNode_1;

/* 4340 */
struct strings_genericReplacer_0
{
  strings_trieNode_1 root;
  int tableSize;
  uint8 mapping[256];
};

/* 4342 */
struct strings_byteStringReplacer_0
{
  _slice_uint8_0 replacements[256];
  _slice_string_0 toReplace;
};

/* 4344 */
typedef runtime_iface strings_replacer_0;

/* 4343 */
struct strings_Replacer_0
{
  sync_Once_1 once;
  strings_replacer_0 r;
  _slice_string_0 oldnew;
};

/* 4346 */
struct __attribute__((packed)) __attribute__((aligned(4))) strings_Reader_0
{
  string_0 s;
  int64 i;
  int prevRune;
};

/* 4347 */
struct strings_Builder
{
  strings_Builder *addr;
  _slice_uint8_0 buf;
};

/* 4356 */
struct io_onceError_0
{
  sync_Mutex Mutex;
  error_0 err;
};

/* 4755 */
typedef io_onceError_0 io_onceError_1;

/* 4355 */
struct io_pipe_0
{
  sync_Mutex wrMu;
  chan__slice_uint8_0 wrCh;
  chan_int_0 rdCh;
  sync_Once_1 once;
  chan_struct__0 done;
  io_onceError_1 rerr;
  io_onceError_1 werr;
};

/* 4759 */
typedef io_pipe_0 io_pipe_1;

/* 4354 */
struct io_PipeReader_0
{
  io_pipe_1 pipe;
};

/* 4760 */
typedef io_PipeReader_0 io_PipeReader_1;

/* 4353 */
struct io_PipeWriter_0
{
  io_PipeReader_1 r;
};

/* 4357 */
struct io_nopCloserWriterTo_0
{
  io_Reader_0 Reader;
};

/* 4358 */
struct io_nopCloser_0
{
  io_Reader_0 Reader;
};

/* 4360 */
struct io_LimitedReader_0
{
  io_Reader_0 R;
  int64 N;
};

/* 4361 */
typedef runtime_iface io_ReaderFrom_0;

/* 4364 */
typedef runtime_iface io_StringWriter_0;

/* 4371 */
struct __attribute__((aligned(8))) sync_poolDequeue_0
{
  sync_atomic_Uint64 headTail;
  _slice_sync_eface_0 vals;
};

/* 4736 */
typedef sync_poolDequeue_0 sync_poolDequeue_1;

/* 4370 */
struct sync_atomic_Pointer_sync_poolChainElt_
{
  void *v;
};

/* 4368 */
struct go_shape_struct__sync_poolDequeue_sync_next_sync_atomic_Pointer_sync_poolChainElt__sync_prev_sync_atomic_Pointer_sync_poolChainElt__
{
  sync_poolDequeue_1 poolDequeue;
  sync_atomic_Pointer_sync_poolChainElt_ next;
  sync_atomic_Pointer_sync_poolChainElt_ prev;
};

/* 4369 */
struct sync_atomic_Pointer_go_shape_struct__sync_poolDequeue_sync_next_sync_atomic_Pointer_sync_poolChainElt__sync_prev_sync_atomic_Pointer_sync_poolChainElt___
{
  void *v;
};

/* 4372 */
struct sync_poolChainElt_0
{
  sync_poolDequeue_1 poolDequeue;
  sync_atomic_Pointer_sync_poolChainElt_ next;
  sync_atomic_Pointer_sync_poolChainElt_ prev;
};

/* 4373 */
struct sync_poolChain_0
{
  sync_poolChainElt_0 *head;
  sync_atomic_Pointer_sync_poolChainElt_ tail;
};

/* 4731 */
typedef sync_poolChain_0 sync_poolChain_1;

/* 4374 */
struct sync_poolLocalInternal_0
{
  interface__0 private;
  sync_poolChain_1 shared;
};

/* 4752 */
typedef sync_poolLocalInternal_0 sync_poolLocalInternal_1;

/* 4375 */
struct sync_poolLocal_0
{
  sync_poolLocalInternal_1 poolLocalInternal;
  uint8 pad[112];
};

/* 4379 */
struct sync_atomic_Pointer_go_shape_interface__
{
  void *v;
};

/* 4380 */
struct __attribute__((aligned(4))) go_shape_struct__sync_m_map_interface___ptr_sync_entry_sync_amended_bool_
{
  map_interface___ptr_sync_entry_0 m;
  bool amended;
};

/* 4381 */
struct sync_atomic_Pointer_go_shape_struct__sync_m_map_interface___ptr_sync_entry_sync_amended_bool__
{
  void *v;
};

/* 4384 */
struct __attribute__((aligned(4))) sync_readOnly_0
{
  map_interface___ptr_sync_entry_0 m;
  bool amended;
};

/* 4390 */
struct sync_atomic_align64
{
};

/* 4392 */
struct sync_atomic_efaceWords
{
  void *typ;
  void *data;
};

/* 4396 */
struct sync_atomic_noCopy
{
};

/* 4398 */
typedef runtime_iface interface__Asinterface__bool_;

/* 4399 */
typedef runtime_iface interface__Unwrap__slice_error_;

/* 4400 */
typedef runtime_iface interface__Unwrap_error_;

/* 4401 */
typedef runtime_iface interface__Iserror_bool_;

/* 4402 */
struct errors_errorString_0
{
  string_0 s;
};

/* 4403 */
struct __attribute__((aligned(4))) internal_reflectlite_ValueError
{
  string_0 Method;
  unsigned __int8 Kind;
};

/* 4404 */
typedef runtime_iface internal_reflectlite_Type;

/* 4405 */
struct internal_reflectlite_rtype
{
  internal_abi_Type *Type;
};

/* 4406 */
struct internal_reflectlite_name
{
  uint8 *bytes;
};

/* 4407 */
struct internal_unsafeheader_Slice
{
  void *Data;
  int Len;
  int Cap;
};

/* 4408 */
struct internal_abi_EmptyInterface
{
  internal_abi_Type *Type;
  void *Data;
};

/* 4409 */
struct internal_reflectlite_Value
{
  internal_abi_Type *typ_;
  void *ptr;
  unsigned int flag;
};

/* 4758 */
typedef runtime_timer_0 runtime_timer_1;

/* 4410 */
struct runtime_timeTimer_0
{
  void *c;
  bool init;
  runtime_timer_1 timer;
};

/* 4411 */
struct runtime_findfuncbucket
{
  uint32 idx;
  uint8 subbuckets[16];
};

/* 4412 */
struct runtime_notifyList
{
  internal_runtime_atomic_Uint32 wait;
  uint32 notify;
  runtime_mutex_1 lock;
  runtime_sudog_0 *head;
  runtime_sudog_0 *tail;
};

/* 4413 */
struct runtime_hiter
{
  void *key;
  void *elem;
  internal_abi_MapType *t;
  runtime_hmap_0 *h;
  void *buckets;
  runtime_bmap_0 *bptr;
  _slice__ptr_runtime_bmap_0 *overflow;
  _slice__ptr_runtime_bmap_0 *oldoverflow;
  uintptr startBucket;
  uint8 offset;
  bool wrapped;
  uint8 B;
  uint8 i;
  uintptr bucket;
  uintptr checkBucket;
};

/* 4661 */
struct internal_abi_MapType
{
  internal_abi_Type Type;
  internal_abi_Type *Key;
  internal_abi_Type *Elem;
  internal_abi_Type *Bucket;
  funcunsafe_Pointer_comma_uintptr_uintptr Hasher;
  uint8 KeySize;
  uint8 ValueSize;
  uint16 BucketSize;
  uint32 Flags;
};

/* 4545 */
struct runtime_hmap_0
{
  int count;
  uint8 flags;
  uint8 B;
  uint16 noverflow;
  uint32 hash0;
  void *buckets;
  void *oldbuckets;
  uintptr nevacuate;
  runtime_mapextra_0 *extra;
};

/* 4414 */
struct runtime_vdsoVersionKey
{
  string_0 version;
  uint32 verHash;
};

/* 4415 */
struct runtime_elfPhdr
{
  uint32 p_type;
  uint32 p_offset;
  uint32 p_vaddr;
  uint32 p_paddr;
  uint32 p_filesz;
  uint32 p_memsz;
  uint32 p_flags;
  uint32 p_align;
};

/* 4416 */
struct runtime_elfDyn
{
  int32 d_tag;
  uint32 d_val;
};

/* 4417 */
struct runtime_elfEhdr
{
  uint8 e_ident[16];
  uint16 e_type;
  uint16 e_machine;
  uint32 e_version;
  uint32 e_entry;
  uint32 e_phoff;
  uint32 e_shoff;
  uint32 e_flags;
  uint16 e_ehsize;
  uint16 e_phentsize;
  uint16 e_phnum;
  uint16 e_shentsize;
  uint16 e_shnum;
  uint16 e_shstrndx;
};

/* 4418 */
struct runtime_elfVerdef
{
  uint16 vd_version;
  uint16 vd_flags;
  uint16 vd_ndx;
  uint16 vd_cnt;
  uint32 vd_hash;
  uint32 vd_aux;
  uint32 vd_next;
};

/* 4419 */
struct runtime_elfSym
{
  uint32 st_name;
  uint32 st_value;
  uint32 st_size;
  uint8 st_info;
  uint8 st_other;
  uint16 st_shndx;
};

/* 4420 */
struct runtime_vdsoInfo
{
  bool valid;
  uintptr loadAddr;
  uintptr loadOffset;
  runtime_elfSym (*symtab)[134217727];
  uint8 (*symstrings)[2147483647];
  _slice_uint32_0 chain;
  _slice_uint32_0 bucket;
  uint32 symOff;
  bool isGNUHash;
  uint16 (*versym)[1073741823];
  runtime_elfVerdef *verdef;
};

/* 4421 */
struct noalg_map_bucket_uint32__slice__ptr_internal_abi_Type
{
  uint8 topbits[8];
  noalg__8_uint32 keys;
  noalg__8__slice__ptr_internal_abi_Type elems;
  void *overflow;
};

/* 4423 */
struct noalg_map_bucket_runtime__typePair_struct_
{
  uint8 topbits[8];
  noalg__8_runtime__typePair keys;
  void *overflow;
};

/* 4430 */
struct runtime_traceRegionAlloc
{
  runtime_mutex_1 lock;
  internal_runtime_atomic_Bool dropping;
  internal_runtime_atomic_UnsafePointer current;
  runtime_traceRegionAllocBlock *full;
};

/* 4431 */
struct runtime_traceMap
{
  internal_runtime_atomic_UnsafePointer root;
  internal_cpu_CacheLinePad _;
  internal_runtime_atomic_Uint64 seq;
  internal_cpu_CacheLinePad __2;
  runtime_traceRegionAlloc mem;
};

/* 4424 */
struct runtime_traceTypeTable
{
  runtime_traceMap tab;
};

/* 4428 */
struct runtime_traceRegionAllocBlockHeader
{
  runtime_traceRegionAllocBlock *next;
  internal_runtime_atomic_Uintptr off;
};

/* 4429 */
struct runtime_traceRegionAllocBlock
{
  runtime_traceRegionAllocBlockHeader traceRegionAllocBlockHeader;
  uint8 data[65528];
};

/* 4425 */
struct runtime_traceStringTable
{
  runtime_mutex_1 lock;
  runtime_traceBuf_0 *buf;
  runtime_traceMap tab;
};

/* 4426 */
struct runtime_traceStackTable
{
  runtime_traceMap tab;
};

/* 4427 */
struct runtime_traceMapNode
{
  internal_runtime_atomic_UnsafePointer children[4];
  uintptr hash;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 id;
  _slice_uint8_0 data;
};

/* 4536 */
struct runtime_traceLocker
{
  runtime_m_0 *mp;
  uintptr gen;
};

/* 4436 */
struct runtime_traceWriter
{
  runtime_traceLocker traceLocker;
  runtime_traceBuf_0 *traceBuf;
};

/* 4432 */
struct __attribute__((aligned(4))) runtime_traceExpWriter
{
  runtime_traceWriter traceWriter;
  unsigned __int8 exp;
};

/* 4433 */
struct runtime_traceEventWriter
{
  runtime_traceWriter w;
};

/* 4434 */
struct go_shape_struct__runtime_r_runtime_profAtomic_runtime_w_runtime_profAtomic_runtime_overflow_internal_runtime_atomic_Uint64_runtime_overflowTime_internal_runtime_atomic_Uint64_runtime_eof_internal_runtime_atomic_Uint32_runtime_hdrsize_uintptr_runtime_data__slice_uint64_runtime_tags__slice_unsafe_Pointer_runtime_rNext_runtime_profIndex_runtime_overflowBuf__slice_uint64_runtime_wait_runtime_note_
{
  unsigned __int64 r;
  unsigned __int64 w;
  internal_runtime_atomic_Uint64 overflow;
  internal_runtime_atomic_Uint64 overflowTime;
  internal_runtime_atomic_Uint32 eof;
  uintptr hdrsize;
  _slice_uint64_0 data;
  _slice_unsafe_Pointer_0 tags;
  unsigned __int64 rNext;
  _slice_uint64_0 overflowBuf;
  runtime_note wait;
};

/* 4435 */
struct internal_runtime_atomic_Pointer_go_shape_struct__runtime_r_runtime_profAtomic_runtime_w_runtime_profAtomic_runtime_overflow_internal_runtime_atomic_Uint64_runtime_overflowTime_internal_runtime_atomic_Uint64_runtime_eof_internal_runtime_atomic_Uint32_runtime_hdrsize_uintptr_runtime_data__slice_uint64_runtime_tags__slice_unsafe_Pointer_runtime_rNext_runtime_profIndex_runtime_overflowBuf__slice_uint64_runtime_wait_runtime_note__
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4437 */
struct runtime_cgoTracebackArg
{
  uintptr context;
  uintptr sigContext;
  uintptr *buf;
  uintptr max;
};

/* 4438 */
struct runtime_wakeableSleep
{
  runtime_timer_0 *timer;
  runtime_mutex_1 lock;
  chan_struct__0 wakeup;
};

/* 4439 */
struct runtime_traceAdvancerState
{
  runtime_wakeableSleep *timer;
  chan_struct__0 done;
};

/* 4441 */
struct runtime_traceBufQueue
{
  runtime_traceBuf_0 *head;
  runtime_traceBuf_0 *tail;
};

/* 4442 */
struct runtime_funcinl_0
{
  uint32 ones;
  uintptr entry;
  string_0 name;
  string_0 file;
  int32 line;
  int32 startLine;
};

/* 4443 */
struct runtime_cgoSymbolizerArg
{
  uintptr pc;
  uint8 *file;
  uintptr lineno;
  uint8 *funcName;
  uintptr entry;
  uintptr more;
  uintptr data;
};

/* 4444 */
struct __attribute__((aligned(4))) runtime_stackmap
{
  int32 n;
  int32 nbit;
  uint8 bytedata[1];
};

/* 4590 */
typedef runtime_bitvector runtime_bitvector_0;

/* 4445 */
struct runtime_reflectMethodValue
{
  uintptr fn;
  runtime_bitvector_0 *stack;
  uintptr argLen;
};

/* 4446 */
struct runtime_adjustinfo
{
  runtime_stack old;
  uintptr delta;
  uintptr sghi;
};

/* 4448 */
struct runtime_stackt
{
  uint8 *ss_sp;
  int32 ss_flags;
  uintptr ss_size;
};

/* 4451 */
struct noalg_map_bucket_string_bool
{
  uint8 topbits[8];
  noalg__8_string keys;
  noalg__8_bool elems;
  void *overflow;
};

/* 4452 */
struct runtime_dbgVar
{
  string_0 name;
  int32 *value;
  internal_runtime_atomic_Int32 *atomic;
  int32 def;
};

/* 4453 */
struct internal_runtime_atomic_Pointer_go_shape_string_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4454 */
struct internal_runtime_atomic_Pointer_go_shape_funcstring_comma_string_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4455 */
struct internal_runtime_atomic_Pointer_go_shape_funcstring_func_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4456 */
struct internal_runtime_atomic_Pointer_go_shape_func_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4457 */
struct internal_runtime_atomic_Pointer_func_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4458 */
struct runtime_godebugInc
{
  string_0 name;
  internal_runtime_atomic_Pointer_func_ inc;
};

/* 4459 */
struct runtime_ticksType
{
  runtime_mutex_1 lock;
  __attribute__((packed)) __attribute__((aligned(1))) int64 startTicks;
  __attribute__((packed)) __attribute__((aligned(1))) int64 startTime;
  internal_runtime_atomic_Int64 val;
};

/* 4460 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_tracestat
{
  bool active;
  __attribute__((aligned(4))) uint64 id;
  uint64 allocs;
  uint64 bytes;
};

/* 4461 */
struct runtime_vdsoSymbolKey
{
  string_0 name;
  uint32 symHash;
  uint32 gnuHash;
  uintptr *ptr;
};

/* 4462 */
struct runtime_randomOrder
{
  uint32 count;
  _slice_uint32_0 coprimes;
};

/* 4463 */
struct runtime_randomEnum
{
  uint32 i;
  uint32 count;
  uint32 pos;
  uint32 inc;
};

/* 4464 */
struct runtime_pMask
{
  uint32 *array;
  int len;
  int cap;
};

/* 4465 */
struct runtime_cgothreadstart
{
  unsigned int g;
  uint64 *tls;
  void *fn;
};

/* 4466 */
struct runtime_rwmutex
{
  runtime_mutex_1 rLock;
  unsigned int readers;
  uint32 readerPass;
  runtime_mutex_1 wLock;
  unsigned int writer;
  internal_runtime_atomic_Int32 readerCount;
  internal_runtime_atomic_Int32 readerWait;
  int readRank;
};

/* 4467 */
struct go_shape_a43ffc4a4831591b9de7c1ed0cb93795c1209295578eacf0b17a0150abe1d3e7
{
  runtime_stack stack;
  uintptr stackguard0;
  uintptr stackguard1;
  runtime__panic_0 *_panic;
  runtime__defer_0 *_defer;
  runtime_m_0 *m;
  runtime_gobuf sched;
  uintptr syscallsp;
  uintptr syscallpc;
  uintptr syscallbp;
  uintptr stktopsp;
  void *param;
  internal_runtime_atomic_Uint32 atomicstatus;
  uint32 stackLock;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 goid;
  unsigned int schedlink;
  int64 waitsince;
  unsigned __int8 waitreason;
  bool preempt;
  bool preemptStop;
  bool preemptShrink;
  bool asyncSafePoint;
  bool paniconfault;
  bool gcscandone;
  bool throwsplit;
  bool activeStackChans;
  internal_runtime_atomic_Bool parkingOnChan;
  bool inMarkAssist;
  bool coroexit;
  int8 raceignore;
  bool nocgocallback;
  bool tracking;
  uint8 trackingSeq;
  int64 trackingStamp;
  int64 runnableTime;
  unsigned int lockedm;
  uint32 sig;
  _slice_uint8_0 writebuf;
  uintptr sigcode0;
  uintptr sigcode1;
  uintptr sigpc;
  uint64 parentGoid;
  uintptr gopc;
  _slice_runtime_ancestorInfo_0 *ancestors;
  uintptr startpc;
  uintptr racectx;
  runtime_sudog_0 *waiting;
  _slice_uintptr_0 cgoCtxt;
  void *labels;
  runtime_timer_0 *timer;
  int64 sleepWhen;
  internal_runtime_atomic_Uint32 selectDone;
  runtime_goroutineProfileStateHolder_1 goroutineProfiled;
  runtime_coro_0 *coroarg;
  runtime_gTraceState_1 trace;
  int64 gcAssistBytes;
};

/* 4468 */
struct internal_runtime_atomic_Pointer_go_shape_a43ffc4a4831591b9de7c1ed0cb93795c1209295578eacf0b17a0150abe1d3e7_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4469 */
struct runtime_slice
{
  void *array;
  int len;
  int cap;
};

/* 4470 */
struct __attribute__((aligned(4))) runtime_srcFunc
{
  runtime_moduledata_0 *datap;
  int32 nameOff;
  int32 startLine;
  unsigned __int8 funcID;
};

/* 4471 */
struct runtime_inlineFrame
{
  uintptr pc;
  int32 index;
};

/* 4472 */
struct runtime_inlinedCall
{
  unsigned __int8 funcID;
  uint8 _[3];
  int32 nameOff;
  int32 parentPc;
  int32 startLine;
};

/* 4473 */
struct runtime_inlineUnwinder
{
  runtime_funcInfo_1 f;
  runtime_inlinedCall (*inlTree)[1048576];
};

/* 4474 */
struct __attribute__((aligned(4))) runtime_suspendGState
{
  runtime_g_0 *g;
  bool dead;
  bool stopped;
};

/* 4475 */
struct runtime_pinnerBits
{
  uint8 x;
};

/* 4476 */
struct runtime_PanicNilError_0
{
  runtime_PanicNilError_0 *_[];
};

/* 4477 */
typedef runtime_iface runtime_stringer_0;

/* 4478 */
struct go_shape_struct__runtime_heap_bool_runtime_rangefunc_bool_runtime_sp_uintptr_runtime_pc_uintptr_runtime_fn_func_runtime_link__ptr_runtime__defer_runtime_head__ptr_internal_runtime_atomic_Pointer_runtime__defer__
{
  bool heap;
  bool rangefunc;
  uintptr sp;
  uintptr pc;
  func fn;
  runtime__defer_0 *link;
  internal_runtime_atomic_Pointer_runtime__defer_ *head;
};

/* 4479 */
struct internal_runtime_atomic_Pointer_go_shape_struct__runtime_heap_bool_runtime_rangefunc_bool_runtime_sp_uintptr_runtime_pc_uintptr_runtime_fn_func_runtime_link__ptr_runtime__defer_runtime_head__ptr_internal_runtime_atomic_Pointer_runtime__defer___
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4480 */
struct runtime_perThreadSyscallArgs
{
  uintptr trap;
  uintptr a1;
  uintptr a2;
  uintptr a3;
  uintptr a4;
  uintptr a5;
  uintptr a6;
  uintptr r1;
  uintptr r2;
};

/* 4481 */
struct runtime_sigeventFields
{
  uintptr value;
  int32 signo;
  int32 notify;
  int32 sigev_notify_thread_id;
};

/* 4482 */
struct runtime_sigevent
{
  runtime_sigeventFields sigeventFields;
  uint8 _[48];
};

/* 4488 */
struct runtime_timespec
{
  int32 tv_sec;
  int32 tv_nsec;
};

/* 4483 */
struct runtime_itimerspec
{
  runtime_timespec it_interval;
  runtime_timespec it_value;
};

/* 4484 */
struct runtime_siginfoFields
{
  int32 si_signo;
  int32 si_errno;
  int32 si_code;
  uint32 si_addr;
};

/* 4485 */
struct runtime_siginfo
{
  runtime_siginfoFields siginfoFields;
  uint8 _[112];
};

/* 4486 */
struct runtime_sigctxt
{
  runtime_siginfo *info;
  void *ctxt;
};

/* 4487 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_sigactiont
{
  uintptr sa_handler;
  uint32 sa_flags;
  uintptr sa_restorer;
  uint64 sa_mask;
};

/* 4489 */
struct runtime_pollCache
{
  runtime_mutex_1 lock;
  runtime_pollDesc_0 *first;
};

/* 4490 */
struct runtime_pollDesc_0
{
  runtime_pollDesc_0 *link;
  uintptr fd;
  internal_runtime_atomic_Uintptr fdseq;
  internal_runtime_atomic_Uint32 atomicInfo;
  internal_runtime_atomic_Uintptr rg;
  internal_runtime_atomic_Uintptr wg;
  runtime_mutex_1 lock;
  bool closing;
  bool rrun;
  bool wrun;
  uint32 user;
  uintptr rseq;
  runtime_timer_1 rt;
  int64 rd;
  uintptr wseq;
  runtime_timer_1 wt;
  __attribute__((packed)) __attribute__((aligned(1))) int64 wd;
  runtime_pollDesc_0 *self;
};

/* 4492 */
struct runtime_spanSetBlockAlloc
{
  unsigned __int64 stack;
};

/* 4493 */
struct internal_runtime_atomic_Pointer_runtime_spanSetBlock_
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4497 */
struct runtime_atomicMSpanPointer
{
  internal_runtime_atomic_UnsafePointer p;
};

/* 4494 */
struct go_shape_struct__runtime_lfnode_runtime_popped_internal_runtime_atomic_Uint32_runtime_spans__512_runtime_atomicMSpanPointer_
{
  runtime_lfnode lfnode;
  internal_runtime_atomic_Uint32 popped;
  runtime_atomicMSpanPointer spans[512];
};

/* 4495 */
struct internal_runtime_atomic_Pointer_go_shape_struct__runtime_lfnode_runtime_popped_internal_runtime_atomic_Uint32_runtime_spans__512_runtime_atomicMSpanPointer__
{
  internal_runtime_atomic_UnsafePointer u;
};

/* 4496 */
struct runtime_spanSetSpinePointer
{
  void *p;
};

/* 4498 */
struct runtime_spanSetBlock
{
  runtime_lfnode lfnode;
  internal_runtime_atomic_Uint32 popped;
  runtime_atomicMSpanPointer spans[512];
};

/* 4500 */
struct runtime_blockRecord
{
  float64 count;
  int64 cycles;
};

/* 4501 */
struct runtime_memRecordCycle
{
  uintptr allocs;
  uintptr frees;
  uintptr alloc_bytes;
  uintptr free_bytes;
};

/* 4502 */
struct runtime_memRecord
{
  runtime_memRecordCycle active;
  runtime_memRecordCycle future[3];
};

/* 4503 */
struct runtime_mProfCycleHolder
{
  internal_runtime_atomic_Uint32 value;
};

/* 4504 */
struct runtime_gcBitsArena
{
  uintptr free;
  runtime_gcBitsArena *next;
  runtime_gcBits_0 bits[65528];
};

/* 4737 */
typedef runtime_special_0 runtime_special_1;

/* 4505 */
struct __attribute__((aligned(4))) runtime_specialReachable
{
  runtime_special_1 special;
  bool done;
  bool reachable;
};

/* 4506 */
struct runtime_specialprofile
{
  runtime_special_1 special;
  runtime_bucket *b;
};

/* 4507 */
struct runtime_bucket
{
  runtime_bucket *next;
  runtime_bucket *allnext;
  int typ;
  uintptr hash;
  uintptr size;
  uintptr nstk;
};

/* 4508 */
struct runtime_specialsIter
{
  runtime_special_0 **pprev;
  runtime_special_0 *s;
};

/* 4509 */
struct __attribute__((aligned(4))) runtime_scavChunkData
{
  uint16 inUse;
  uint16 lastInUse;
  uint32 gen;
  unsigned __int8 scavChunkFlags;
};

/* 4510 */
struct runtime_scavengerState_0
{
  runtime_mutex_1 lock;
  runtime_g_0 *g;
  runtime_timer_0 *timer;
  internal_runtime_atomic_Uint32 sysmonWake;
  bool parked;
  bool printControllerReset;
  __attribute__((packed)) __attribute__((aligned(4))) float64 targetCPUFraction;
  __attribute__((packed)) __attribute__((aligned(1))) float64 sleepRatio;
  runtime_piController sleepController;
  int64 controllerCooldown;
  funcint64_int64 sleepStub;
  funcuintptr_uintptr_comma_int64 scavenge;
  func_bool shouldStop;
  func_int32 gomaxprocs;
};

/* 4511 */
struct runtime_stkframe
{
  runtime_funcInfo_1 fn;
  uintptr pc;
  uintptr continpc;
  uintptr lr;
  uintptr sp;
  uintptr fp;
  uintptr varp;
  uintptr argp;
};

/* 4512 */
struct __attribute__((aligned(4))) runtime_unwinder
{
  runtime_stkframe frame;
  unsigned int g;
  int cgoCtxt;
  unsigned __int8 calleeFuncID;
  unsigned __int8 flags;
};

/* 4513 */
struct runtime_stackObjectBufHdr
{
  runtime_workbufhdr workbufhdr;
  runtime_stackObjectBuf *next;
};

/* 4519 */
struct runtime_stackObject
{
  uint32 off;
  uint32 size;
  runtime_stackObjectRecord *r;
  runtime_stackObject *left;
  runtime_stackObject *right;
};

/* 4514 */
struct runtime_stackObjectBuf
{
  runtime_stackObjectBufHdr stackObjectBufHdr;
  runtime_stackObject obj[101];
};

/* 4515 */
struct runtime_stackWorkBufHdr
{
  runtime_workbufhdr workbufhdr;
  runtime_stackWorkBuf *next;
};

/* 4516 */
struct runtime_stackWorkBuf
{
  runtime_stackWorkBufHdr stackWorkBufHdr;
  uintptr obj[507];
};

/* 4517 */
struct runtime_stackScanState
{
  runtime_stack stack;
  bool conservative;
  runtime_stackWorkBuf *buf;
  runtime_stackWorkBuf *freeBuf;
  runtime_stackWorkBuf *cbuf;
  runtime_stackObjectBuf *head;
  runtime_stackObjectBuf *tail;
  int nobjs;
  runtime_stackObject *root;
};

/* 4520 */
struct runtime_specialWeakHandle
{
  runtime_special_1 special;
  internal_runtime_atomic_Uintptr *handle;
};

/* 4521 */
struct runtime_gcCPULimiterState
{
  internal_runtime_atomic_Uint32 lock;
  internal_runtime_atomic_Bool enabled;
  bool gcEnabled;
  bool transitioning;
  bool test;
  _runtime_fill_uint64_runtime_capacity_uint64_ bucket;
  uint64 overflow;
  internal_runtime_atomic_Int64 assistTimePool;
  internal_runtime_atomic_Int64 idleMarkTimePool;
  internal_runtime_atomic_Int64 idleTimePool;
  internal_runtime_atomic_Int64 lastUpdate;
  internal_runtime_atomic_Uint32 lastEnabledCycle;
  int32 nprocs;
};

/* 4524 */
typedef runtime_gcBgMarkWorkerNode runtime_gcBgMarkWorkerNode_0;

/* 4525 */
struct internal_runtime_atomic_Float64
{
  internal_runtime_atomic_Uint64 u;
};

/* 4526 */
struct __attribute__((aligned(8))) runtime_gcControllerState
{
  internal_runtime_atomic_Int32 gcPercent;
  internal_runtime_atomic_Int64 memoryLimit;
  uint64 heapMinimum;
  internal_runtime_atomic_Uint64 runway;
  float64 consMark;
  float64 lastConsMark[4];
  internal_runtime_atomic_Uint64 gcPercentHeapGoal;
  internal_runtime_atomic_Uint64 sweepDistMinTrigger;
  uint64 triggered;
  uint64 lastHeapGoal;
  internal_runtime_atomic_Uint64 heapLive;
  internal_runtime_atomic_Uint64 heapScan;
  uint64 lastHeapScan;
  internal_runtime_atomic_Uint64 lastStackScan;
  internal_runtime_atomic_Uint64 maxStackScan;
  internal_runtime_atomic_Uint64 globalsScan;
  uint64 heapMarked;
  internal_runtime_atomic_Int64 heapScanWork;
  internal_runtime_atomic_Int64 stackScanWork;
  internal_runtime_atomic_Int64 globalsScanWork;
  internal_runtime_atomic_Int64 bgScanCredit;
  internal_runtime_atomic_Int64 assistTime;
  internal_runtime_atomic_Int64 dedicatedMarkTime;
  internal_runtime_atomic_Int64 fractionalMarkTime;
  internal_runtime_atomic_Int64 idleMarkTime;
  int64 markStartTime;
  internal_runtime_atomic_Int64 dedicatedMarkWorkersNeeded;
  internal_runtime_atomic_Uint64 idleMarkWorkers;
  internal_runtime_atomic_Float64 assistWorkPerByte;
  internal_runtime_atomic_Float64 assistBytesPerWork;
  float64 fractionalUtilizationGoal;
  unsigned __int64 heapInUse;
  unsigned __int64 heapReleased;
  unsigned __int64 heapFree;
  internal_runtime_atomic_Uint64 totalAlloc;
  internal_runtime_atomic_Uint64 totalFree;
  internal_runtime_atomic_Uint64 mappedReady;
  bool test;
  internal_cpu_CacheLinePad _;
};

/* 4528 */
struct runtime_gcTrigger
{
  int kind;
  __attribute__((packed)) __attribute__((aligned(1))) int64 now;
  uint32 n;
};

/* 4530 */
struct runtime_finalizer
{
  runtime_funcval *fn;
  void *arg;
  uintptr nret;
  internal_abi_Type *fint;
  internal_abi_PtrType *ot;
};

/* 4529 */
struct runtime_finblock
{
  runtime_finblock *alllink;
  runtime_finblock *next;
  uint32 cnt;
  int32 _;
  runtime_finalizer fin[204];
};

/* 4556 */
struct runtime_funcval
{
  uintptr fn;
};

/* 4531 */
typedef runtime_cpuStatsAggregate runtime_cpuStatsAggregate_0;

/* 4532 */
typedef runtime_heapStatsAggregate runtime_heapStatsAggregate_0;

/* 4535 */
struct runtime_markBits
{
  uint8 *bytep;
  uint8 mask;
  uintptr index;
};

/* 4537 */
struct __attribute__((aligned(4))) runtime_sweepLocker
{
  uint32 sweepGen;
  bool valid;
};

/* 4538 */
struct runtime_sweepLocked
{
  runtime_mspan_0 *mspan;
};

/* 4555 */
typedef runtime_notInHeap runtime_notInHeap_0;

/* 4539 */
struct runtime_notInHeapSlice
{
  runtime_notInHeap_0 *array;
  int len;
  int cap;
};

/* 4540 */
struct runtime_typePointers
{
  uintptr elem;
  uintptr addr;
  uintptr mask;
  internal_abi_Type *typ;
};

/* 4541 */
struct internal_abi_RegArgs
{
  uintptr Ints[];
  uint64 Floats[];
  void *Ptrs[];
  internal_abi_IntArgRegBitmap ReturnIsPtr;
};

/* 4542 */
struct runtime_evacDst
{
  runtime_bmap_0 *b;
  int i;
  void *k;
  void *e;
};

/* 4546 */
typedef runtime_workbufhdr runtime_workbufhdr_0;

/* 4557 */
struct runtime_specialfinalizer
{
  runtime_special_1 special;
  runtime_funcval *fn;
  uintptr nret;
  internal_abi_Type *fint;
  internal_abi_PtrType *ot;
};

/* 4562 */
struct runtime_checkmarksMap
{
  uint8 b[131072];
};

/* 4563 */
struct runtime_heapArena
{
  runtime_mspan_0 *spans[512];
  uint8 pageInUse[64];
  uint8 pageMarks[64];
  uint8 pageSpecials[64];
  runtime_checkmarksMap *checkmarks;
  uintptr zeroedBase;
};

/* 4568 */
struct runtime_addrRanges
{
  _slice_runtime_addrRange ranges;
  uintptr totalBytes;
  unsigned __int64 *sysStat;
};

/* 4569 */
struct runtime_pallocData
{
  runtime_pallocBits pallocBits;
  runtime_pageBits scavenged;
};

/* 4570 */
struct __attribute__((aligned(4))) runtime_pageAlloc
{
  _slice_runtime_pallocSum summary[4];
  runtime_pallocData (*chunks[1])[1024];
  runtime_offAddr searchAddr;
  unsigned int start;
  unsigned int end;
  runtime_addrRanges inUse;
  _runtime_index_runtime_scavengeIndex_runtime_releasedBg_internal_runtime_atomic_Uintptr_runtime_releasedEager_internal_runtime_atomic_Uintptr_ scav;
  runtime_mutex_1 *mheapLock;
  unsigned __int64 *sysStat;
  uintptr summaryMappedReady;
  bool chunkHugePages;
  bool test;
};

/* 4574 */
struct __attribute__((aligned(4))) runtime_linearAlloc
{
  uintptr next;
  uintptr mapped;
  uintptr end;
  bool mapMemory;
};

/* 4573 */
struct __attribute__((aligned(4))) runtime_fixalloc
{
  uintptr size;
  funcunsafe_Pointer_comma_unsafe_Pointer first;
  void *arg;
  runtime_mlink *list;
  uintptr chunk;
  uint32 nchunk;
  uint32 nalloc;
  uintptr inuse;
  unsigned __int64 *stat;
  bool zero;
};

/* 4571 */
struct __attribute__((aligned(8))) runtime_mheap
{
  runtime_mutex_1 lock;
  runtime_pageAlloc pages;
  uint32 sweepgen;
  _slice__ptr_runtime_mspan_0 allspans;
  internal_runtime_atomic_Uintptr pagesInUse;
  internal_runtime_atomic_Uint64 pagesSwept;
  internal_runtime_atomic_Uint64 pagesSweptBasis;
  uint64 sweepHeapLiveBasis;
  float64 sweepPagesPerByte;
  internal_runtime_atomic_Uint64 reclaimIndex;
  internal_runtime_atomic_Uintptr reclaimCredit;
  internal_cpu_CacheLinePad _;
  runtime_heapArena *(*arenas[1])[1024];
  bool arenasHugePages;
  runtime_linearAlloc heapArenaAlloc;
  runtime_arenaHint *arenaHints;
  runtime_linearAlloc arena;
  _slice_runtime_arenaIdx allArenas;
  _slice_runtime_arenaIdx sweepArenas;
  _slice_runtime_arenaIdx markArenas;
  _runtime_base_uintptr_runtime_end_uintptr_ curArena;
  _runtime_mcentral_runtime_mcentral_runtime_pad__24_uint8_ central[136];
  runtime_fixalloc spanalloc;
  runtime_fixalloc cachealloc;
  runtime_fixalloc specialfinalizeralloc;
  runtime_fixalloc specialprofilealloc;
  runtime_fixalloc specialReachableAlloc;
  runtime_fixalloc specialPinCounterAlloc;
  runtime_fixalloc specialWeakHandleAlloc;
  runtime_mutex_1 speciallock;
  runtime_fixalloc arenaHintAlloc;
  _runtime_arenaHints__ptr_runtime_arenaHint_runtime_quarantineList_runtime_mSpanList_runtime_readyList_runtime_mSpanList_ userArena;
  runtime_specialfinalizer *unused;
};

/* 4572 */
struct runtime_mlink
{
  runtime_mlink *next;
};

/* 4576 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_lockTimer
{
  runtime_mutex_0 *lock;
  int64 timeRate;
  int64 timeStart;
  int64 tickStart;
};

/* 4577 */
struct internal_abi_InterfaceSwitchCacheEntry
{
  uintptr Typ;
  int Case;
  uintptr Itab;
};

/* 4578 */
struct internal_abi_InterfaceSwitchCache
{
  uintptr Mask;
  internal_abi_InterfaceSwitchCacheEntry Entries[1];
};

/* 4579 */
struct internal_abi_InterfaceSwitch
{
  internal_abi_InterfaceSwitchCache *Cache;
  int NCases;
  internal_abi_InterfaceType *Cases[1];
};

/* 4580 */
struct internal_abi_TypeAssertCacheEntry
{
  uintptr Typ;
  uintptr Itab;
};

/* 4581 */
struct internal_abi_TypeAssertCache
{
  uintptr Mask;
  internal_abi_TypeAssertCacheEntry Entries[1];
};

/* 4582 */
struct __attribute__((aligned(4))) internal_abi_TypeAssert
{
  internal_abi_TypeAssertCache *Cache;
  internal_abi_InterfaceType *Inter;
  bool CanFail;
};

/* 4583 */
struct runtime_rtype
{
  internal_abi_Type *Type;
};

/* 4584 */
struct runtime_itabTableType
{
  uintptr size;
  uintptr count;
  internal_abi_ITab *entries[512];
};

/* 4585 */
struct runtime_metricFloat64Histogram_0
{
  _slice_uint64_0 counts;
  _slice_float64_0 buckets;
};

/* 4587 */
struct runtime_Frames_0
{
  _slice_uintptr_0 callers;
  uintptr nextPC;
  _slice_runtime_Frame_0 frames;
  runtime_Frame_0 frameStore[2];
};

/* 4595 */
struct runtime_errorAddressString_0
{
  string_0 msg;
  uintptr addr;
};

/* 4596 */
struct runtime_TypeAssertionError_0
{
  internal_abi_Type *_interface;
  internal_abi_Type *concrete;
  internal_abi_Type *asserted;
  string_0 missingMethod;
};

/* 4597 */
struct __attribute__((packed)) __attribute__((aligned(4))) runtime_worldStop
{
  unsigned __int8 reason;
  __attribute__((aligned(4))) int64 startedStopping;
  int64 finishedStopping;
  int64 stoppingCPUTime;
};

/* 4598 */
struct runtime_profBuf
{
  unsigned __int64 r;
  unsigned __int64 w;
  internal_runtime_atomic_Uint64 overflow;
  internal_runtime_atomic_Uint64 overflowTime;
  internal_runtime_atomic_Uint32 eof;
  uintptr hdrsize;
  _slice_uint64_0 data;
  _slice_unsafe_Pointer_0 tags;
  unsigned __int64 rNext;
  _slice_uint64_0 overflowBuf;
  runtime_note wait;
};

/* 4599 */
struct runtime_cpuProfile
{
  runtime_mutex_1 lock;
  bool on;
  runtime_profBuf *log;
  uintptr extra[1000];
  int numExtra;
  uint64 lostExtra;
  uint64 lostAtomic;
};

/* 4601 */
typedef runtime_pcvalueCache runtime_pcvalueCache_0;

/* 4606 */
typedef runtime_gsignalStack runtime_gsignalStack_0;

/* 4635 */
struct runtime_stringStruct
{
  void *str;
  int len;
};

/* 4641 */
struct runtime_internal_sys_nih
{
};

/* 4642 */
struct runtime_internal_sys_NotInHeap
{
  runtime_internal_sys_nih _;
};

/* 4645 */
struct internal_runtime_atomic_align64
{
};

/* 4648 */
struct internal_runtime_atomic_noCopy
{
};

/* 4650 */
struct __attribute__((aligned(4))) internal_cpu_option
{
  string_0 Name;
  bool *Feature;
  bool Specified;
  bool Enable;
};

/* 4651 */
struct internal_abi_UncommonType
{
  int PkgPath;
  uint16 Mcount;
  uint16 Xcount;
  uint32 Moff;
  uint32 _;
};

/* 4659 */
struct internal_abi_SliceType
{
  internal_abi_Type Type;
  internal_abi_Type *Elem;
};

/* 4663 */
struct internal_abi_ChanType
{
  internal_abi_Type Type;
  internal_abi_Type *Elem;
  int Dir;
};

/* 4664 */
struct internal_abi_ArrayType
{
  internal_abi_Type Type;
  internal_abi_Type *Elem;
  internal_abi_Type *Slice;
  uintptr Len;
};

/* 4666 */
typedef go_shape_string_0 internal_bytealg_IndexRabinKarp_go_shape_string_::_param1;

/* 4667 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_insertionSortCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param1;

/* 4668 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_insertionSortCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param0;

/* 4669 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_siftDownCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param1;

/* 4670 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_siftDownCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param0;

/* 4671 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_heapSortCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param2;

/* 4672 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_heapSortCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param1;

/* 4673 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_breakPatternsCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param1;

/* 4674 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_breakPatternsCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param0;

/* 4675 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_medianCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param2;

/* 4676 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_medianCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param1;

/* 4677 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_choosePivotCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param3;

/* 4678 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_choosePivotCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param2;

/* 4679 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_partialInsertionSortCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param1;

/* 4680 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_partialInsertionSortCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param0;

/* 4681 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_partitionEqualCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param1;

/* 4682 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_partitionEqualCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param0;

/* 4683 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_partitionCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param1;

/* 4684 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_partitionCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param0;

/* 4685 */
typedef funcgo_shape_struct__net_http_key_string_net_http_values__slice_string__comma_go_shape_struct__net_http_key_string_net_http_values__slice_string__int slices_pdqsortCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param10;

/* 4686 */
typedef _slice_go_shape_struct__net_http_key_string_net_http_values__slice_string_ slices_pdqsortCmpFunc_go_shape_struct__net_http_key_string_net_http_values__slice_string__::_param9;

/* 4687 */
typedef go_shape_string_0 slices_AppendSeq_go_shape__slice_go_shape_string_comma_go_shape_string__range1::_param3;

/* 4688 */
typedef go_shape__slice_go_shape_string_0 slices_AppendSeq_go_shape__slice_go_shape_string_comma_go_shape_string_::_param0;

/* 4689 */
typedef iter_Seq_go_shape_string_ slices_AppendSeq_go_shape__slice_go_shape_string_comma_go_shape_string_::_param1;

/* 4690 */
typedef _slice_go_shape_string slices_Sorted_go_shape_string_::_param3;

/* 4691 */
typedef iter_Seq_go_shape_string_ slices_Sorted_go_shape_string_::_param2;

/* 4724 */
typedef void (*funcgo_shape_string_comma_go_shape__ptr_uint8_bool)(go_shape_string_0, go_shape__ptr_uint8, bool *);

/* 4692 */
typedef funcgo_shape_string_comma_go_shape__ptr_uint8_bool net_http__ptr_mapping_go_shape_string_comma_go_shape__ptr_uint8__eachPair::_param12;

/* 4693 */
typedef net_http_mapping_go_shape_string_comma_go_shape__ptr_uint8_ *net_http__ptr_mapping_go_shape_string_comma_go_shape__ptr_uint8__eachPair::_param11;

/* 4694 */
typedef funcgo_shape_string_bool net_http__ptr_ServeMux_matchingMethods_Keys_go_shape_map_string_bool_comma_go_shape_string_comma_go_shape_bool__func1::_param3;

/* 4695 */
typedef _slice_go_shape_string slices_insertionSortOrdered_go_shape_string_::_param1;

/* 4696 */
typedef _slice_go_shape_string slices_siftDownOrdered_go_shape_string_::_param1;

/* 4697 */
typedef _slice_go_shape_string slices_heapSortOrdered_go_shape_string_::_param1;

/* 4698 */
typedef _slice_go_shape_string slices_breakPatternsOrdered_go_shape_string_::_param0;

/* 4699 */
typedef _slice_go_shape_string slices_medianOrdered_go_shape_string_::_param1;

/* 4700 */
typedef _slice_go_shape_string slices_choosePivotOrdered_go_shape_string_::_param2;

/* 4701 */
typedef _slice_go_shape_string slices_partialInsertionSortOrdered_go_shape_string_::_param1;

/* 4702 */
typedef _slice_go_shape_string slices_partitionEqualOrdered_go_shape_string_::_param1;

/* 4703 */
typedef _slice_go_shape_string slices_partitionOrdered_go_shape_string_::_param1;

/* 4704 */
typedef _slice_go_shape_string slices_pdqsortOrdered_go_shape_string_::_param10;

/* 4705 */
typedef hash<go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer_> *map_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__go_shape_struct__internal_weak_u_unsafe_Pointer_;

/* 4706 */
typedef hash<go_shape__ptr_internal_abi_Type_comma_go_shape_interface_> *map_go_shape__ptr_internal_abi_Type_go_shape_interface_;

/* 4713 */
typedef runtime_ancestorInfo_0 runtime_ancestorInfo_1;

/* 4725 */
typedef void (*func_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__)(go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 *, internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ *);

/* 4761 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 internal_abi_TypeFor_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param0;

/* 4762 */
typedef internal_concurrent_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent_NewHashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__::_param3;

/* 4763 */
typedef map_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__go_shape_struct__internal_weak_u_unsafe_Pointer_ internal_concurrent_NewHashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__::_param2;

/* 4764 */
typedef unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___0 *unique_addUniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param4;

/* 4765 */
typedef internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param11;

/* 4766 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 *unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param10;

/* 4767 */
typedef go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 *unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param13;

/* 4768 */
typedef func_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__::_param12;

/* 4769 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___compareAndDelete::_param16;

/* 4770 */
typedef sync_atomic_Pointer_go_shape_ea0710d912261ce6c8a6c91ea69f308f3d93959fe0c1ec034c5de474e276239b_ *internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___compareAndDelete::_param15;

/* 4771 */
typedef internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___Load::_param25;

/* 4772 */
typedef internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___Load::_param24;

/* 4773 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param34;

/* 4774 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param33;

/* 4775 */
typedef internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param32;

/* 4776 */
typedef sync_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param31;

/* 4777 */
typedef internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param30;

/* 4778 */
typedef internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___expand::_param40;

/* 4779 */
typedef internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___CompareAndDelete::_param49;

/* 4780 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___CompareAndDelete::_param48;

/* 4781 */
typedef internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___CompareAndDelete::_param47;

/* 4782 */
typedef sync_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___CompareAndDelete::_param46;

/* 4783 */
typedef internal_concurrent_indirect_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___CompareAndDelete::_param45;

/* 4784 */
typedef internal_concurrent_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___iter::_param57;

/* 4785 */
typedef internal_concurrent_node_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer__ *internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___iter::_param56;

/* 4786 */
typedef internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___Load::_param25;

/* 4787 */
typedef internal_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___Load::_param24;

/* 4788 */
typedef internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param34;

/* 4789 */
typedef internal_concurrent_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param33;

/* 4790 */
typedef internal_concurrent_node_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param32;

/* 4791 */
typedef sync_atomic_Pointer_go_shape_struct__internal_concurrent_isEntry_bool__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param31;

/* 4792 */
typedef internal_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param30;

/* 4793 */
typedef internal_concurrent_indirect_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___expand::_param40;

/* 4794 */
typedef internal_concurrent_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__ *internal_concurrent_NewHashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__::_param3;

/* 4795 */
typedef map_go_shape__ptr_internal_abi_Type_go_shape_interface_ internal_concurrent_NewHashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface__::_param2;

/* 4796 */
typedef go_shape__ptr_uint8 crypto_ecdsa_verifyNISTEC_go_shape__ptr_uint8_::_param8;

/* 4797 */
typedef go_shape_struct__Bytes__slice_uint8_BitLength_int_ reflect_TypeFor_go_shape_struct__Bytes__slice_uint8_BitLength_int__::_param0;

/* 4798 */
typedef go_shape__slice_int reflect_TypeFor_go_shape__slice_int_::_param0;

/* 4799 */
typedef int reflect_TypeFor_go_shape_int_::_param0;

/* 4800 */
typedef go_shape__slice_uint8 reflect_TypeFor_go_shape__slice_uint8_::_param0;

/* 4801 */
typedef go_shape__ptr_uint8 reflect_TypeFor_go_shape__ptr_uint8_::_param0;

/* 4802 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__Params::_param13;

/* 4803 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__IsOnCurve::_param14;

/* 4804 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__Add::_param19;

/* 4805 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__ScalarMult::_param24;

/* 4806 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__ScalarBaseMult::_param26;

/* 4807 */
typedef crypto_elliptic_nistCurve__ptr_crypto_internal_nistec_P256Point_ *crypto_elliptic__ptr_nistCurve__ptr_crypto_internal_nistec_P256Point__Unmarshal::_param30;

/* 4808 */
typedef go_shape__ptr_uint8 crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__Add::_param20;

/* 4809 */
typedef go_shape__ptr_uint8 crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__ScalarMult::_param25;

/* 4810 */
typedef go_shape__ptr_uint8 crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__ScalarBaseMult::_param27;

/* 4811 */
typedef go_shape__ptr_uint8 crypto_ecdh__ptr_nistCurve_go_shape__ptr_uint8__privateKeyToPublicKey::_param10;

/* 4812 */
typedef go_shape__ptr_uint8 crypto_ecdh__ptr_nistCurve_go_shape__ptr_uint8__ecdh::_param13;

/* 4813 */
typedef unsigned __int16 slices_DeleteFunc_go_shape__slice_crypto_tls_CurveID_comma_go_shape_uint16_::_param3;

/* 4814 */
typedef unsigned __int16 slices_DeleteFunc_go_shape__slice_uint16_comma_go_shape_uint16_::_param3;

/* 4815 */
struct _internal_cpu___internal_cpu_CacheLinePad_HasZARCH_bool_HasSTFLE_bool_HasLDISP_bool_HasEIMM_bool_HasDFP_bool_HasETF3EH_bool_HasMSA_bool_HasAES_bool_HasAESCBC_bool_HasAESCTR_bool_HasAESGCM_bool_HasGHASH_bool_HasSHA1_bool_HasSHA256_bool_HasSHA512_bool_HasSHA3_bool_HasVX_bool_HasVXE_bool_HasKDSA_bool_HasECDSA_bool_HasEDDSA_bool_internal_cpu___internal_cpu_CacheLinePad_
{
  internal_cpu_CacheLinePad _;
  bool HasZARCH;
  bool HasSTFLE;
  bool HasLDISP;
  bool HasEIMM;
  bool HasDFP;
  bool HasETF3EH;
  bool HasMSA;
  bool HasAES;
  bool HasAESCBC;
  bool HasAESCTR;
  bool HasAESGCM;
  bool HasGHASH;
  bool HasSHA1;
  bool HasSHA256;
  bool HasSHA512;
  bool HasSHA3;
  bool HasVX;
  bool HasVXE;
  bool HasKDSA;
  bool HasECDSA;
  bool HasEDDSA;
  internal_cpu_CacheLinePad __2;
};

/* 4816 */
struct _internal_cpu___internal_cpu_CacheLinePad_HasAES_bool_HasPMULL_bool_HasSHA1_bool_HasSHA2_bool_HasSHA512_bool_HasCRC32_bool_HasATOMICS_bool_HasCPUID_bool_IsNeoverse_bool_internal_cpu___internal_cpu_CacheLinePad_
{
  internal_cpu_CacheLinePad _;
  bool HasAES;
  bool HasPMULL;
  bool HasSHA1;
  bool HasSHA2;
  bool HasSHA512;
  bool HasCRC32;
  bool HasATOMICS;
  bool HasCPUID;
  bool IsNeoverse;
  internal_cpu_CacheLinePad __2;
};

/* 4817 */
struct _internal_cpu___internal_cpu_CacheLinePad_HasVFPv4_bool_HasIDIVA_bool_HasV7Atomics_bool_internal_cpu___internal_cpu_CacheLinePad_
{
  internal_cpu_CacheLinePad _;
  bool HasVFPv4;
  bool HasIDIVA;
  bool HasV7Atomics;
  internal_cpu_CacheLinePad __2;
};

/* 4818 */
struct _internal_cpu___internal_cpu_CacheLinePad_HasAES_bool_HasADX_bool_HasAVX_bool_HasAVX2_bool_HasAVX512F_bool_HasAVX512BW_bool_HasAVX512VL_bool_HasBMI1_bool_HasBMI2_bool_HasERMS_bool_HasFMA_bool_HasOSXSAVE_bool_HasPCLMULQDQ_bool_HasPOPCNT_bool_HasRDTSCP_bool_HasSHA_bool_HasSSE3_bool_HasSSSE3_bool_HasSSE41_bool_HasSSE42_bool_internal_cpu___internal_cpu_CacheLinePad_
{
  internal_cpu_CacheLinePad _;
  bool HasAES;
  bool HasADX;
  bool HasAVX;
  bool HasAVX2;
  bool HasAVX512F;
  bool HasAVX512BW;
  bool HasAVX512VL;
  bool HasBMI1;
  bool HasBMI2;
  bool HasERMS;
  bool HasFMA;
  bool HasOSXSAVE;
  bool HasPCLMULQDQ;
  bool HasPOPCNT;
  bool HasRDTSCP;
  bool HasSHA;
  bool HasSSE3;
  bool HasSSSE3;
  bool HasSSE41;
  bool HasSSE42;
  internal_cpu_CacheLinePad __2;
};

/* 4819 */
typedef void (*funcuintptr_comma_unsafe_Pointer_comma_int32_int32)(uintptr, void *, int32, int32 *);

/* 4820 */
struct __attribute__((packed)) __attribute__((aligned(4))) _runtime_enabled_bool_runtime_pad__3_uint8_runtime_alignme_uint64_
{
  bool enabled;
  uint8 pad[3];
  uint64 alignme;
};

/* 4821 */
struct _slice__ptr_crypto_tls_cipherSuiteTLS13
{
  crypto_tls_cipherSuiteTLS13 **array;
  int len;
  int cap;
};

/* 4822 */
typedef void (*funcstring_comma_int_comma_int_int)(string_0, int, int, int *);

/* 4823 */
typedef void (*funcstring_comma__ptr_net_http_routingNode_bool)(string_0, net_http_routingNode *, bool *);

/* 4824 */
typedef void (*func__slice_uintptr)(_slice_uintptr_0 *);

/* 4825 */
struct _slice_vendor_golang_org_x_sys_cpu_option
{
  vendor_golang_org_x_sys_cpu_option *array;
  int len;
  int cap;
};

/* 4826 */
struct _vendor_golang_org_x_sys_cpu___vendor_golang_org_x_sys_cpu_CacheLinePad_HasSWP_bool_HasHALF_bool_HasTHUMB_bool_Has26BIT_bool_HasFASTMUL_bool_HasFPA_bool_HasVFP_bool_HasEDSP_bool_HasJAVA_bool_HasIWMMXT_bool_HasCRUNCH_bool_HasTHUMBEE_bool_HasNEON_bool_HasVFPv3_bool_HasVFPv3D16_bool_HasTLS_bool_HasVFPv4_bool_HasIDIVA_bool_HasIDIVT_bool_HasVFPD32_bool_HasLPAE_bool_HasEVTSTRM_bool_HasAES_bool_HasPMULL_bool_HasSHA1_bool_HasSHA2_bool_HasCRC32_bool_vendor_golang_org_x_sys_cpu___vendor_golang_org_x_sys_cpu_CacheLinePad_
{
  vendor_golang_org_x_sys_cpu_CacheLinePad _;
  bool HasSWP;
  bool HasHALF;
  bool HasTHUMB;
  bool Has26BIT;
  bool HasFASTMUL;
  bool HasFPA;
  bool HasVFP;
  bool HasEDSP;
  bool HasJAVA;
  bool HasIWMMXT;
  bool HasCRUNCH;
  bool HasTHUMBEE;
  bool HasNEON;
  bool HasVFPv3;
  bool HasVFPv3D16;
  bool HasTLS;
  bool HasVFPv4;
  bool HasIDIVA;
  bool HasIDIVT;
  bool HasVFPD32;
  bool HasLPAE;
  bool HasEVTSTRM;
  bool HasAES;
  bool HasPMULL;
  bool HasSHA1;
  bool HasSHA2;
  bool HasCRC32;
  vendor_golang_org_x_sys_cpu_CacheLinePad __2;
};

/* 4827 */
struct __attribute__((packed)) __attribute__((aligned(4))) _crypto_internal_edwards25519_table_crypto_internal_edwards25519_nafLookupTable8_crypto_internal_edwards25519_initOnce_sync_Once_
{
  crypto_internal_edwards25519_nafLookupTable8 table;
  sync_Once_1 initOnce;
};

/* 4828 */
typedef hash<uint32_comma_int32> *map_uint32_int32_0;

/* 4829 */
struct _slice__ptr_vendor_golang_org_x_text_unicode_norm_formInfo
{
  vendor_golang_org_x_text_unicode_norm_formInfo **array;
  int len;
  int cap;
};

/* 4830 */
struct _slice_internal_runtime_exithook_Hook
{
  internal_runtime_exithook_Hook *array;
  int len;
  int cap;
};

/* 4831 */
struct _sync_Mutex_math_big_table__64_math_big_divisor_
{
  sync_Mutex Mutex;
  math_big_divisor table[64];
};

/* 4832 */
typedef void (*funcuintptr_comma__slice_uint8_error)(uintptr, _slice_uint8_0, error_0 *);

/* 4833 */
typedef void (*func__ptr_crypto_ecdh_PrivateKey_comma_error)(crypto_ecdh_PrivateKey **, error_0 *);

/* 4834 */
struct _slice_struct__crypto_x509_extKeyUsage_crypto_x509_ExtKeyUsage_crypto_x509_oid_encoding_asn1_ObjectIdentifier_
{
  _crypto_x509_extKeyUsage_crypto_x509_ExtKeyUsage_crypto_x509_oid_encoding_asn1_ObjectIdentifier_ *array;
  int len;
  int cap;
};

/* 4835 */
struct _slice_struct__crypto_x509_algo_crypto_x509_SignatureAlgorithm_crypto_x509_name_string_crypto_x509_oid_encoding_asn1_ObjectIdentifier_crypto_x509_params_encoding_asn1_RawValue_crypto_x509_pubKeyAlgo_crypto_x509_PublicKeyAlgorithm_crypto_x509_hash_crypto_Hash_crypto_x509_isRSAPSS_bool_
{
  _crypto_x509_algo_crypto_x509_SignatureAlgorithm_crypto_x509_name_string_crypto_x509_oid_encoding_asn1_ObjectIdentifier_crypto_x509_params_encoding_asn1_RawValue_crypto_x509_pubKeyAlgo_crypto_x509_PublicKeyAlgorithm_crypto_x509_hash_crypto_Hash_crypto_x509_isRSAPSS_bool_ *array;
  int len;
  int cap;
};

/* 4836 */
struct _slice_func_hash_Hash
{
  func_hash_Hash *array;
  int len;
  int cap;
};

/* 4837 */
struct _slice_internal_cpu_option
{
  internal_cpu_option *array;
  int len;
  int cap;
};

/* 4838 */
struct _slice_internal_godebugs_Info
{
  internal_godebugs_Info *array;
  int len;
  int cap;
};

/* 4839 */
typedef void (*func_ptr_internal_poll_FD_comma_int_comma_int64_comma_error_comma_bool)(internal_poll_FD *, int, int64, error_0, bool);

/* 4840 */
typedef void (*funcint_int_comma_syscall_Sockaddr_comma_error)(int, int *, syscall_Sockaddr_0 *, error_0 *);

/* 4841 */
typedef void (*funcint_comma_int_int_comma_syscall_Sockaddr_comma_error)(int, int, int *, syscall_Sockaddr_0 *, error_0 *);

/* 4842 */
struct _slice__8_vendor_golang_org_x_net_idna_joinState
{
  __int8 (*array)[8];
  int len;
  int cap;
};

/* 4843 */
struct _slice_runtime_vdsoSymbolKey
{
  runtime_vdsoSymbolKey *array;
  int len;
  int cap;
};

/* 4844 */
struct _runtime_lock_runtime_mutex_runtime_next_int32_runtime_m_map_int32_unsafe_Pointer_runtime_minv_map_unsafe_Pointer_int32_
{
  runtime_mutex_1 lock;
  int32 next;
  map_int32_unsafe_Pointer_0 m;
  map_unsafe_Pointer_int32_0 minv;
};

/* 4845 */
struct __attribute__((aligned(4))) _runtime_lock_runtime_mutex_runtime_reading__ptr_runtime_traceBuf_runtime_empty__ptr_runtime_traceBuf_runtime_full__2_runtime_traceBufQueue_runtime_workAvailable_internal_runtime_atomic_Bool_runtime_readerGen_internal_runtime_atomic_Uintptr_runtime_flushedGen_internal_runtime_atomic_Uintptr_runtime_headerWritten_bool_runtime_doneSema__2_uint32_runtime_stackTab__2_runtime_traceStackTable_runtime_stringTab__2_runtime_traceStringTable_runtime_typeTab__2_runtime_traceTypeTable_runtime_cpuLogRead__2__ptr_runtime_profBuf_runtime_signalLock_internal_runtime_atomic_Uint32_runtime_cpuLogWrite__2_internal_runtime_atomic_Pointer_runtime_profBuf__runtime_cpuSleep__ptr_runtime_wakeableSleep_runtime_cpuLogDone__chan_left_chan_struct__runtime_cpuBuf__2__ptr_runtime_traceBuf_runtime_reader_internal_runtime_atomic_Pointer_runtime_g__runtime_markWorkerLabels__2__4_runtime_traceArg_runtime_goStopReasons__2__3_runtime_traceArg_runtime_goBlockReasons__2__16_runtime_traceArg_runtime_enabled_bool_runtime_enabledWithAllocFree_bool_runtime_gen_internal_runtime_atomic_Uintptr_runtime_lastNonZeroGen_uintptr_runtime_shutdown_internal_runtime_atomic_Bool_runtime_exitingSyscall_internal_runtime_atomic_Int32_runtime_seqGC_uint64_runtime_minPageHeapAddr_uint64_runtime_debugMalloc_bool_
{
  runtime_mutex_1 lock;
  runtime_traceBuf_0 *reading;
  runtime_traceBuf_0 *empty;
  runtime_traceBufQueue full[2];
  internal_runtime_atomic_Bool workAvailable;
  internal_runtime_atomic_Uintptr readerGen;
  internal_runtime_atomic_Uintptr flushedGen;
  bool headerWritten;
  uint32 doneSema[2];
  runtime_traceStackTable stackTab[2];
  runtime_traceStringTable stringTab[2];
  runtime_traceTypeTable typeTab[2];
  runtime_profBuf *cpuLogRead[2];
  internal_runtime_atomic_Uint32 signalLock;
  internal_runtime_atomic_Pointer_runtime_profBuf_ cpuLogWrite[2];
  runtime_wakeableSleep *cpuSleep;
  _chan_left_chan_struct__0 cpuLogDone;
  runtime_traceBuf_0 *cpuBuf[2];
  internal_runtime_atomic_Pointer_runtime_g_ reader;
  unsigned __int64 markWorkerLabels[2][4];
  unsigned __int64 goStopReasons[2][3];
  unsigned __int64 goBlockReasons[2][16];
  bool enabled;
  bool enabledWithAllocFree;
  internal_runtime_atomic_Uintptr gen;
  uintptr lastNonZeroGen;
  internal_runtime_atomic_Bool shutdown;
  internal_runtime_atomic_Int32 exitingSyscall;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 seqGC;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 minPageHeapAddr;
  bool debugMalloc;
};

/* 4846 */
struct _slice_map_internal_abi_TypeOff__ptr_internal_abi_Type
{
  map_internal_abi_TypeOff__ptr_internal_abi_Type *array;
  int len;
  int cap;
};

/* 4847 */
struct _runtime_lock_runtime_mutex_runtime_free__19_runtime_mSpanList_
{
  runtime_mutex_1 lock;
  runtime_mSpanList_0 free[19];
};

/* 4848 */
struct __attribute__((aligned(4))) _runtime_note_runtime_note_runtime_mask__3_uint32_runtime_wanted__3_uint32_runtime_ignored__3_uint32_runtime_recv__3_uint32_runtime_state_internal_runtime_atomic_Uint32_runtime_delivering_internal_runtime_atomic_Uint32_runtime_inuse_bool_
{
  runtime_note note;
  uint32 mask[3];
  uint32 wanted[3];
  uint32 ignored[3];
  uint32 recv[3];
  internal_runtime_atomic_Uint32 state;
  internal_runtime_atomic_Uint32 delivering;
  bool inuse;
};

/* 4849 */
typedef void (*func_ptr_runtime_g_bool)(runtime_g_0 *, bool *);

/* 4850 */
typedef void (*func_ptr_runtime_siginfo_comma__ptr_runtime_sigctxt_comma__ptr_runtime_g_bool)(runtime_siginfo *, runtime_sigctxt *, runtime_g_0 *, bool *);

/* 4851 */
struct _slice__ptr_runtime_dbgVar
{
  runtime_dbgVar **array;
  int len;
  int cap;
};

/* 4852 */
struct _runtime_cgocheck_int32_runtime_clobberfree_int32_runtime_disablethp_int32_runtime_dontfreezetheworld_int32_runtime_efence_int32_runtime_gccheckmark_int32_runtime_gcpacertrace_int32_runtime_gcshrinkstackoff_int32_runtime_gcstoptheworld_int32_runtime_gctrace_int32_runtime_invalidptr_int32_runtime_madvdontneed_int32_runtime_runtimeContentionStacks_internal_runtime_atomic_Int32_runtime_scavtrace_int32_runtime_scheddetail_int32_runtime_schedtrace_int32_runtime_tracebackancestors_int32_runtime_asyncpreemptoff_int32_runtime_harddecommit_int32_runtime_adaptivestackstart_int32_runtime_tracefpunwindoff_int32_runtime_traceadvanceperiod_int32_runtime_traceCheckStackOwnership_int32_runtime_profstackdepth_int32_runtime_malloc_bool_runtime_inittrace_int32_runtime_sbrk_int32_runtime_traceallocfree_internal_runtime_atomic_Int32_runtime_panicnil_internal_runtime_atomic_Int32_runtime_asynctimerchan_internal_runtime_atomic_Int32_
{
  int32 cgocheck;
  int32 clobberfree;
  int32 disablethp;
  int32 dontfreezetheworld;
  int32 efence;
  int32 gccheckmark;
  int32 gcpacertrace;
  int32 gcshrinkstackoff;
  int32 gcstoptheworld;
  int32 gctrace;
  int32 invalidptr;
  int32 madvdontneed;
  internal_runtime_atomic_Int32 runtimeContentionStacks;
  int32 scavtrace;
  int32 scheddetail;
  int32 schedtrace;
  int32 tracebackancestors;
  int32 asyncpreemptoff;
  int32 harddecommit;
  int32 adaptivestackstart;
  int32 tracefpunwindoff;
  int32 traceadvanceperiod;
  int32 traceCheckStackOwnership;
  int32 profstackdepth;
  bool malloc;
  int32 inittrace;
  int32 sbrk;
  internal_runtime_atomic_Int32 traceallocfree;
  internal_runtime_atomic_Int32 panicnil;
  internal_runtime_atomic_Int32 asynctimerchan;
};

/* 4853 */
struct __attribute__((aligned(4))) _runtime_lock_runtime_mutex_runtime_seed__32_uint8_runtime_state_internal_chacha8rand_State_runtime_init_bool_
{
  runtime_mutex_1 lock;
  uint8 seed[32];
  internal_chacha8rand_State state;
  bool init;
};

/* 4854 */
struct _runtime_signalLock_internal_runtime_atomic_Uint32_runtime_hz_internal_runtime_atomic_Int32_
{
  internal_runtime_atomic_Uint32 signalLock;
  internal_runtime_atomic_Int32 hz;
};

/* 4855 */
struct _runtime_lock_runtime_mutex_runtime_newm_runtime_muintptr_runtime_waiting_bool_runtime_wake_runtime_note_runtime_haveTemplateThread_uint32_
{
  runtime_mutex_1 lock;
  unsigned int newm;
  bool waiting;
  runtime_note wake;
  uint32 haveTemplateThread;
};

/* 4856 */
struct _runtime_sema_uint32_runtime_active_bool_runtime_offset_internal_runtime_atomic_Int64_runtime_records__slice_internal_profilerecord_StackRecord_runtime_labels__slice_unsafe_Pointer_
{
  uint32 sema;
  bool active;
  internal_runtime_atomic_Int64 offset;
  _slice_internal_profilerecord_StackRecord records;
  _slice_unsafe_Pointer_0 labels;
};

/* 4857 */
struct _runtime_lock_runtime_mutex_runtime_free__ptr_runtime_gcBitsArena_runtime_next__ptr_runtime_gcBitsArena_runtime_current__ptr_runtime_gcBitsArena_runtime_previous__ptr_runtime_gcBitsArena_
{
  runtime_mutex_1 lock;
  runtime_gcBitsArena *free;
  runtime_gcBitsArena *next;
  runtime_gcBitsArena *current;
  runtime_gcBitsArena *previous;
};

/* 4858 */
struct _runtime_gcPercentGoal_internal_runtime_atomic_Uint64_runtime_memoryLimitGoal_internal_runtime_atomic_Uint64_runtime_assistTime_internal_runtime_atomic_Int64_runtime_backgroundTime_internal_runtime_atomic_Int64_
{
  internal_runtime_atomic_Uint64 gcPercentGoal;
  internal_runtime_atomic_Uint64 memoryLimitGoal;
  internal_runtime_atomic_Int64 assistTime;
  internal_runtime_atomic_Int64 backgroundTime;
};

/* 4859 */
struct _runtime_spinAfterRaggedBarrier_internal_runtime_atomic_Bool_runtime_restartedDueTo27993_bool_
{
  internal_runtime_atomic_Bool spinAfterRaggedBarrier;
  bool restartedDueTo27993;
};

/* 4860 */
struct _runtime_mutex_runtime_persistentAlloc_
{
  runtime_mutex_1 mutex;
  runtime_persistentAlloc_1 persistentAlloc;
};

/* 4861 */
struct _runtime_lock_runtime_mutex_runtime_reuse__slice_runtime_liveUserArenaChunk_runtime_fault__slice_runtime_liveUserArenaChunk_
{
  runtime_mutex_1 lock;
  _slice_runtime_liveUserArenaChunk reuse;
  _slice_runtime_liveUserArenaChunk fault;
};

/* 4862 */
struct _sync_Once_net_val_int_
{
  sync_Once_1 Once;
  int val;
};

/* 4863 */
struct _sync_Mutex_net_byName_map_string_net_byName_net_byAddr_map_string__slice_string_net_expire_time_Time_net_path_string_net_mtime_time_Time_net_size_int64_
{
  sync_Mutex Mutex;
  map_string_net_byName_0 byName;
  map_string__slice_string_0 byAddr;
  time_Time_1 expire;
  string_0 path;
  time_Time_1 mtime;
  int64 size;
};

/* 4864 */
typedef void (*funcint_comma_int_error)(int, int, error_0 *);

/* 4865 */
typedef void (*funcint_comma_syscall_Sockaddr_error)(int, syscall_Sockaddr_0, error_0 *);

/* 4866 */
typedef void (*funcint_comma_int_comma_int_int_comma_error)(int, int, int, int *, error_0 *);

/* 4867 */
typedef void (*funccontext_Context_comma_funccontext_Context_comma_string_comma_string__slice_net_IPAddr_comma_error_comma_string_comma_string__slice_net_IPAddr_comma_error)(context_Context_0, funccontext_Context_comma_string_comma_string__slice_net_IPAddr_comma_error, string_0, string_0, _slice_net_IPAddr_0 *, error_0 *);

/* 4868 */
typedef void (*func_string_comma_error)(string_0 *, error_0 *);

/* 4869 */
struct _slice__ptr_crypto_tls_cipherSuite
{
  crypto_tls_cipherSuite **array;
  int len;
  int cap;
};

/* 4870 */
struct _slice_struct__crypto_tls_scheme_crypto_tls_SignatureScheme_crypto_tls_minModulusBytes_int_crypto_tls_maxVersion_uint16_
{
  _crypto_tls_scheme_crypto_tls_SignatureScheme_crypto_tls_minModulusBytes_int_crypto_tls_maxVersion_uint16_ *array;
  int len;
  int cap;
};

/* 4871 */
struct _reflect_b_bool_reflect_x_interface__
{
  bool b;
  interface__0 x;
};

/* 4872 */
struct _slice_unicode_foldPair
{
  unicode_foldPair *array;
  int len;
  int cap;
};

/* 4873 */
struct _slice_compress_flate_compressionLevel
{
  compress_flate_compressionLevel *array;
  int len;
  int cap;
};

/* 4874 */
struct _slice__ptr_sync_Pool
{
  sync_Pool_0 **array;
  int len;
  int cap;
};

/* 4875 */
typedef void (*funcuint32_comma__slice_uint8_uint32)(uint32, _slice_uint8_0, uint32 *);

/* 4876 */
typedef void (*funcstring_comma_string__slice_uint8_comma_error)(string_0, string_0, _slice_uint8_0 *, error_0 *);

/* 4877 */
typedef void (*funcstring_string_comma_error)(string_0, string_0 *, error_0 *);

/* 4878 */
struct _slice__ptr_time_Location
{
  time_Location_0 **array;
  int len;
  int cap;
};

/* 4879 */
struct _slice_strconv_leftCheat
{
  strconv_leftCheat *array;
  int len;
  int cap;
};

/* 4880 */
typedef void (*func_ptr_internal_poll_FD_comma__ptr_internal_poll_FD_comma_int64_int64_comma_bool_comma_error)(internal_poll_FD *, internal_poll_FD *, int64, int64 *, bool *, error_0 *);

/* 4881 */
struct _slice_net_http_sniffSig
{
  net_http_sniffSig *array;
  int len;
  int cap;
};

/* 4882 */
typedef void (*func_ptr_net_http_http2serverConn_comma_interface__bool)(net_http_http2serverConn *, interface__0, bool *);

/* 4883 */
struct noalg_struct__F_uintptr_X0_string_X1__ptr_archive_zip_Writer_
{
  uintptr F;
  string_0 X0;
  archive_zip_Writer *X1;
};

/* 4884 */
struct noalg_struct__F_uintptr_X0__ptr_archive_zip_Writer_
{
  uintptr F;
  archive_zip_Writer *X0;
};

/* 4885 */
typedef main_fInfo_0 main_fInfo_1;

/* 4886 */
struct noalg_struct__F_uintptr_X0__ptr__ptr_time_Timer_X1__ptr_os_exec_Cmd_
{
  uintptr F;
  time_Timer_0 **X0;
  os_exec_Cmd *X1;
};

/* 4887 */
typedef hchan<os_exec_ctxResult> *chan_os_exec_ctxResult;

/* 4888 */
struct noalg_struct__F_uintptr_X0__ptr_os_exec_Cmd_X1__ptr_bool_
{
  uintptr F;
  os_exec_Cmd *X0;
  bool *X1;
};

/* 4889 */
typedef noalg_struct__F_uintptr_X0_chan_os_exec_goroutineStatus_1_X1_chan_error_ *noalg__ptr_struct__F_uintptr_X0_chan_os_exec_goroutineStatus_1_X1_chan_error_;

/* 4890 */
typedef noalg_struct__F_uintptr_X0_io_Writer_X1__ptr_os_File_ *noalg__ptr_struct__F_uintptr_X0_io_Writer_X1__ptr_os_File_;

/* 4891 */
typedef noalg_struct__F_uintptr_X0__ptr_os_File_X1__ptr_os_exec_Cmd_ *noalg__ptr_struct__F_uintptr_X0__ptr_os_File_X1__ptr_os_exec_Cmd_;

/* 4892 */
typedef io_Closer_0 io_Closer_1;

/* 4893 */
struct noalg_struct__F_uintptr_X0__ptr_net_textproto_Reader_
{
  uintptr F;
  net_textproto_Reader *X0;
};

/* 4894 */
struct noalg_struct__F_uintptr_X0__ptr_error_
{
  uintptr F;
  error_0 *X0;
};

/* 4895 */
struct noalg_struct__F_uintptr_X0__ptr_error_X1_net_http_Header_
{
  uintptr F;
  error_0 *X0;
  net_http_Header X1;
};

/* 4896 */
struct noalg_struct__F_uintptr_R__ptr_net_http_onceCloseListener_
{
  uintptr F;
  net_http_onceCloseListener *R;
};

/* 4897 */
typedef void (*func_ptr_net_http_Server_comma_net_Listener)(net_http_Server *, net_Listener_0);

/* 4898 */
struct noalg_struct__F_uintptr_X0_net_Listener_
{
  uintptr F;
  net_Listener_0 X0;
};

/* 4899 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_Server_X1__ptr_net_Listener_
{
  uintptr F;
  net_http_Server *X0;
  net_Listener_0 *X1;
};

/* 4900 */
struct noalg_struct__F_uintptr_R__ptr_net_http_Server_
{
  uintptr F;
  net_http_Server *R;
};

/* 4901 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_pattern_
{
  uintptr F;
  net_http_pattern *X0;
};

/* 4902 */
struct noalg_struct__F_uintptr_X0_go_shape_map_string_bool_X1__ptr__7_uintptr_
{
  uintptr F;
  go_shape_map_string_bool X0;
  uintptr (*X1)[7];
};

/* 4903 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_conn_X1__ptr__ptr_net_http_response_
{
  uintptr F;
  net_http_conn *X0;
  net_http_response **X1;
};

/* 4904 */
struct noalg_struct__F_uintptr_X0_bool_X1_net_http_Header_X2__ptr_map_string_bool_
{
  uintptr F;
  bool X0;
  net_http_Header X1;
  map_string_bool_0 *X2;
};

/* 4905 */
struct noalg_struct__F_uintptr_R__ptr_net_http_response_
{
  uintptr F;
  net_http_response *R;
};

/* 4906 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_conn_X1_time_Duration_
{
  uintptr F;
  net_http_conn *X0;
  __int64 X1;
};

/* 4907 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_connReader_
{
  uintptr F;
  net_http_connReader *X0;
};

/* 4908 */
struct noalg_struct__F_uintptr_X0__ptr__slice_net_http_muxEntry_X1_net_http_muxEntry_
{
  uintptr F;
  _slice_net_http_muxEntry *X0;
  net_http_muxEntry X1;
};

/* 4909 */
struct noalg_struct__F_uintptr_X0_string_X1_map_string_bool_
{
  uintptr F;
  string_0 X0;
  map_string_bool_0 X1;
};

/* 4910 */
typedef void (*func_slice__ptr_net_http_pattern_error)(_slice__ptr_net_http_pattern, error_0 *);

/* 4911 */
struct noalg_struct__F_uintptr_X0__ptr_error_X1_func_ptr_net_http_pattern_error_
{
  uintptr F;
  error_0 *X0;
  func_ptr_net_http_pattern_error X1;
};

/* 4912 */
struct noalg_struct__F_uintptr_X0__ptr_error_X1__ptr_int_
{
  uintptr F;
  error_0 *X0;
  int *X1;
};

/* 4913 */
struct noalg_struct__F_uintptr_R__ptr_net_http_http2writePushPromise_
{
  uintptr F;
  net_http_http2writePushPromise *R;
};

/* 4914 */
struct noalg_struct__F_uintptr_R__ptr_net_http_http2writeResHeaders_
{
  uintptr F;
  net_http_http2writeResHeaders *R;
};

/* 4915 */
typedef noalg_struct__F_uintptr_X0__ptr_net_http_http2serverConn_X1__ptr_net_http_http2startPushRequest_ *noalg__ptr_struct__F_uintptr_X0__ptr_net_http_http2serverConn_X1__ptr_net_http_http2startPushRequest_;

/* 4916 */
typedef noalg_struct__F_uintptr_X0__ptr_net_http_http2stream_X1_time_Time_ *noalg__ptr_struct__F_uintptr_X0__ptr_net_http_http2stream_X1_time_Time_;

/* 4917 */
struct noalg_struct__F_uintptr_R__ptr_net_http_http2responseWriterState_
{
  uintptr F;
  net_http_http2responseWriterState *R;
};

/* 4918 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_http2requestBody_
{
  uintptr F;
  net_http_http2requestBody *X0;
};

/* 4919 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_http2serverConn_X1_interface__
{
  uintptr F;
  net_http_http2serverConn *X0;
  interface__0 X1;
};

/* 4920 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_http2responseWriter_X1__ptr_net_http_Request_X2__ptr_bool_X3__ptr_net_http_http2serverConn_
{
  uintptr F;
  net_http_http2responseWriter *X0;
  net_http_Request *X1;
  bool *X2;
  net_http_http2serverConn *X3;
};

/* 4921 */
typedef noalg_struct__F_uintptr_R_net_http_Handler_ *noalg__ptr_struct__F_uintptr_R_net_http_Handler_;

/* 4922 */
struct noalg_struct__F_uintptr_X0_net_Conn_
{
  uintptr F;
  net_Conn_0 X0;
};

/* 4923 */
struct noalg_struct__F_uintptr_X0_interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool__
{
  uintptr F;
  interface__C__chan_left_chan_time_Time_Resettime_Duration_bool_Stop_bool__0 X0;
};

/* 4924 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_http2serverConn_
{
  uintptr F;
  net_http_http2serverConn *X0;
};

/* 4925 */
typedef noalg_struct__F_uintptr_X0_chan_struct__ *noalg__ptr_struct__F_uintptr_X0_chan_struct__;

/* 4926 */
struct noalg_struct__F_uintptr_X0__ptr_net_http_http2serverInternalState_X1__ptr_net_http_http2serverConn_
{
  uintptr F;
  net_http_http2serverInternalState *X0;
  net_http_http2serverConn *X1;
};

/* 4927 */
struct noalg_struct__F_uintptr_R__ptr_net_http_http2serverConn_
{
  uintptr F;
  net_http_http2serverConn *R;
};

/* 4928 */
typedef noalg_struct__F_uintptr_X0__ptr_net_http_http2Server_ *noalg__ptr_struct__F_uintptr_X0__ptr_net_http_http2Server_;

/* 4929 */
struct noalg_struct__F_uintptr_X0__ptr_sync_Cond_
{
  uintptr F;
  sync_Cond_0 *X0;
};

/* 4930 */
struct noalg_struct__F_uintptr_X0__ptr_int_X1__ptr_bytes_Buffer_
{
  uintptr F;
  int *X0;
  bytes_Buffer_0 *X1;
};

/* 4931 */
struct noalg_struct__F_uintptr_X0__ptr_vendor_golang_org_x_net_http2_hpack_Decoder_X1_funcvendor_golang_org_x_net_http2_hpack_HeaderField_
{
  uintptr F;
  vendor_golang_org_x_net_http2_hpack_Decoder *X0;
  funcvendor_golang_org_x_net_http2_hpack_HeaderField X1;
};

/* 4932 */
typedef hash<net_http_http2SettingID_comma_bool> *map_net_http_http2SettingID_bool;

/* 4933 */
struct noalg_struct__F_uintptr_X0_net_http_File_
{
  uintptr F;
  net_http_File X0;
};

/* 4934 */
struct noalg_struct__F_uintptr_X0_io_fs_FileInfo_
{
  uintptr F;
  io_fs_FileInfo X0;
};

/* 4935 */
struct noalg_struct__F_uintptr_X0__ptr_io_PipeReader_
{
  uintptr F;
  io_PipeReader_0 *X0;
};

/* 4936 */
struct noalg_struct__F_uintptr_X0_net_http_anyDirs_
{
  uintptr F;
  net_http_anyDirs X0;
};

/* 4937 */
typedef hash<net_http_http2FrameType_comma_net_http_http2frameParser> *map_net_http_http2FrameType_net_http_http2frameParser;

/* 4938 */
typedef hash<net_http_http2FrameType_comma_map_net_http_http2Flags_string> *map_net_http_http2FrameType_map_net_http_http2Flags_string;

/* 4939 */
typedef hash<net_http_http2FrameType_comma_string> *map_net_http_http2FrameType_string;

/* 4940 */
typedef hash<net_http_http2ErrCode_comma_string> *map_net_http_http2ErrCode_string;

/* 4941 */
typedef hash<net_http_http2SettingID_comma_string> *map_net_http_http2SettingID_string;

/* 4942 */
typedef hash<net_http_ConnState_comma_string> *map_net_http_ConnState_string;

/* 4943 */
struct _slice_vendor_golang_org_x_text_unicode_norm_Properties
{
  vendor_golang_org_x_text_unicode_norm_Properties *array;
  int len;
  int cap;
};

/* 4944 */
typedef hash<string_comma_map_string_string> *map_string_map_string_string_0;

/* 4945 */
struct noalg_struct__F_uintptr_X0_string_X1__slice_interface__
{
  uintptr F;
  string_0 X0;
  _slice_interface__0 X1;
};

/* 4946 */
struct noalg_struct__F_uintptr_X0__ptr__slice_uint8_
{
  uintptr F;
  _slice_uint8_0 *X0;
};

/* 4947 */
typedef log_Logger_0 log_Logger_1;

/* 4948 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_certificateVerifyMsg_
{
  uintptr F;
  crypto_tls_certificateVerifyMsg *X0;
};

/* 4949 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_finishedMsg_
{
  uintptr F;
  crypto_tls_finishedMsg *X0;
};

/* 4950 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_certificateStatusMsg_
{
  uintptr F;
  crypto_tls_certificateStatusMsg *X0;
};

/* 4951 */
struct noalg_struct__F_uintptr_X0_int_X1_crypto_tls_Certificate_
{
  uintptr F;
  int X0;
  crypto_tls_Certificate X1;
};

/* 4952 */
struct noalg_struct__F_uintptr_X0_crypto_tls_Certificate_
{
  uintptr F;
  crypto_tls_Certificate X0;
};

/* 4953 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_certificateMsgTLS13_
{
  uintptr F;
  crypto_tls_certificateMsgTLS13 *X0;
};

/* 4954 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_certificateRequestMsgTLS13_
{
  uintptr F;
  crypto_tls_certificateRequestMsgTLS13 *X0;
};

/* 4955 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_newSessionTicketMsgTLS13_
{
  uintptr F;
  crypto_tls_newSessionTicketMsgTLS13 *X0;
};

/* 4956 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_keyUpdateMsg_
{
  uintptr F;
  crypto_tls_keyUpdateMsg *X0;
};

/* 4957 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_encryptedExtensionsMsg_
{
  uintptr F;
  crypto_tls_encryptedExtensionsMsg *X0;
};

/* 4958 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_serverHelloMsg_X1__slice_uint8_
{
  uintptr F;
  crypto_tls_serverHelloMsg *X0;
  _slice_uint8_0 X1;
};

/* 4959 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_serverHelloMsg_
{
  uintptr F;
  crypto_tls_serverHelloMsg *X0;
};

/* 4960 */
struct noalg_struct__F_uintptr_X0_crypto_tls_keyShare_
{
  uintptr F;
  crypto_tls_keyShare X0;
};

/* 4961 */
struct noalg_struct__F_uintptr_X0_crypto_tls_pskIdentity_
{
  uintptr F;
  crypto_tls_pskIdentity X0;
};

/* 4962 */
struct noalg_struct__F_uintptr_X0_bool_X1__ptr_crypto_tls_clientHelloMsg_
{
  uintptr F;
  bool X0;
  crypto_tls_clientHelloMsg *X1;
};

/* 4963 */
struct noalg_struct__F_uintptr_X0__slice_uint16_
{
  uintptr F;
  _slice_uint16_0 X0;
};

/* 4964 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_clientHelloMsg_X1_bool_X2__slice_uint8_
{
  uintptr F;
  crypto_tls_clientHelloMsg *X0;
  bool X1;
  _slice_uint8_0 X2;
};

/* 4965 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_clientHelloMsg_
{
  uintptr F;
  crypto_tls_clientHelloMsg *X0;
};

/* 4966 */
struct noalg_struct__F_uintptr_X0__slice_uint8_X1_int_
{
  uintptr F;
  _slice_uint8_0 X0;
  int X1;
};

/* 4967 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_tls_clientHandshakeStateTLS13_
{
  uintptr F;
  crypto_tls_clientHandshakeStateTLS13 *X0;
};

/* 4968 */
struct __attribute__((aligned(4))) noalg_struct__F_uintptr_X0_crypto_tls_CurveID_
{
  uintptr F;
  unsigned __int16 X0;
};

/* 4969 */
typedef crypto_SignerOpts_0 crypto_SignerOpts_1;

/* 4970 */
struct noalg_struct__F_uintptr_R__ptr_crypto_tls_cipherSuiteTLS13_
{
  uintptr F;
  crypto_tls_cipherSuiteTLS13 *R;
};

/* 4971 */
struct noalg_struct__F_uintptr_X0__ptr_error_X1__ptr_crypto_tls_Conn_
{
  uintptr F;
  error_0 *X0;
  crypto_tls_Conn *X1;
};

/* 4972 */
struct noalg_struct__F_uintptr_X0__slice_uint8_
{
  uintptr F;
  _slice_uint8_0 X0;
};

/* 4973 */
struct noalg_struct__F_uintptr_X0_chan_struct__X1_chan_error_X2__ptr_error_
{
  uintptr F;
  chan_struct__0 X0;
  chan_error_0 X1;
  error_0 *X2;
};

/* 4974 */
struct noalg_struct__F_uintptr_X0__ptr_sync_atomic_Int32_
{
  uintptr F;
  sync_atomic_Int32 *X0;
};

/* 4975 */
struct noalg_struct__F_uintptr_X0__ptr__slice_uint8_X1__ptr__slice_uint8_
{
  uintptr F;
  _slice_uint8_0 *X0;
  _slice_uint8_0 *X1;
};

/* 4976 */
struct noalg_struct__F_uintptr_X0_func_hash_Hash_
{
  uintptr F;
  func_hash_Hash X0;
};

/* 4977 */
typedef crypto_Signer_0 crypto_Signer_1;

/* 4978 */
typedef hash<crypto_tls_alert_comma_string> *map_crypto_tls_alert_string;

/* 4979 */
typedef hash<uint16_comma_bool> *map_uint16_bool_0;

/* 4980 */
struct _slice_crypto_internal_mlkem768_fieldElement
{
  unsigned __int16 *array;
  int len;
  int cap;
};

/* 4981 */
struct noalg_struct__F_uintptr_R_crypto_Hash_
{
  uintptr F;
  unsigned int R;
};

/* 4982 */
typedef hash<uint16_comma_struct__crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_> *map_uint16_struct__crypto_internal_hpke_keySize_int_crypto_internal_hpke_nonceSize_int_crypto_internal_hpke_aead_func_slice_uint8_crypto_cipher_AEAD_comma_error_;

/* 4983 */
typedef hash<uint16_comma_struct__crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_> *map_uint16_struct__crypto_internal_hpke_curve_crypto_ecdh_Curve_crypto_internal_hpke_hash_crypto_Hash_crypto_internal_hpke_nSecret_uint16_;

/* 4984 */
typedef hash<uint16_comma_func__ptr_crypto_internal_hpke_hkdfKDF> *map_uint16_func__ptr_crypto_internal_hpke_hkdfKDF;

/* 4985 */
typedef void (*funcint_comma_crypto_x509_potentialParent)(int, crypto_x509_potentialParent);

/* 4986 */
struct noalg_struct__F_uintptr_X0__slice__ptr_crypto_x509_Certificate_X1__ptr__ptr_int_X2__ptr_error_X3__ptr_crypto_x509_Certificate_X4__ptr_error_X5__ptr__ptr_crypto_x509_Certificate_X6__ptr_crypto_x509_VerifyOptions_X7__ptr__slice__slice__ptr_crypto_x509_Certificate_
{
  uintptr F;
  _slice__ptr_crypto_x509_Certificate X0;
  int **X1;
  error_0 *X2;
  crypto_x509_Certificate *X3;
  error_0 *X4;
  crypto_x509_Certificate **X5;
  crypto_x509_VerifyOptions *X6;
  _slice__slice__ptr_crypto_x509_Certificate *X7;
};

/* 4987 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_x509_Certificate_X1__ptr_int_X2__ptr_int_
{
  uintptr F;
  crypto_x509_Certificate *X0;
  int *X1;
  int *X2;
};

/* 4988 */
struct noalg_struct__F_uintptr_X0__ptr__slice_string_X1__ptr__slice_string_X2__ptr__slice__ptr_net_url_URL_X3__ptr__slice_net_IP_
{
  uintptr F;
  _slice_string_0 *X0;
  _slice_string_0 *X1;
  _slice__ptr_net_url_URL *X2;
  _slice_net_IP_0 *X3;
};

/* 4989 */
typedef void (*funcvendor_golang_org_x_crypto_cryptobyte_String__slice_string_comma__slice__ptr_net_IPNet_comma__slice_string_comma__slice_string_comma_error)(vendor_golang_org_x_crypto_cryptobyte_String, _slice_string_0 *, _slice__ptr_net_IPNet_0 *, _slice_string_0 *, _slice_string_0 *, error_0 *);

/* 4990 */
typedef noalg_struct__F_uintptr_X0__ptr_struct__sync_Once_crypto_x509_v__ptr_crypto_x509_Certificate__X1__ptr__slice_uint8_ *noalg__ptr_struct__F_uintptr_X0__ptr_struct__sync_Once_crypto_x509_v__ptr_crypto_x509_Certificate__X1__ptr__slice_uint8_;

/* 4991 */
typedef noalg_struct__F_uintptr_X0__ptr_crypto_x509_Certificate_ *noalg__ptr_struct__F_uintptr_X0__ptr_crypto_x509_Certificate_;

/* 4992 */
struct noalg_struct__F_uintptr_R__ptr_net_ipStackCapabilities_
{
  uintptr F;
  net_ipStackCapabilities *R;
};

/* 4993 */
struct noalg_struct__F_uintptr_X0__ptr_net_UnixListener_
{
  uintptr F;
  net_UnixListener_0 *X0;
};

/* 4994 */
typedef net_UnixListener_0 net_UnixListener_1;

/* 4995 */
struct noalg_struct__F_uintptr_X0__ptr_net_sysListener_
{
  uintptr F;
  net_sysListener *X0;
};

/* 4996 */
typedef net_UnixConn_0 net_UnixConn_1;

/* 4997 */
typedef net_rawListener_0 net_rawListener_1;

/* 4998 */
struct noalg_struct__F_uintptr_X0__ptr__slice_net_nssCriterion_
{
  uintptr F;
  _slice_net_nssCriterion_0 *X0;
};

/* 4999 */
struct noalg_struct__F_uintptr_X0__ptr_net_nsswitchConfig_
{
  uintptr F;
  net_nsswitchConfig *X0;
};

/* 5000 */
struct noalg_struct__F_uintptr_R__ptr_net_nsswitchConfig_
{
  uintptr F;
  net_nsswitchConfig *R;
};

/* 5001 */
typedef net_temporaryError_0 net_temporaryError_1;

/* 5002 */
typedef net_notFoundError_0 net_notFoundError_1;

/* 5003 */
typedef net_ParseError_0 net_ParseError_1;

/* 5004 */
typedef net_temporary_0 net_temporary_1;

/* 5005 */
typedef net_timeout_0 net_timeout_1;

/* 5006 */
typedef net_OpError_0 net_OpError_1;

/* 5007 */
typedef net_TCPListener_0 net_TCPListener_1;

/* 5008 */
typedef void (*func_chan_left_chan_internal_singleflight_Result_comma_context_CancelFunc)(_chan_left_chan_internal_singleflight_Result, context_CancelFunc);

/* 5009 */
typedef noalg_struct__F_uintptr_R__ptr_net_Resolver_ *noalg__ptr_struct__F_uintptr_R__ptr_net_Resolver_;

/* 5010 */
struct _slice_struct__net_laddr_net_TCPAddr_net_value_int_
{
  _net_laddr_net_TCPAddr_net_value_int_ *array;
  int len;
  int cap;
};

/* 5011 */
typedef void (*funcint_error)(int, error_0 *);

/* 5012 */
struct noalg_struct__F_uintptr_X0_string_X1_int_
{
  uintptr F;
  string_0 X0;
  int X1;
};

/* 5013 */
struct noalg_struct__F_uintptr_X0__ptr_net_sysDialer_
{
  uintptr F;
  net_sysDialer_0 *X0;
};

/* 5014 */
typedef net_IPConn_0 net_IPConn_1;

/* 5015 */
typedef net_IPNet_0 net_IPNet_1;

/* 5016 */
typedef net_Interface_0 net_Interface_1;

/* 5017 */
struct noalg_struct__F_uintptr_X0_chan_struct__X1_chan_error_X2__ptr_error_X3__ptr_net_netFD_
{
  uintptr F;
  chan_struct__0 X0;
  chan_error_0 X1;
  error_0 *X2;
  net_netFD_0 *X3;
};

/* 5018 */
struct noalg_struct__F_uintptr_X0__ptr_internal_poll_FD_X1_time_Time_
{
  uintptr F;
  internal_poll_FD *X0;
  time_Time_1 X1;
};

/* 5019 */
typedef net_file_0 net_file_1;

/* 5020 */
struct noalg_struct__F_uintptr_X0__ptr_net_file_
{
  uintptr F;
  net_file_0 *X0;
};

/* 5021 */
struct noalg_struct__F_uintptr_X0__ptr_sync_WaitGroup_
{
  uintptr F;
  sync_WaitGroup_0 *X0;
};

/* 5022 */
typedef noalg_struct__F_uintptr_X0__ptr_net_Resolver_X1_context_Context_X2__ptr_net_dnsConfig_X3_string_X4_chan_net_result_2_ *noalg__ptr_struct__F_uintptr_X0__ptr_net_Resolver_X1_context_Context_X2__ptr_net_dnsConfig_X3_string_X4_chan_net_result_2_;

/* 5023 */
struct _slice_vendor_golang_org_x_net_dns_dnsmessage_Type
{
  unsigned __int16 *array;
  int len;
  int cap;
};

/* 5024 */
typedef void (*funcstring_comma_vendor_golang_org_x_net_dns_dnsmessage_Type_net_result_2)(string_0, unsigned __int16, net_result_2 *);

/* 5025 */
typedef void (*funcstring_comma_vendor_golang_org_x_net_dns_dnsmessage_Type)(string_0, unsigned __int16);

/* 5026 */
struct noalg_struct__F_uintptr_X0_chan_net_result_2_
{
  uintptr F;
  chan_net_result_2 X0;
};

/* 5027 */
struct noalg_struct__F_uintptr_X0__ptr_net_Resolver_X1_context_Context_X2__ptr_net_dnsConfig_X3_chan_net_result_2_
{
  uintptr F;
  net_Resolver_0 *X0;
  context_Context_0 X1;
  net_dnsConfig_0 *X2;
  chan_net_result_2 X3;
};

/* 5028 */
struct noalg_struct__F_uintptr_X0__ptr_net_Resolver_X1_context_Context_X2__ptr_net_dnsConfig_
{
  uintptr F;
  net_Resolver_0 *X0;
  context_Context_0 X1;
  net_dnsConfig_0 *X2;
};

/* 5029 */
struct noalg_struct__F_uintptr_X0__ptr_net_resolverConfig_
{
  uintptr F;
  net_resolverConfig *X0;
};

/* 5030 */
struct noalg_struct__F_uintptr_R__ptr_net_resolverConfig_
{
  uintptr F;
  net_resolverConfig *R;
};

/* 5031 */
typedef net_DNSError_0 net_DNSError_1;

/* 5032 */
struct noalg_struct__F_uintptr_X0__ptr_internal_nettrace_Trace_X1__ptr_net_sysDialer_X2_string_X3__ptr_error_
{
  uintptr F;
  internal_nettrace_Trace *X0;
  net_sysDialer_0 *X1;
  string_0 X2;
  error_0 *X3;
};

/* 5033 */
typedef net_AddrError_0 net_AddrError_1;

/* 5034 */
typedef void (*funccontext_Context_comma_bool)(context_Context_0, bool);

/* 5035 */
typedef noalg_struct__F_uintptr_X0_net_addrList_X1_net_addrList_X2__ptr_net_sysDialer_X3_chan_net_dialResult_1_X4_chan_struct__ *noalg__ptr_struct__F_uintptr_X0_net_addrList_X1_net_addrList_X2__ptr_net_sysDialer_X3_chan_net_dialResult_1_X4_chan_struct__;

/* 5036 */
typedef net_TCPConn_0 net_TCPConn_1;

/* 5037 */
typedef net_sysDialer_0 net_sysDialer_1;

/* 5038 */
typedef net_UnixAddr_0 net_UnixAddr_1;

/* 5039 */
struct noalg_struct__F_uintptr_X0__ptr_int_X1__ptr_string_
{
  uintptr F;
  int *X0;
  string_0 *X1;
};

/* 5040 */
typedef net_nssConf_0 net_nssConf_1;

/* 5041 */
typedef net_nssCriterion_0 net_nssCriterion_1;

/* 5042 */
typedef net_nssSource_0 net_nssSource_1;

/* 5043 */
typedef net_dnsConfig_0 net_dnsConfig_1;

/* 5044 */
typedef net_Resolver_0 net_Resolver_1;

/* 5045 */
struct noalg_struct__F_uintptr_X0_string_X1__ptr_net_hostLookupOrder_
{
  uintptr F;
  string_0 X0;
  int *X1;
};

/* 5046 */
typedef net_byRFC6724_0 net_byRFC6724_1;

/* 5047 */
typedef net_UDPConn_0 net_UDPConn_1;

/* 5048 */
typedef net_UDPAddr_0 net_UDPAddr_1;

/* 5049 */
typedef hash<string_comma_map_string_int> *map_string_map_string_int_0;

/* 5050 */
typedef net_netFD_0 net_netFD_1;

/* 5051 */
typedef hash<net_hostLookupOrder_comma_string> *map_net_hostLookupOrder_string_0;

/* 5052 */
typedef hchan<internal_singleflight_Result> *chan_internal_singleflight_Result;

/* 5053 */
typedef hash<vendor_golang_org_x_net_dns_dnsmessage_section_comma_string> *map_vendor_golang_org_x_net_dns_dnsmessage_section_string;

/* 5054 */
typedef hash<vendor_golang_org_x_net_dns_dnsmessage_RCode_comma_string> *map_vendor_golang_org_x_net_dns_dnsmessage_RCode_string;

/* 5055 */
typedef hash<vendor_golang_org_x_net_dns_dnsmessage_Class_comma_string> *map_vendor_golang_org_x_net_dns_dnsmessage_Class_string;

/* 5056 */
typedef noalg_struct__F_uintptr_X0__ptr_unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___X1__ptr__9_uintptr_ *noalg__ptr_struct__F_uintptr_X0__ptr_unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___X1__ptr__9_uintptr_;

/* 5057 */
typedef unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___0 unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___1;

/* 5058 */
struct noalg_struct__F_uintptr_X0__ptr__ptr_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__X1_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__X2__ptr_unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___X3__ptr_internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___X4__ptr__16_uintptr_
{
  uintptr F;
  go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 **X0;
  go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__0 X1;
  unique_uniqueMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___0 *X2;
  internal_weak_Pointer_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__ *X3;
  uintptr (*X4)[16];
};

/* 5059 */
typedef hash<crypto_Hash_comma__slice_uint8> *map_crypto_Hash__slice_uint8_0;

/* 5060 */
struct noalg_struct__F_uintptr_X0__ptr_time_Timer_
{
  uintptr F;
  time_Timer_0 *X0;
};

/* 5061 */
struct noalg_struct__F_uintptr_X0__ptr_vendor_golang_org_x_crypto_cryptobyte_Builder_
{
  uintptr F;
  vendor_golang_org_x_crypto_cryptobyte_Builder *X0;
};

/* 5062 */
struct _slice_encoding_asn1_encoder
{
  encoding_asn1_encoder *array;
  int len;
  int cap;
};

/* 5063 */
struct noalg_struct__F_uintptr_X0__ptr_crypto_ecdh_PrivateKey_
{
  uintptr F;
  crypto_ecdh_PrivateKey *X0;
};

/* 5064 */
typedef context_timerCtx_0 context_timerCtx_1;

/* 5065 */
typedef context_stringer_0 context_stringer_1;

/* 5066 */
typedef context_afterFuncer_0 context_afterFuncer_1;

/* 5067 */
typedef fmt_Stringer_0 fmt_Stringer_1;

/* 5068 */
typedef fmt_GoStringer_0 fmt_GoStringer_1;

/* 5069 */
typedef fmt_Formatter_0 fmt_Formatter_1;

/* 5070 */
struct noalg_struct__F_uintptr_X0__ptr_fmt_pp_X1_interface__X2_int32_
{
  uintptr F;
  fmt_pp_0 *X0;
  interface__0 X1;
  int32 X2;
};

/* 5071 */
typedef fmt_wrapErrors_0 fmt_wrapErrors_1;

/* 5072 */
typedef fmt_wrapError_0 fmt_wrapError_1;

/* 5073 */
typedef fmt_pp_0 fmt_pp_1;

/* 5074 */
typedef syscall_Conn_0 syscall_Conn_1;

/* 5075 */
typedef os_rawConn_0 os_rawConn_1;

/* 5076 */
struct noalg_struct__F_uintptr_X0__ptr_os_Process_
{
  uintptr F;
  os_Process_0 *X0;
};

/* 5077 */
typedef os_fileStat_0 os_fileStat_1;

/* 5078 */
typedef os_unixDirent_0 os_unixDirent_1;

/* 5079 */
struct noalg_struct__F_uintptr_X0__ptr_int_X1__ptr_internal_poll_SysFile_X2__ptr_error_X3_string_X4_int_X5_io_fs_FileMode_
{
  uintptr F;
  int *X0;
  internal_poll_SysFile *X1;
  error_0 *X2;
  string_0 X3;
  int X4;
  unsigned int X5;
};

/* 5080 */
typedef os_ProcessState_0 os_ProcessState_1;

/* 5081 */
typedef os_Process_0 os_Process_1;

/* 5082 */
typedef os_LinkError_0 os_LinkError_1;

/* 5083 */
typedef os_timeout_0 os_timeout_1;

/* 5084 */
typedef os_SyscallError_0 os_SyscallError_1;

/* 5085 */
struct noalg_struct__F_uintptr_X0__ptr_os_File_
{
  uintptr F;
  os_File_0 *X0;
};

/* 5086 */
typedef os_dirInfo_0 os_dirInfo_1;

/* 5087 */
typedef os_file_0 os_file_1;

/* 5088 */
typedef os_File_0 os_File_1;

/* 5089 */
typedef noalg_struct__F_uintptr_X0__ptr_interface__X1__ptr_bool_X2__ptr_go_shape_interface__Error_string__X3__ptr_func_go_shape_interface__Error_string__X4__ptr__3_uintptr_ *noalg__ptr_struct__F_uintptr_X0__ptr_interface__X1__ptr_bool_X2__ptr_go_shape_interface__Error_string__X3__ptr_func_go_shape_interface__Error_string__X4__ptr__3_uintptr_;

/* 5090 */
struct noalg_struct__F_uintptr_X0__ptr_internal_poll_splicePipe_
{
  uintptr F;
  internal_poll_splicePipe *X0;
};

/* 5091 */
struct noalg_struct__F_uintptr_X0__ptr_internal_poll_FD_X1_int_X2__ptr_int64_X3__ptr_error_X4__ptr_bool_
{
  uintptr F;
  internal_poll_FD *X0;
  int X1;
  int64 *X2;
  error_0 *X3;
  bool *X4;
};

/* 5092 */
struct noalg_struct__F_uintptr_X0__ptr_internal_poll_FD_
{
  uintptr F;
  internal_poll_FD *X0;
};

/* 5093 */
struct noalg_struct__F_uintptr_X0__ptr_interface__X1__ptr_bool_X2__ptr__3_uintptr_
{
  uintptr F;
  interface__0 *X0;
  bool *X1;
  uintptr (*X2)[3];
};

/* 5094 */
typedef noalg_struct__F_uintptr_X0__ptr_interface__X1__ptr_bool_X2__ptr_go_shape_bool_X3__ptr_func_go_shape_bool_X4__ptr__3_uintptr_ *noalg__ptr_struct__F_uintptr_X0__ptr_interface__X1__ptr_bool_X2__ptr_go_shape_bool_X3__ptr_func_go_shape_bool_X4__ptr__3_uintptr_;

/* 5095 */
typedef time_Timer_0 time_Timer_1;

/* 5096 */
typedef time_ParseError_0 time_ParseError_1;

/* 5097 */
typedef time_Location_0 time_Location_1;

/* 5098 */
typedef syscall_SockaddrUnix_0 syscall_SockaddrUnix_1;

/* 5099 */
struct _slice_syscall__Gid_t
{
  unsigned int *array;
  int len;
  int cap;
};

/* 5100 */
typedef syscall_NetlinkRouteAttr_0 syscall_NetlinkRouteAttr_1;

/* 5101 */
typedef syscall_NetlinkMessage_0 syscall_NetlinkMessage_1;

/* 5102 */
struct noalg_struct__F_uintptr_X0_int_
{
  uintptr F;
  int X0;
};

/* 5103 */
struct noalg_struct__F_uintptr_X0__ptr_sync_Pool_X1_interface__
{
  uintptr F;
  sync_Pool_0 *X0;
  interface__0 X1;
};

/* 5104 */
typedef syscall_Credential_0 syscall_Credential_1;

/* 5105 */
typedef syscall_SysProcAttr_0 syscall_SysProcAttr_1;

/* 5106 */
struct noalg_struct__F_uintptr_X0__ptr_sync_RWMutex_
{
  uintptr F;
  sync_RWMutex_0 *X0;
};

/* 5107 */
struct noalg_struct__F_uintptr_X0_map_string_bool_
{
  uintptr F;
  map_string_bool_0 X0;
};

/* 5108 */
struct noalg_struct__F_uintptr_X0__ptr_internal_godebug_Setting_
{
  uintptr F;
  internal_godebug_Setting *X0;
};

/* 5109 */
typedef noalg_struct__F_uintptr_R__ptr_sync_atomic_Uint64_ *noalg__ptr_struct__F_uintptr_R__ptr_sync_atomic_Uint64_;

/* 5110 */
struct noalg_struct__F_uintptr_R__ptr_internal_godebug_Setting_
{
  uintptr F;
  internal_godebug_Setting *R;
};

/* 5111 */
typedef reflect_Method_0 reflect_Method_1;

/* 5112 */
typedef reflect_ptrType_0 reflect_ptrType_1;

/* 5113 */
typedef reflect_ValueError_0 reflect_ValueError_1;

/* 5114 */
typedef reflect_layoutType_0 reflect_layoutType_1;

/* 5115 */
typedef reflect_layoutKey_0 reflect_layoutKey_1;

/* 5116 */
typedef reflect_rtype_0 reflect_rtype_1;

/* 5117 */
typedef reflect_methodValue_0 reflect_methodValue_1;

/* 5118 */
typedef void (*funcreflect_Value_unsafe_Pointer)(reflect_Value_0, void **);

/* 5119 */
typedef void (*funcreflect_Value_comma_reflect_Value_bool)(reflect_Value_0, reflect_Value_0, bool *);

/* 5120 */
typedef reflect_bitVector_0 reflect_bitVector_1;

/* 5121 */
typedef strconv_NumError_0 strconv_NumError_1;

/* 5122 */
typedef bufio_Writer_0 bufio_Writer_1;

/* 5123 */
typedef bufio_Reader_0 bufio_Reader_1;

/* 5124 */
struct _slice_strings_span_1
{
  strings_span_1 *array;
  int len;
  int cap;
};

/* 5125 */
typedef strings_singleStringReplacer_0 strings_singleStringReplacer_1;

/* 5126 */
typedef strings_appendSliceWriter_0 strings_appendSliceWriter_1;

/* 5127 */
typedef strings_genericReplacer_0 strings_genericReplacer_1;

/* 5128 */
struct noalg_struct__F_uintptr_R__ptr_strings_Replacer_
{
  uintptr F;
  strings_Replacer_0 *R;
};

/* 5129 */
typedef strings_byteStringReplacer_0 strings_byteStringReplacer_1;

/* 5130 */
typedef strings_Replacer_0 strings_Replacer_1;

/* 5131 */
typedef strings_stringFinder_0 strings_stringFinder_1;

/* 5132 */
typedef strings_Reader_0 strings_Reader_1;

/* 5133 */
typedef hash<string_comma__ptr_unicode_RangeTable> *map_string__ptr_unicode_RangeTable_0;

/* 5134 */
typedef unicode_RangeTable_0 unicode_RangeTable_1;

/* 5135 */
typedef io_PipeWriter_0 io_PipeWriter_1;

/* 5136 */
struct noalg_struct__F_uintptr_X0__ptr_io_pipe_
{
  uintptr F;
  io_pipe_0 *X0;
};

/* 5137 */
typedef io_LimitedReader_0 io_LimitedReader_1;

/* 5138 */
typedef io_ReaderFrom_0 io_ReaderFrom_1;

/* 5139 */
typedef io_StringWriter_0 io_StringWriter_1;

/* 5140 */
struct _slice_sync_poolLocal
{
  sync_poolLocal_0 *array;
  int len;
  int cap;
};

/* 5141 */
typedef sync_poolChainElt_0 sync_poolChainElt_1;

/* 5142 */
typedef sync_poolLocal_0 sync_poolLocal_1;

/* 5143 */
struct noalg_struct__F_uintptr_X0__ptr_sync_atomic_Uint32_
{
  uintptr F;
  sync_atomic_Uint32 *X0;
};

/* 5144 */
struct noalg_struct__F_uintptr_X0__ptr_sync_Mutex_
{
  uintptr F;
  sync_Mutex *X0;
};

/* 5145 */
typedef sync_entry_0 sync_entry_1;

/* 5146 */
typedef sync_readOnly_0 sync_readOnly_1;

/* 5147 */
typedef errors_errorString_0 errors_errorString_1;

/* 5148 */
struct _slice_int8_0
{
  int8 *array;
  int len;
  int cap;
};

/* 5149 */
struct _slice_int16_0
{
  int16 *array;
  int len;
  int cap;
};

/* 5150 */
struct _slice_int64_0
{
  int64 *array;
  int len;
  int cap;
};

/* 5151 */
struct noalg_struct__F_uintptr_X0_uintptr_X1_uintptr_X2__ptr_runtime_g_X3__ptr_int_X4_int_X5__slice_uintptr_
{
  uintptr F;
  uintptr X0;
  uintptr X1;
  runtime_g_0 *X2;
  int *X3;
  int X4;
  _slice_uintptr_0 X5;
};

/* 5152 */
struct __attribute__((aligned(4))) noalg_struct__F_uintptr_X0_uintptr_X1_bool_
{
  uintptr F;
  uintptr X0;
  bool X1;
};

/* 5153 */
struct noalg_struct__F_uintptr_X0_uintptr_X1__ptr__slice_runtime_untracedG_4_
{
  uintptr F;
  uintptr X0;
  _slice_runtime_untracedG_4 *X1;
};

/* 5154 */
struct noalg_struct__F_uintptr_X0_uintptr_
{
  uintptr F;
  uintptr X0;
};

/* 5155 */
struct noalg_struct__F_uintptr_X0__ptr__ptr_runtime_m_X1_uintptr_
{
  uintptr F;
  runtime_m_0 **X0;
  uintptr X1;
};

/* 5156 */
typedef runtime_timeTimer_0 runtime_timeTimer_1;

/* 5157 */
struct __attribute__((aligned(4))) noalg_struct__F_uintptr_X0_runtime_traceLocker_X1_bool_
{
  uintptr F;
  runtime_traceLocker X0;
  bool X1;
};

/* 5158 */
struct noalg_struct__F_uintptr_X0_uintptr_X1_uintptr_X2_uintptr_X3__ptr_runtime_g_
{
  uintptr F;
  uintptr X0;
  uintptr X1;
  uintptr X2;
  runtime_g_0 *X3;
};

/* 5159 */
struct noalg_struct__F_uintptr_X0_uintptr_X1__ptr_runtime_g_
{
  uintptr F;
  uintptr X0;
  runtime_g_0 *X1;
};

/* 5160 */
typedef noalg_struct__F_uintptr_R_runtime_metricReader_ *noalg__ptr_struct__F_uintptr_R_runtime_metricReader_;

/* 5161 */
typedef void (*funcuint32_comma_runtime_vdsoSymbolKey_bool)(uint32, runtime_vdsoSymbolKey, bool *);

/* 5162 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_vdsoInfo_X1_int32_
{
  uintptr F;
  runtime_vdsoInfo *X0;
  int32 X1;
};

/* 5163 */
typedef hash<uint32_comma__slice__ptr_internal_abi_Type> *map_uint32__slice__ptr_internal_abi_Type;

/* 5164 */
struct noalg_struct__F_uintptr_X0_runtime_traceWriter_X1_uintptr_
{
  uintptr F;
  runtime_traceWriter X0;
  uintptr X1;
};

/* 5165 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_traceStringTable_X1_uintptr_
{
  uintptr F;
  runtime_traceStringTable *X0;
  uintptr X1;
};

/* 5166 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_traceStringTable_X1_uintptr_X2_uint64_X3__ptr_string_
{
  uintptr F;
  runtime_traceStringTable *X0;
  uintptr X1;
  __attribute__((packed)) __attribute__((aligned(1))) uint64 X2;
  string_0 *X3;
};

/* 5167 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_m_
{
  uintptr F;
  runtime_m_0 *X0;
};

/* 5168 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_traceBuf_X1_uintptr_
{
  uintptr F;
  runtime_traceBuf_0 *X0;
  uintptr X1;
};

/* 5169 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_traceWriter_
{
  uintptr F;
  runtime_traceWriter *X0;
};

/* 5170 */
typedef void (*funcunsafe_Pointer_comma_unsafe_Pointer_int32)(void *, void *, int32 *);

/* 5171 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_stkframe_X1_uintptr_
{
  uintptr F;
  runtime_stkframe *X0;
  uintptr X1;
};

/* 5172 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1__ptr_runtime_g_X2_int32_
{
  uintptr F;
  runtime_g_0 *X0;
  runtime_g_0 *X1;
  int32 X2;
};

/* 5173 */
struct noalg_struct__F_uintptr_X0__ptr_int_X1__ptr_int_X2__ptr_int_X3__ptr_int_
{
  uintptr F;
  int *X0;
  int *X1;
  int *X2;
  int *X3;
};

/* 5174 */
typedef void (*funcbool_int)(bool, int *);

/* 5175 */
struct __attribute__((aligned(4))) noalg_struct__F_uintptr_X0__ptr_runtime_unwinder_X1_uintptr_X2_uintptr_X3_uintptr_X4__ptr_runtime_g_X5_runtime_unwindFlags_
{
  uintptr F;
  runtime_unwinder *X0;
  uintptr X1;
  uintptr X2;
  uintptr X3;
  runtime_g_0 *X4;
  unsigned __int8 X5;
};

/* 5176 */
typedef void (*funcuint8_comma_uint8_comma_uint8)(uint8, uint8, uint8);

/* 5177 */
struct __attribute__((aligned(4))) noalg_struct__F_uintptr_X0_unsafe_Pointer_X1_int32_X2_uint8_
{
  uintptr F;
  void *X0;
  int32 X1;
  uint8 X2;
};

/* 5178 */
struct noalg_struct__F_uintptr_X0_unsafe_Pointer_X1_funcuint8_comma_uint8_bool_
{
  uintptr F;
  void *X0;
  funcuint8_comma_uint8_bool X1;
};

/* 5179 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1__ptr_runtime_untracedG_4_X2_uintptr_
{
  uintptr F;
  runtime_g_0 *X0;
  runtime_untracedG_4 *X1;
  uintptr X2;
};

/* 5180 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_timer_X1_int64_
{
  uintptr F;
  runtime_timer_0 *X0;
  int64 X1;
};

/* 5181 */
typedef runtime_funcinl_0 runtime_funcinl_1;

/* 5182 */
struct noalg_struct__F_uintptr_X0__slice_runtime_scase_X1__slice_uint16_
{
  uintptr F;
  _slice_runtime_scase X0;
  _slice_uint16_0 X1;
};

/* 5183 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_rwmutex_
{
  uintptr F;
  runtime_rwmutex *X0;
};

/* 5184 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_p_
{
  uintptr F;
  runtime_p_0 *X0;
};

/* 5185 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_mcache_
{
  uintptr F;
  runtime_mcache_0 *X0;
};

/* 5186 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_funcval_X1__ptr_runtime_g_X2_uintptr_
{
  uintptr F;
  runtime_funcval *X0;
  runtime_g_0 *X1;
  uintptr X2;
};

/* 5187 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1_int32_
{
  uintptr F;
  runtime_g_0 *X0;
  int32 X1;
};

/* 5188 */
struct noalg_struct__F_uintptr_X0_runtime_traceLocker_X1__ptr_runtime_g_
{
  uintptr F;
  runtime_traceLocker X0;
  runtime_g_0 *X1;
};

/* 5189 */
struct noalg_struct__F_uintptr_X0_runtime_traceLocker_
{
  uintptr F;
  runtime_traceLocker X0;
};

/* 5190 */
typedef void (*funcint)(int);

/* 5191 */
struct noalg_struct__F_uintptr_X0__ptr__ptr_runtime_m_
{
  uintptr F;
  runtime_m_0 **X0;
};

/* 5192 */
struct noalg_struct__F_uintptr_X0_runtime_worldStop_
{
  uintptr F;
  runtime_worldStop X0;
};

/* 5193 */
struct __attribute__((aligned(4))) noalg_struct__F_uintptr_X0__ptr_runtime_g_X1_runtime_stwReason_
{
  uintptr F;
  runtime_g_0 *X0;
  unsigned __int8 X1;
};

/* 5194 */
struct noalg_struct__F_uintptr_X0_uint32_X1_uint32_
{
  uintptr F;
  uint32 X0;
  uint32 X1;
};

/* 5195 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_
{
  uintptr F;
  runtime_g_0 *X0;
};

/* 5196 */
struct noalg_struct__F_uintptr_X0__ptr_runtime__panic_X1__ptr_bool_X2__ptr_runtime_g_X3_uintptr_X4_uintptr_
{
  uintptr F;
  runtime__panic_0 *X0;
  bool *X1;
  runtime_g_0 *X2;
  uintptr X3;
  uintptr X4;
};

/* 5197 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1_uintptr_X2_uintptr_
{
  uintptr F;
  runtime_g_0 *X0;
  uintptr X1;
  uintptr X2;
};

/* 5198 */
struct noalg_struct__F_uintptr_X0_string_
{
  uintptr F;
  string_0 X0;
};

/* 5199 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1__ptr_runtime__panic_X2__ptr_bool_
{
  uintptr F;
  runtime_g_0 *X0;
  runtime__panic_0 *X1;
  bool *X2;
};

/* 5200 */
typedef runtime_PanicNilError_0 runtime_PanicNilError_1;

/* 5201 */
typedef runtime_stringer_0 runtime_stringer_1;

/* 5202 */
struct noalg_struct__F_uintptr_X0_unsafe_Pointer_X1__ptr_runtime_m_
{
  uintptr F;
  void *X0;
  runtime_m_0 *X1;
};

/* 5203 */
struct noalg_struct__F_uintptr_X0__ptr_uint32_X1_int32_
{
  uintptr F;
  uint32 *X0;
  int32 X1;
};

/* 5204 */
typedef runtime_pollDesc_0 runtime_pollDesc_1;

/* 5205 */
struct noalg_struct__F_uintptr_X0__slice_uint8_X1__ptr_runtime_g_X2_uintptr_X3_uintptr_X4_bool_X5__ptr_int_
{
  uintptr F;
  _slice_uint8_0 X0;
  runtime_g_0 *X1;
  uintptr X2;
  uintptr X3;
  bool X4;
  int *X5;
};

/* 5206 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1_int_X2__slice_uintptr_
{
  uintptr F;
  runtime_g_0 *X0;
  int X1;
  _slice_uintptr_0 X2;
};

/* 5207 */
struct noalg_struct__F_uintptr_X0_uintptr_X1_uintptr_X2__ptr_runtime_g_X3__ptr_int_X4_int_X5__ptr_runtime_mLockProfile_
{
  uintptr F;
  uintptr X0;
  uintptr X1;
  runtime_g_0 *X2;
  int *X3;
  int X4;
  runtime_mLockProfile_0 *X5;
};

/* 5208 */
struct noalg_struct__F_uintptr_X0_unsafe_Pointer_X1__ptr_runtime_bucket_
{
  uintptr F;
  void *X0;
  runtime_bucket *X1;
};

/* 5209 */
typedef void (*funcruntime_offAddr_comma_uintptr)(runtime_offAddr, uintptr);

/* 5210 */
struct noalg_struct__F_uintptr_X0__ptr_struct__runtime_base_runtime_offAddr_runtime_bound_runtime_offAddr__
{
  uintptr F;
  _runtime_base_runtime_offAddr_runtime_bound_runtime_offAddr_ *X0;
};

/* 5211 */
struct __attribute__((aligned(4))) noalg_struct__F_uintptr_X0__ptr_runtime_mheap_X1_uintptr_X2__ptr__ptr_runtime_mspan_X3_runtime_spanClass_
{
  uintptr F;
  runtime_mheap *X0;
  uintptr X1;
  runtime_mspan_0 **X2;
  unsigned __int8 X3;
};

/* 5212 */
struct __attribute__((aligned(4))) noalg_struct__F_uintptr_X0_bool_
{
  uintptr F;
  bool X0;
};

/* 5213 */
struct noalg_struct__F_uintptr_X0__ptr__ptr_runtime_mspan_
{
  uintptr F;
  runtime_mspan_0 **X0;
};

/* 5214 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_mspan_X1__ptr_runtime_mheap_
{
  uintptr F;
  runtime_mspan_0 *X0;
  runtime_mheap *X1;
};

/* 5215 */
struct noalg_struct__F_uintptr_X0__ptr_uintptr_X1__ptr_runtime_pageAlloc_X2_runtime_chunkIdx_X3_uint_X4_uintptr_
{
  uintptr F;
  uintptr *X0;
  runtime_pageAlloc *X1;
  unsigned int X2;
  uint X3;
  uintptr X4;
};

/* 5216 */
typedef runtime_scavengerState_0 runtime_scavengerState_1;

/* 5217 */
typedef void (*func_ptr_internal_runtime_atomic_Int64_bool)(internal_runtime_atomic_Int64 *, bool *);

/* 5218 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1_int64_
{
  uintptr F;
  runtime_g_0 *X0;
  int64 X1;
};

/* 5219 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1__ptr_int64_X2__ptr_runtime_gcWork_
{
  uintptr F;
  runtime_g_0 *X0;
  int64 *X1;
  runtime_gcWork_0 *X2;
};

/* 5220 */
struct noalg_struct__F_uintptr_X0__ptr_int_
{
  uintptr F;
  int *X0;
};

/* 5221 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1__ptr_runtime_p_
{
  uintptr F;
  runtime_g_0 *X0;
  runtime_p_0 *X1;
};

/* 5222 */
struct noalg_struct__F_uintptr_X0_int64_X1_runtime_worldStop_
{
  uintptr F;
  __attribute__((packed)) __attribute__((aligned(1))) int64 X0;
  runtime_worldStop X1;
};

/* 5223 */
struct __attribute__((packed)) __attribute__((aligned(4))) noalg_struct__F_uintptr_X0_int64_
{
  uintptr F;
  int64 X0;
};

/* 5224 */
struct noalg_struct__F_uintptr_X0_runtime_waitReason_X1_func_ptr_runtime_p_
{
  uintptr F;
  unsigned __int8 X0;
  func_ptr_runtime_p X1;
};

/* 5225 */
struct noalg_struct__F_uintptr_X0__ptr_bool_
{
  uintptr F;
  bool *X0;
};

/* 5226 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_worldStop_
{
  uintptr F;
  runtime_worldStop *X0;
};

/* 5227 */
struct noalg_struct__F_uintptr_X0__ptr_int64_X1__ptr_runtime_worldStop_
{
  uintptr F;
  int64 *X0;
  runtime_worldStop *X1;
};

/* 5228 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_eface_X1__ptr_runtime_eface_X2_uintptr_X3__ptr_internal_abi_Type_X4__ptr_internal_abi_PtrType_
{
  uintptr F;
  runtime_eface *X0;
  runtime_eface *X1;
  uintptr X2;
  internal_abi_Type *X3;
  internal_abi_PtrType *X4;
};

/* 5229 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_eface_
{
  uintptr F;
  runtime_eface *X0;
};

/* 5230 */
typedef hash<string_comma_runtime_metricData> *map_string_runtime_metricData_0;

/* 5231 */
struct noalg_struct__F_uintptr_X0__ptr__ptr_runtime_mcache_
{
  uintptr F;
  runtime_mcache_0 **X0;
};

/* 5232 */
struct noalg_struct__F_uintptr_X0__ptr__ptr_runtime_mspan_X1_uintptr_
{
  uintptr F;
  runtime_mspan_0 **X0;
  uintptr X1;
};

/* 5233 */
typedef runtime_mapextra_0 runtime_mapextra_1;

/* 5234 */
typedef runtime_hmap_0 runtime_hmap_1;

/* 5235 */
struct noalg_struct__F_uintptr_X0__ptr__ptr_runtime_notInHeap_X1_uintptr_X2_uintptr_X3__ptr_runtime_sysMemStat_
{
  uintptr F;
  runtime_notInHeap_0 **X0;
  uintptr X1;
  uintptr X2;
  unsigned __int64 *X3;
};

/* 5236 */
typedef runtime_workbuf_0 runtime_workbuf_1;

/* 5237 */
typedef runtime_pinner_0 runtime_pinner_1;

/* 5238 */
typedef runtime_p_0 runtime_p_1;

/* 5239 */
typedef runtime_mcache_0 runtime_mcache_1;

/* 5240 */
struct _slice__ptr_internal_abi_InterfaceType
{
  internal_abi_InterfaceType **array;
  int len;
  int cap;
};

/* 5241 */
struct noalg_struct__F_uintptr_R__ptr_runtime_itabTableType_
{
  uintptr F;
  runtime_itabTableType *R;
};

/* 5242 */
typedef runtime_metricFloat64Histogram_0 runtime_metricFloat64Histogram_1;

/* 5243 */
typedef runtime_Frames_0 runtime_Frames_1;

/* 5244 */
typedef runtime_modulehash_0 runtime_modulehash_1;

/* 5245 */
typedef runtime_moduledata_0 runtime_moduledata_1;

/* 5246 */
typedef runtime__func_0 runtime__func_1;

/* 5247 */
typedef runtime_TypeAssertionError_0 runtime_TypeAssertionError_1;

/* 5248 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_g_X1_int_
{
  uintptr F;
  runtime_g_0 *X0;
  int X1;
};

/* 5249 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_hchan_
{
  uintptr F;
  runtime_hchan_0 *X0;
};

/* 5250 */
typedef runtime_traceBuf_0 runtime_traceBuf_1;

/* 5251 */
typedef runtime_coro_0 runtime_coro_1;

/* 5252 */
typedef runtime_timerWhen_0 runtime_timerWhen_1;

/* 5253 */
typedef runtime_hchan_0 runtime_hchan_1;

/* 5254 */
typedef runtime_sudog_0 runtime_sudog_1;

/* 5255 */
typedef runtime__defer_0 runtime__defer_1;

/* 5256 */
typedef runtime__panic_0 runtime__panic_1;

/* 5257 */
typedef runtime_g_0 runtime_g_1;

/* 5258 */
typedef runtime_m_0 runtime_m_1;

/* 5259 */
typedef runtime_mspan_0 runtime_mspan_1;

/* 5260 */
struct noalg_struct__F_uintptr_X0__ptr_runtime_mspan_
{
  uintptr F;
  runtime_mspan_0 *X0;
};

/* 5261 */
struct noalg_struct__F_uintptr_X0__ptr_internal_runtime_atomic_Uint64_
{
  uintptr F;
  internal_runtime_atomic_Uint64 *X0;
};

/* 5262 */
struct noalg_struct__F_uintptr_X0__ptr_internal_runtime_atomic_Int32_
{
  uintptr F;
  internal_runtime_atomic_Int32 *X0;
};

/* 5263 */
typedef funcgo_shape_string_bool slices_AppendSeq_go_shape__slice_go_shape_string_comma_go_shape_string_::_param2;

/* 5264 */
typedef _slice_go_shape_string slices_Sorted_go_shape_string_::_param4;

/* 5265 */
typedef go_shape_string_0 net_http__ptr_mapping_go_shape_string_comma_go_shape__ptr_uint8__eachPair::_param13;

/* 5266 */
typedef go_shape__ptr_uint8 net_http__ptr_mapping_go_shape_string_comma_go_shape__ptr_uint8__eachPair::_param14;

/* 5267 */
typedef go_shape_string_0 net_http__ptr_ServeMux_matchingMethods_Keys_go_shape_map_string_bool_comma_go_shape_string_comma_go_shape_bool__func1::_param4;

/* 5268 */
struct retval_114414
{
  int n;
  error_0 err;
};

/* 5269 */
struct retval_11488C
{
  int n;
  error_0 err;
};

/* 5270 */
struct retval_114D88
{
  uint16 fDate;
  uint16 fTime;
};

/* 5271 */
struct retval_116E28
{
  bool valid;
  bool require;
};

/* 5272 */
struct retval_117010
{
  io_Writer_0 _r0;
  error_0 _r1;
};

/* 5273 */
struct retval_11831C
{
  _DWORD _r0[3];
};

/* 5274 */
struct retval_1183A8
{
  int _r0;
  error_0 _r1;
};

/* 5275 */
struct retval_118C00
{
  int _r0;
  error_0 _r1;
};

/* 5276 */
struct retval_118C98
{
  io_WriteCloser_0 _r0;
  error_0 _r1;
};

/* 5277 */
struct retval_118D24
{
  io_WriteCloser_0 _r0;
  error_0 _r1;
};

/* 5278 */
struct retval_1193D0
{
  int _r0;
  error_0 _r1;
};

/* 5279 */
struct retval_1194FC
{
  int n;
  error_0 err;
};

/* 5280 */
struct retval_119588
{
  int n;
  error_0 err;
};

/* 5281 */
struct retval_9E178
{
  int32 mappedRune;
  bool foundMapping;
};

/* 5282 */
struct retval_2AA458
{
  int _r0;
  int _r1;
  error_0 _r2;
};

/* 5283 */
struct retval_2AA810
{
  bool _r0;
  error_0 _r1;
};

/* 5284 */
struct retval_2A5A5C
{
  os_File_0 *_r0;
  error_0 _r1;
};

/* 5285 */
struct retval_2A60EC
{
  os_File_0 *_r0;
  error_0 _r1;
};

/* 5286 */
struct retval_2A61B0
{
  os_File_0 *_r0;
  error_0 _r1;
};

/* 5287 */
struct retval_2A7FD4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5288 */
struct retval_2A823C
{
  int n;
  error_0 err;
};

/* 5289 */
struct retval_2A8928
{
  _slice_string_0 _r0;
  error_0 _r1;
};

/* 5290 */
struct retval_2A8B40
{
  _slice_string_0 _r0;
  error_0 _r1;
};

/* 5291 */
struct retval_2A923C
{
  string_0 _r0;
  error_0 _r1;
};

/* 5292 */
struct retval_F7B0C
{
  int newpivot;
  bool alreadyPartitioned;
};

/* 5293 */
struct retval_F8ADC
{
  int pivot;
  int hint;
};

/* 5294 */
struct retval_262900
{
  net_http_File _r0;
  error_0 _r1;
};

/* 5295 */
struct retval_26496C
{
  string_0 etag;
  string_0 remain;
};

/* 5296 */
struct retval_265CDC
{
  bool done;
  string_0 rangeHeader;
};

/* 5297 */
struct retval_266744
{
  int64 _r0;
  error_0 _r1;
};

/* 5298 */
struct retval_266850
{
  string_0 msg;
  int httpStatus;
};

/* 5299 */
struct retval_267104
{
  _slice_net_http_httpRange _r0;
  error_0 _r1;
};

/* 5300 */
struct retval_267B28
{
  string_0 lower;
  bool ok;
};

/* 5301 */
struct retval_2681BC
{
  int _r0;
  error_0 _r1;
};

/* 5302 */
struct retval_2684EC
{
  int _r0;
  error_0 _r1;
};

/* 5303 */
struct retval_268ADC
{
  net_http_http2goAwayFlowError _p0;
  string_0 _r0;
};

/* 5304 */
struct retval_269374
{
  net_http_http2FrameHeader _r0;
  error_0 _r1;
};

/* 5305 */
struct retval_269A20
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5306 */
struct retval_26A3D0
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5307 */
struct retval_26AB04
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5308 */
struct retval_26AD4C
{
  uint32 v;
  bool ok;
};

/* 5309 */
struct retval_26B518
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5310 */
struct retval_26B7F0
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5311 */
struct retval_26BCC0
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5312 */
struct retval_26BD6C
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5313 */
struct retval_26C1CC
{
  net_http_http2Frame _r0;
  error_0 err;
};

/* 5314 */
struct retval_26CB88
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5315 */
struct retval_26CDA8
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5316 */
struct retval_26D0D4
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5317 */
struct retval_26D520
{
  net_http_http2Frame _r0;
  error_0 err;
};

/* 5318 */
struct retval_26E064
{
  net_http_http2Frame _r0;
  error_0 _r1;
};

/* 5319 */
struct retval_26FC94
{
  uint64 n;
  error_0 err;
};

/* 5320 */
struct retval_27036C
{
  string_0 lower;
  bool ascii;
};

/* 5321 */
struct retval_2706F8
{
  int n;
  error_0 err;
};

/* 5322 */
struct retval_270E7C
{
  int n;
  error_0 err;
};

/* 5323 */
struct retval_27112C
{
  int n;
  error_0 err;
};

/* 5324 */
struct retval_2732F4
{
  context_Context_0 ctx;
  func cancel;
};

/* 5325 */
struct retval_2735E0
{
  vendor_golang_org_x_net_http2_hpack_Encoder *_r0;
  bytes_Buffer_1 *_r1;
};

/* 5326 */
struct retval_2735F8
{
  int _r0;
  net_http_http2stream *_r1;
};

/* 5327 */
struct retval_27B4C8
{
  net_http_http2responseWriter *_r0;
  net_http_Request *_r1;
  error_0 _r2;
};

/* 5328 */
struct retval_27C0E0
{
  net_http_http2responseWriter *_r0;
  net_http_Request *_r1;
  error_0 _r2;
};

/* 5329 */
struct retval_27E060
{
  int n;
  error_0 err;
};

/* 5330 */
struct retval_27E22C
{
  int n;
  error_0 err;
};

/* 5331 */
struct retval_27E524
{
  int n;
  error_0 err;
};

/* 5332 */
struct retval_2803F0
{
  int n;
  error_0 err;
};

/* 5333 */
struct retval_280460
{
  int n;
  error_0 err;
};

/* 5334 */
struct retval_2804CC
{
  int n;
  error_0 err;
};

/* 5335 */
struct retval_2809C0
{
  uint32 _r0;
  error_0 _r1;
};

/* 5336 */
struct retval_282B44
{
  net_http_http2FrameWriteRequest _r0;
  net_http_http2FrameWriteRequest _r1;
  int _r2;
};

/* 5337 */
struct retval_2831E4
{
  net_http_http2FrameWriteRequest _r0;
  bool _r1;
};

/* 5338 */
struct retval_283D24
{
  net_http_http2FrameWriteRequest _r0;
  bool _r1;
};

/* 5339 */
struct retval_28438C
{
  int n;
  error_0 err;
};

/* 5340 */
struct retval_28440C
{
  _slice_net_http_keyValues kvs;
  net_http_headerSorter *hs;
};

/* 5341 */
struct retval_2851D0
{
  net_http_noBody _p0;
  _slice_uint8_0 _p1;
  int _r0;
  error_0 _r1;
};

/* 5342 */
struct retval_285200
{
  net_http_noBody _p0;
  error_0 _r0;
};

/* 5343 */
struct retval_285214
{
  net_http_noBody _p0;
  io_Writer_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 5344 */
struct retval_285250
{
  net_http_pattern *_r0;
  error_0 err;
};

/* 5345 */
struct retval_2882FC
{
  int major;
  int minor;
  bool ok;
};

/* 5346 */
struct retval_28850C
{
  string_0 method;
  string_0 requestURI;
  string_0 proto;
  bool ok;
};

/* 5347 */
struct retval_2888EC
{
  int n;
  error_0 err;
};

/* 5348 */
struct retval_289A98
{
  net_http_routingNode *_r0;
  _slice_string_0 _r1;
};

/* 5349 */
struct retval_289C28
{
  net_http_routingNode *_r0;
  _slice_string_0 _r1;
};

/* 5350 */
struct retval_289F4C
{
  net_http_routingNode *_r0;
  _slice_string_0 _r1;
};

/* 5351 */
struct retval_28A3CC
{
  string_0 seg;
  string_0 rest;
};

/* 5352 */
struct retval_28AE98
{
  net_http_Handler h;
  string_0 pattern;
};

/* 5353 */
struct retval_28B2D0
{
  net_http_Handler h;
  string_0 pattern;
};

/* 5354 */
struct retval_28B684
{
  net_url_URL *_r0;
  bool _r1;
};

/* 5355 */
struct retval_28BA1C
{
  int n;
  error_0 err;
};

/* 5356 */
struct retval_28C504
{
  int64 n;
  error_0 err;
};

/* 5357 */
struct retval_28D1B4
{
  int n;
  error_0 err;
};

/* 5358 */
struct retval_28D624
{
  int n;
  error_0 err;
};

/* 5359 */
struct retval_28DDE4
{
  net_http_response *w;
  error_0 err;
};

/* 5360 */
struct retval_2914B0
{
  int n;
  error_0 err;
};

/* 5361 */
struct retval_291520
{
  int n;
  error_0 err;
};

/* 5362 */
struct retval_29158C
{
  int n;
  error_0 err;
};

/* 5363 */
struct retval_2948E4
{
  net_http_Handler h;
  string_0 patStr;
  net_http_pattern *_r2;
  _slice_string_0 matches;
};

/* 5364 */
struct retval_295094
{
  net_http_routingNode *_r0;
  _slice_string_0 matches;
  net_url_URL *redirectTo;
};

/* 5365 */
struct retval_2981C4
{
  int n;
  error_0 err;
};

/* 5366 */
struct retval_29A5F8
{
  net_http_Header _r0;
  error_0 _r1;
};

/* 5367 */
struct retval_29AA14
{
  int n;
  error_0 err;
};

/* 5368 */
struct retval_29AB94
{
  int n;
  error_0 err;
};

/* 5369 */
struct retval_29BA5C
{
  int n;
  error_0 err;
};

/* 5370 */
struct retval_29BAF4
{
  int64 _r0;
  error_0 _r1;
};

/* 5371 */
struct retval_29BDE0
{
  net_url_URL *_r0;
  error_0 _r1;
};

/* 5372 */
struct retval_29BF3C
{
  net_http_Request *req;
  error_0 err;
};

/* 5373 */
struct retval_29E958
{
  int newpivot;
  bool alreadyPartitioned;
};

/* 5374 */
struct retval_29F8A0
{
  int pivot;
  int hint;
};

/* 5375 */
struct retval_2A2004
{
  int n;
  error_0 err;
};

/* 5376 */
struct retval_2A2110
{
  net_http_noBody *_p0;
  error_0 _r0;
};

/* 5377 */
struct retval_2A217C
{
  net_http_noBody *_p0;
  _slice_uint8_0 _p1;
  int _r0;
  error_0 _r1;
};

/* 5378 */
struct retval_2A2204
{
  net_http_noBody *_p0;
  io_Writer_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 5379 */
struct retval_2A255C
{
  int n;
  error_0 err;
};

/* 5380 */
struct retval_2A25E8
{
  int n;
  error_0 err;
};

/* 5381 */
struct retval_2A2704
{
  int64 n;
  error_0 err;
};

/* 5382 */
struct retval_2A2794
{
  net_http_File _r0;
  error_0 _r1;
};

/* 5383 */
struct retval_2A2C28
{
  net_http_http2goAwayFlowError *_p0;
  string_0 _r0;
};

/* 5384 */
struct retval_2A3FC8
{
  int n;
  error_0 err;
};

/* 5385 */
struct retval_2A4094
{
  int n;
  error_0 err;
};

/* 5386 */
struct retval_2A4120
{
  int n;
  error_0 err;
};

/* 5387 */
struct retval_2A42EC
{
  net_http_onceCloseListener _p0;
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 5388 */
struct retval_2A4368
{
  net_http_onceCloseListener *_p0;
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 5389 */
struct retval_2A4564
{
  int n;
  error_0 err;
};

/* 5390 */
struct retval_2A45FC
{
  int n;
  error_0 err;
};

/* 5391 */
struct retval_2A4864
{
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 5392 */
struct retval_2A4AD4
{
  net_http_ResponseWriter _p0;
  net_http_Request *_p1;
};

/* 5393 */
struct retval_12650
{
  uintptr _r0;
  bool _r1;
};

/* 5394 */
struct retval_25D4F4
{
  int n;
  error_0 err;
};

/* 5395 */
struct retval_25D9B0
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5396 */
struct retval_25DB44
{
  uint64 n;
  error_0 err;
};

/* 5397 */
struct retval_259288
{
  uint64 i;
  bool nameValueMatch;
};

/* 5398 */
struct retval_25A518
{
  int n;
  error_0 err;
};

/* 5399 */
struct retval_25B444
{
  _slice_uint8_0 remain;
  error_0 err;
};

/* 5400 */
struct retval_25B78C
{
  vendor_golang_org_x_net_http2_hpack_undecodedString u;
  _slice_uint8_0 remain;
  error_0 err;
};

/* 5401 */
struct retval_25BA1C
{
  string_0 _r0;
  error_0 _r1;
};

/* 5402 */
struct retval_25C96C
{
  uint64 i;
  bool nameValueMatch;
};

/* 5403 */
struct retval_254288
{
  string_0 _r0;
  error_0 _r1;
};

/* 5404 */
struct retval_254DB8
{
  string_0 vm;
  bool bidi;
  error_0 err;
};

/* 5405 */
struct retval_256154
{
  string_0 _r0;
  error_0 _r1;
};

/* 5406 */
struct retval_256B30
{
  string_0 _r0;
  error_0 _r1;
};

/* 5407 */
struct retval_257378
{
  uint16 v;
  int sz;
};

/* 5408 */
struct retval_920C0
{
  int32 n;
  uintptr errno;
};

/* 5409 */
struct retval_9261C
{
  string_0 before;
  string_0 after;
  bool found;
};

/* 5410 */
struct retval_24F000
{
  uint16 _r0;
  int _r1;
};

/* 5411 */
struct retval_24F0E8
{
  uint16 _r0;
  int _r1;
};

/* 5412 */
struct retval_2529E4
{
  int n;
  bool ok;
};

/* 5413 */
struct retval_253260
{
  uint16 v;
  int sz;
};

/* 5414 */
struct retval_253560
{
  uint16 v;
  int sz;
};

/* 5415 */
struct retval_2538EC
{
  uint16 v;
  int sz;
};

/* 5416 */
struct retval_253BEC
{
  uint16 v;
  int sz;
};

/* 5417 */
struct retval_15664
{
  bool selected;
  bool received;
};

/* 5418 */
struct retval_16050
{
  bool selected;
  bool received;
};

/* 5419 */
struct retval_188E8
{
  uintptr pc;
  string_0 file;
  int line;
  bool ok;
};

/* 5420 */
struct retval_1A1AC
{
  int _r0;
  internal_abi_ITab *_r1;
};

/* 5421 */
struct retval_1B484
{
  void *v;
  uintptr size;
};

/* 5422 */
struct retval_1BB0C
{
  void *_r0;
  uintptr _r1;
};

/* 5423 */
struct retval_1BCC4
{
  unsigned int v;
  runtime_mspan_0 *s;
  bool shouldhelpgc;
};

/* 5424 */
struct retval_1CB18
{
  void *buckets;
  runtime_bmap_0 *nextOverflow;
};

/* 5425 */
struct retval_1CFEC
{
  void *_r0;
  void *_r1;
};

/* 5426 */
struct retval_1F9D8
{
  runtime_typePointers _r0;
  uintptr _r1;
};

/* 5427 */
struct retval_2BB48
{
  unsigned __int8 typ;
  int64 duration;
};

/* 5428 */
struct retval_31B80
{
  runtime_g_0 *_r0;
  int64 _r1;
};

/* 5429 */
struct retval_32408
{
  uint64 goal;
  uint64 minTrigger;
};

/* 5430 */
struct retval_328FC
{
  uint64 _r0;
  uint64 _r1;
};

/* 5431 */
struct retval_342B8
{
  uintptr released;
  float64 worked;
};

/* 5432 */
struct retval_34F50
{
  uint _r0;
  uint _r1;
};

/* 5433 */
struct retval_354B4
{
  unsigned int _r0;
  uint _r1;
};

/* 5434 */
struct retval_35D28
{
  float64 _r0;
  bool _r1;
};

/* 5435 */
struct retval_35F8C
{
  uintptr p;
  bool conservative;
};

/* 5436 */
struct retval_3621C
{
  runtime_stackObject *root;
  runtime_stackObjectBuf *restBuf;
  int restIdx;
};

/* 5437 */
struct retval_36B48
{
  runtime_sweepLocked _r0;
  bool _r1;
};

/* 5438 */
struct retval_3B2BC
{
  uintptr _r0;
  bool _r1;
};

/* 5439 */
struct retval_3E184
{
  uintptr _r0;
  runtime_offAddr _r1;
};

/* 5440 */
struct retval_3EE18
{
  uintptr addr;
  uintptr scav;
};

/* 5441 */
struct retval_3F960
{
  uintptr _r0;
  uintptr _r1;
};

/* 5442 */
struct retval_3FAA0
{
  uintptr _r0;
  uintptr _r1;
};

/* 5443 */
struct retval_4121C
{
  uint _r0;
  uint _r1;
};

/* 5444 */
struct retval_4132C
{
  uint _r0;
  uint _r1;
};

/* 5445 */
struct retval_4155C
{
  uint _r0;
  uint _r1;
};

/* 5446 */
struct retval_41718
{
  uint32 cycle;
  bool alreadyFlushed;
};

/* 5447 */
struct retval_439A4
{
  uintptr _r0;
  bool _r1;
};

/* 5448 */
struct retval_43B7C
{
  uintptr _r0;
  bool _r1;
};

/* 5449 */
struct retval_46638
{
  runtime_gList _r0;
  int32 _r1;
};

/* 5450 */
struct retval_49BC4
{
  runtime_PanicNilError_0 *_p0;
  string_0 _r0;
};

/* 5451 */
struct retval_49D7C
{
  func _r0;
  bool _r1;
};

/* 5452 */
struct retval_4C028
{
  bool _r0;
  uintptr _r1;
};

/* 5453 */
struct retval_4E5F8
{
  runtime_g_0 **_r0;
  uintptr _r1;
};

/* 5454 */
struct retval_525BC
{
  runtime_m_0 *mp;
  bool last;
};

/* 5455 */
struct retval_539AC
{
  runtime_g_0 *gp;
  bool inheritTime;
  bool tryWakeP;
};

/* 5456 */
struct retval_54E24
{
  runtime_g_0 *gp;
  bool inheritTime;
  int64 rnow;
  int64 pollUntil;
  bool newWork;
};

/* 5457 */
struct retval_555F0
{
  runtime_p_0 *_r0;
  runtime_g_0 *_r1;
};

/* 5458 */
struct retval_5D120
{
  runtime_p_0 *_r0;
  int64 _r1;
};

/* 5459 */
struct retval_5D2A4
{
  runtime_p_0 *_r0;
  int64 _r1;
};

/* 5460 */
struct retval_5D86C
{
  runtime_g_0 *gp;
  bool inheritTime;
};

/* 5461 */
struct retval_5D95C
{
  runtime_gQueue drainQ;
  uint32 n;
};

/* 5462 */
struct retval_5E3B8
{
  uint32 count;
  uint64 time;
};

/* 5463 */
struct retval_5ED84
{
  _slice_uint64_0 data;
  _slice_unsafe_Pointer_0 tags;
  bool eof;
};

/* 5464 */
struct retval_5FE40
{
  int32 level;
  bool all;
  bool crash;
};

/* 5465 */
struct retval_61754
{
  void *_p1;
  bool _r0;
};

/* 5466 */
struct retval_61808
{
  int _r0;
  bool _r1;
};

/* 5467 */
struct retval_6387C
{
  runtime_sudog_0 *found;
  int64 now;
  int64 tailtime;
};

/* 5468 */
struct retval_69B7C
{
  runtime_bitvector argMap;
  bool hasReflectStackObj;
};

/* 5469 */
struct retval_69F04
{
  runtime_bitvector locals;
  runtime_bitvector args;
  _slice_runtime_stackObjectRecord objs;
};

/* 5470 */
struct retval_6AC2C
{
  string_0 s;
  _slice_uint8_0 b;
};

/* 5471 */
struct retval_6B570
{
  int64 _r0;
  bool _r1;
};

/* 5472 */
struct retval_6B794
{
  int64 _r0;
  bool _r1;
};

/* 5473 */
struct retval_6BB9C
{
  runtime_Frame_0 frame;
  bool more;
};

/* 5474 */
struct retval_6CB84
{
  int32 _r0;
  uintptr _r1;
};

/* 5475 */
struct retval_6D98C
{
  void *_p1;
  bool _r0;
};

/* 5476 */
struct retval_6DA00
{
  uintptr _p1;
  int64 _p2;
};

/* 5477 */
struct retval_6F190
{
  int64 rnow;
  int64 pollUntil;
  bool ran;
};

/* 5478 */
struct retval_72E4C
{
  string_0 _r0;
  string_0 _r1;
  string_0 _r2;
};

/* 5479 */
struct retval_7381C
{
  int n;
  int lastN;
};

/* 5480 */
struct retval_74050
{
  bool pr;
  bool stop;
};

/* 5481 */
struct retval_75884
{
  runtime_traceWriter _r0;
  bool _r1;
};

/* 5482 */
struct retval_7729C
{
  runtime_traceExpWriter _r0;
  bool _r1;
};

/* 5483 */
struct retval_77350
{
  uint64 _r0;
  bool _r1;
};

/* 5484 */
struct retval_7D5F8
{
  int32 r;
  int pos;
};

/* 5485 */
struct retval_7EA38
{
  uint64 q;
  uint64 r;
};

/* 5486 */
struct retval_7EB7C
{
  bool pr;
  bool stop;
};

/* 5487 */
struct retval_7F404
{
  uintptr _p1;
  int64 _p2;
};

/* 5488 */
struct retval_7F464
{
  uintptr _r0;
  int64 _r1;
};

/* 5489 */
struct retval_80C58
{
  interface__0 _p0;
  uintptr _p1;
  int64 _p2;
};

/* 5490 */
struct retval_82B68
{
  void *_r0;
  bool _r1;
};

/* 5491 */
struct retval_843B8
{
  void *_r0;
  bool _r1;
};

/* 5492 */
struct retval_84FF0
{
  void *_r0;
  bool _r1;
};

/* 5493 */
struct retval_85BB0
{
  uintptr base;
  runtime_mspan_0 *s;
  uintptr objIndex;
};

/* 5494 */
struct retval_8650C
{
  runtime_pollDesc_0 *_r0;
  int _r1;
};

/* 5495 */
struct retval_87228
{
  int32 ret;
  int32 errno;
};

/* 5496 */
struct retval_8872C
{
  _slice_unsafe_Pointer_0 _r0;
  _slice__slice_int32_0 _r1;
};

/* 5497 */
struct retval_8B1E8
{
  string_0 file;
  int32 line;
};

/* 5498 */
struct retval_8B310
{
  int32 _r0;
  uintptr _r1;
};

/* 5499 */
struct retval_8B39C
{
  _slice_uint8_0 newp;
  bool ok;
};

/* 5500 */
struct retval_8B56C
{
  runtime_inlineUnwinder _r0;
  runtime_inlineFrame _r1;
};

/* 5501 */
struct retval_8BA14
{
  int64 sec;
  int32 nsec;
  int64 mono;
};

/* 5502 */
struct retval_24D2DC
{
  int n;
  bool ok;
};

/* 5503 */
struct retval_24C974
{
  vendor_golang_org_x_text_unicode_bidi_Properties p;
  int size;
};

/* 5504 */
struct retval_24CA10
{
  vendor_golang_org_x_text_unicode_bidi_Properties p;
  int sz;
};

/* 5505 */
struct retval_24CD70
{
  vendor_golang_org_x_text_unicode_bidi_Properties p;
  int sz;
};

/* 5506 */
struct retval_97268
{
  interface__0 value;
  bool ok;
};

/* 5507 */
struct retval_97420
{
  interface__0 value;
  bool ok;
};

/* 5508 */
struct retval_97670
{
  interface__0 actual;
  bool loaded;
};

/* 5509 */
struct retval_97A54
{
  interface__0 actual;
  bool loaded;
  bool ok;
};

/* 5510 */
struct retval_97BEC
{
  interface__0 value;
  bool loaded;
};

/* 5511 */
struct retval_97DC4
{
  interface__0 value;
  bool ok;
};

/* 5512 */
struct retval_97E74
{
  interface__0 *_r0;
  bool _r1;
};

/* 5513 */
struct retval_97F08
{
  interface__0 previous;
  bool loaded;
};

/* 5514 */
struct retval_99390
{
  sync_poolLocal_0 *_r0;
  int _r1;
};

/* 5515 */
struct retval_99440
{
  sync_poolLocal_0 *_r0;
  int _r1;
};

/* 5516 */
struct retval_99850
{
  interface__0 _r0;
  bool _r1;
};

/* 5517 */
struct retval_999C0
{
  interface__0 _r0;
  bool _r1;
};

/* 5518 */
struct retval_99D18
{
  interface__0 _r0;
  bool _r1;
};

/* 5519 */
struct retval_99DAC
{
  interface__0 _r0;
  bool _r1;
};

/* 5520 */
struct retval_9AAB8
{
  int n;
  error_0 err;
};

/* 5521 */
struct retval_9ABB4
{
  int n;
  error_0 err;
};

/* 5522 */
struct retval_9AED0
{
  int64 written;
  error_0 err;
};

/* 5523 */
struct retval_9AF88
{
  int64 written;
  error_0 err;
};

/* 5524 */
struct retval_9B348
{
  int n;
  error_0 err;
};

/* 5525 */
struct retval_9B490
{
  _DWORD _r0[3];
};

/* 5526 */
struct retval_9B4AC
{
  _DWORD _r0[3];
};

/* 5527 */
struct retval_9B72C
{
  io_nopCloser_0 _p0;
  error_0 _r0;
};

/* 5528 */
struct retval_9B740
{
  io_nopCloserWriterTo_0 _p0;
  error_0 _r0;
};

/* 5529 */
struct retval_9BA24
{
  int n;
  error_0 err;
};

/* 5530 */
struct retval_9BC74
{
  int n;
  error_0 err;
};

/* 5531 */
struct retval_9C100
{
  int n;
  error_0 err;
};

/* 5532 */
struct retval_9C1B0
{
  int n;
  error_0 err;
};

/* 5533 */
struct retval_9C2FC
{
  int64 n;
  error_0 err;
};

/* 5534 */
struct retval_9C38C
{
  int _r0;
  error_0 _r1;
};

/* 5535 */
struct retval_9C400
{
  int _r0;
  error_0 _r1;
};

/* 5536 */
struct retval_9C474
{
  io_nopCloser_0 *_p0;
  error_0 _r0;
};

/* 5537 */
struct retval_9C4E0
{
  int n;
  error_0 err;
};

/* 5538 */
struct retval_9C56C
{
  int n;
  error_0 err;
};

/* 5539 */
struct retval_9C5FC
{
  io_nopCloserWriterTo_0 *_p0;
  error_0 _r0;
};

/* 5540 */
struct retval_9C668
{
  int n;
  error_0 err;
};

/* 5541 */
struct retval_9C6F4
{
  int n;
  error_0 err;
};

/* 5542 */
struct retval_9C784
{
  int64 n;
  error_0 err;
};

/* 5543 */
struct retval_9CB88
{
  int32 r;
  int size;
};

/* 5544 */
struct retval_9CD6C
{
  int32 r;
  int size;
};

/* 5545 */
struct retval_9CF50
{
  int32 r;
  int size;
};

/* 5546 */
struct retval_9D084
{
  int32 r;
  int size;
};

/* 5547 */
struct retval_11968C
{
  context_deadlineExceededError _p0;
  string_0 _r0;
};

/* 5548 */
struct retval_1196A8
{
  context_deadlineExceededError _p0;
  bool _r0;
};

/* 5549 */
struct retval_1196B8
{
  context_deadlineExceededError _p0;
  bool _r0;
};

/* 5550 */
struct retval_1196C8
{
  context_emptyCtx _p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5551 */
struct retval_1196FC
{
  context_emptyCtx _p0;
  _chan_left_chan_struct__0 _r0;
};

/* 5552 */
struct retval_11970C
{
  context_emptyCtx _p0;
  error_0 _r0;
};

/* 5553 */
struct retval_119734
{
  context_backgroundCtx_0 _p0;
  string_0 _r0;
};

/* 5554 */
struct retval_119750
{
  context_Context_0 ctx;
  context_CancelFunc cancel;
};

/* 5555 */
struct retval_119A28
{
  context_cancelCtx_0 *_r0;
  bool _r1;
};

/* 5556 */
struct retval_11A8B8
{
  context_Context_0 _r0;
  context_CancelFunc _r1;
};

/* 5557 */
struct retval_11AE38
{
  time_Time_1 deadline;
  bool ok;
};

/* 5558 */
struct retval_11B9B8
{
  context_deadlineExceededError *_p0;
  string_0 _r0;
};

/* 5559 */
struct retval_11BA2C
{
  context_deadlineExceededError *_p0;
  bool _r0;
};

/* 5560 */
struct retval_11BA90
{
  context_deadlineExceededError *_p0;
  bool _r0;
};

/* 5561 */
struct retval_11BAF4
{
  context_emptyCtx *_p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5562 */
struct retval_11BB6C
{
  context_emptyCtx *_p0;
  _chan_left_chan_struct__0 _r0;
};

/* 5563 */
struct retval_11BBD0
{
  context_emptyCtx *_p0;
  error_0 _r0;
};

/* 5564 */
struct retval_11BCA8
{
  context_backgroundCtx_0 _p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5565 */
struct retval_11BD04
{
  context_backgroundCtx_0 *_p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5566 */
struct retval_11BD70
{
  context_backgroundCtx_0 _p0;
  _chan_left_chan_struct__0 _r0;
};

/* 5567 */
struct retval_11BD80
{
  context_backgroundCtx_0 *_p0;
  _chan_left_chan_struct__0 _r0;
};

/* 5568 */
struct retval_11BD94
{
  context_backgroundCtx_0 _p0;
  error_0 _r0;
};

/* 5569 */
struct retval_11BDA8
{
  context_backgroundCtx_0 *_p0;
  error_0 _r0;
};

/* 5570 */
struct retval_11BDC4
{
  context_backgroundCtx_0 *_p0;
  string_0 _r0;
};

/* 5571 */
struct retval_11BE68
{
  context_cancelCtx_0 _p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5572 */
struct retval_11BF00
{
  context_cancelCtx_0 *_p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5573 */
struct retval_11BF9C
{
  context_stopCtx_0 _p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5574 */
struct retval_11C034
{
  context_stopCtx_0 *_p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5575 */
struct retval_11C0D0
{
  context_stopCtx_0 _p0;
  _chan_left_chan_struct__0 _r0;
};

/* 5576 */
struct retval_11C134
{
  context_stopCtx_0 *_p0;
  _chan_left_chan_struct__0 _r0;
};

/* 5577 */
struct retval_11C19C
{
  context_stopCtx_0 _p0;
  error_0 _r0;
};

/* 5578 */
struct retval_11C208
{
  context_stopCtx_0 *_p0;
  error_0 _r0;
};

/* 5579 */
struct retval_11C514
{
  context_valueCtx_0 _p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5580 */
struct retval_11C5AC
{
  context_valueCtx_0 *_p0;
  time_Time_1 deadline;
  bool ok;
};

/* 5581 */
struct retval_11C648
{
  context_valueCtx_0 _p0;
  _chan_left_chan_struct__0 _r0;
};

/* 5582 */
struct retval_11C6AC
{
  context_valueCtx_0 *_p0;
  _chan_left_chan_struct__0 _r0;
};

/* 5583 */
struct retval_11C714
{
  context_valueCtx_0 _p0;
  error_0 _r0;
};

/* 5584 */
struct retval_11C780
{
  context_valueCtx_0 *_p0;
  error_0 _r0;
};

/* 5585 */
struct retval_9EC40
{
  int n;
  error_0 err;
};

/* 5586 */
struct retval_9ED2C
{
  int n;
  error_0 err;
};

/* 5587 */
struct retval_9EE18
{
  int64 n;
  error_0 err;
};

/* 5588 */
struct retval_9F174
{
  int64 n;
  error_0 err;
};

/* 5589 */
struct retval_9F380
{
  int n;
  error_0 err;
};

/* 5590 */
struct retval_9F4B0
{
  uint8 _r0;
  error_0 _r1;
};

/* 5591 */
struct retval_A1214
{
  _slice_uint8_0 before;
  _slice_uint8_0 after;
  bool found;
};

/* 5592 */
struct retval_A1384
{
  int n;
  error_0 err;
};

/* 5593 */
struct retval_A14C4
{
  uint8 _r0;
  error_0 _r1;
};

/* 5594 */
struct retval_A1678
{
  int64 _r0;
  error_0 _r1;
};

/* 5595 */
struct retval_A17B8
{
  int64 n;
  error_0 err;
};

/* 5596 */
struct retval_A1D90
{
  int _r0;
  error_0 _r1;
};

/* 5597 */
struct retval_A1F68
{
  int n;
  error_0 err;
};

/* 5598 */
struct retval_A20A0
{
  uint8 _r0;
  error_0 _r1;
};

/* 5599 */
struct retval_A2254
{
  int64 _r0;
  error_0 _r1;
};

/* 5600 */
struct retval_A2394
{
  int64 n;
  error_0 err;
};

/* 5601 */
struct retval_A30E4
{
  string_0 val;
  int keylen;
  bool found;
};

/* 5602 */
struct retval_A3568
{
  int _r0;
  error_0 _r1;
};

/* 5603 */
struct retval_A3668
{
  int _r0;
  error_0 _r1;
};

/* 5604 */
struct retval_A3768
{
  int _r0;
  error_0 _r1;
};

/* 5605 */
struct retval_A38DC
{
  int n;
  error_0 err;
};

/* 5606 */
struct retval_A70C0
{
  int _r0;
  error_0 _r1;
};

/* 5607 */
struct retval_A7514
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5608 */
struct retval_A76FC
{
  int discarded;
  error_0 err;
};

/* 5609 */
struct retval_A7870
{
  int n;
  error_0 err;
};

/* 5610 */
struct retval_A7C54
{
  uint8 _r0;
  error_0 _r1;
};

/* 5611 */
struct retval_A7E08
{
  _slice_uint8_0 line;
  error_0 err;
};

/* 5612 */
struct retval_A8054
{
  _slice_uint8_0 line;
  bool isPrefix;
  error_0 err;
};

/* 5613 */
struct retval_A8258
{
  int64 n;
  error_0 err;
};

/* 5614 */
struct retval_A85AC
{
  int64 _r0;
  error_0 _r1;
};

/* 5615 */
struct retval_A8870
{
  int nn;
  error_0 err;
};

/* 5616 */
struct retval_A8B58
{
  int _r0;
  error_0 _r1;
};

/* 5617 */
struct retval_A8E30
{
  int64 n;
  error_0 err;
};

/* 5618 */
struct retval_A9BE0
{
  int advance;
  _slice_uint8_0 token;
  error_0 err;
};

/* 5619 */
struct retval_A9D78
{
  uint64 sum;
  uint64 carryOut;
};

/* 5620 */
struct retval_A9DCC
{
  uint64 diff;
  uint64 borrowOut;
};

/* 5621 */
struct retval_A9E20
{
  uint64 hi;
  uint64 lo;
};

/* 5622 */
struct retval_A9EA0
{
  float64 frac;
  int exp;
};

/* 5623 */
struct retval_AA784
{
  uint64 _r0;
  error_0 _r1;
};

/* 5624 */
struct retval_AB714
{
  int _r0;
  error_0 _r1;
};

/* 5625 */
struct retval_B0914
{
  uint32 resM;
  int resE;
  bool exact;
};

/* 5626 */
struct retval_B0A3C
{
  uint64 resM;
  int resE;
  bool exact;
};

/* 5627 */
struct retval_B0C4C
{
  uint32 _r0;
  uint32 _r1;
};

/* 5628 */
struct retval_B120C
{
  _slice_uint8_0 d;
  string_0 s;
};

/* 5629 */
struct retval_B285C
{
  int32 value;
  bool multibyte;
  string_0 tail;
  error_0 err;
};

/* 5630 */
struct retval_B2EC8
{
  string_0 _r0;
  error_0 _r1;
};

/* 5631 */
struct retval_B2F68
{
  string_0 out;
  string_0 rem;
  error_0 err;
};

/* 5632 */
struct retval_B4284
{
  reflect_abiStep *_r0;
  bool _r1;
};

/* 5633 */
struct retval_B7638
{
  string_0 value;
  bool ok;
};

/* 5634 */
struct retval_B8C38
{
  internal_abi_Type *frametype;
  sync_Pool_0 *framePool;
  reflect_abiDesc_0 abid;
};

/* 5635 */
struct retval_BA414
{
  internal_abi_Type *rcvrtype;
  internal_abi_FuncType *t;
  void *fn;
};

/* 5636 */
struct retval_24C0DC
{
  io_Writer_0 _r0;
  error_0 _r1;
};

/* 5637 */
struct retval_24C734
{
  int n;
  error_0 err;
};

/* 5638 */
struct retval_248FE8
{
  string_0 mediatype;
  map_string_string_0 params;
  error_0 err;
};

/* 5639 */
struct retval_249AD0
{
  string_0 _r0;
  bool _r1;
};

/* 5640 */
struct retval_249CE0
{
  string_0 token;
  string_0 rest;
};

/* 5641 */
struct retval_249DBC
{
  string_0 value;
  string_0 rest;
};

/* 5642 */
struct retval_24A154
{
  string_0 param;
  string_0 value;
  string_0 rest;
};

/* 5643 */
struct retval_24A474
{
  string_0 _r0;
  error_0 _r1;
};

/* 5644 */
struct retval_2450EC
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5645 */
struct retval_245384
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5646 */
struct retval_245B74
{
  int n;
  error_0 err;
};

/* 5647 */
struct retval_2464B0
{
  string_0 _r0;
  bool ok;
};

/* 5648 */
struct retval_246850
{
  net_textproto_MIMEHeader _r0;
  error_0 _r1;
};

/* 5649 */
struct retval_C2074
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5650 */
struct retval_C2430
{
  int n;
  error_0 err;
};

/* 5651 */
struct retval_C296C
{
  internal_bisect_Matcher *_r0;
  error_0 _r1;
};

/* 5652 */
struct retval_C5CE8
{
  int _r0;
  error_0 _r1;
};

/* 5653 */
struct retval_208A94
{
  uint8 sigType;
  unsigned int hash;
  error_0 err;
};

/* 5654 */
struct retval_208D78
{
  uint8 sigType;
  unsigned int hash;
  error_0 err;
};

/* 5655 */
struct retval_209468
{
  unsigned __int16 _r0;
  error_0 _r1;
};

/* 5656 */
struct retval_209CF0
{
  crypto_tls_activeCert *_r0;
  error_0 _r1;
};

/* 5657 */
struct retval_20A430
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5658 */
struct retval_20A6C4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5659 */
struct retval_20ABE8
{
  int _r0;
  error_0 _r1;
};

/* 5660 */
struct retval_20B320
{
  uint16 _r0;
  bool _r1;
};

/* 5661 */
struct retval_20C1DC
{
  int toRemove;
  uint8 good;
};

/* 5662 */
struct retval_20C2C4
{
  _slice_uint8_0 _r0;
  unsigned __int8 _r1;
  error_0 _r2;
};

/* 5663 */
struct retval_20CC94
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5664 */
struct retval_2100A0
{
  int _r0;
  error_0 _r1;
};

/* 5665 */
struct retval_210A48
{
  int _r0;
  error_0 _r1;
};

/* 5666 */
struct retval_210BB8
{
  int _r0;
  error_0 _r1;
};

/* 5667 */
struct retval_210CA0
{
  int _r0;
  error_0 _r1;
};

/* 5668 */
struct retval_211568
{
  int _r0;
  error_0 _r1;
};

/* 5669 */
struct retval_211910
{
  interface__0 _r0;
  error_0 _r1;
};

/* 5670 */
struct retval_211CE8
{
  crypto_tls_handshakeMessage _r0;
  error_0 _r1;
};

/* 5671 */
struct retval_2123E8
{
  int _r0;
  error_0 _r1;
};

/* 5672 */
struct retval_213708
{
  int _r0;
  error_0 _r1;
};

/* 5673 */
struct retval_214D6C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5674 */
struct retval_214F9C
{
  _slice_crypto_tls_echConfig _r0;
  error_0 _r1;
};

/* 5675 */
struct retval_215E3C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5676 */
struct retval_215FD4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5677 */
struct retval_216ED0
{
  crypto_tls_clientHelloMsg *_r0;
  crypto_tls_keySharePrivateKeys *_r1;
  crypto_tls_echContext *_r2;
  error_0 _r3;
};

/* 5678 */
struct retval_219C64
{
  crypto_tls_SessionState *session;
  _slice_uint8_0 earlySecret;
  _slice_uint8_0 binderKey;
  error_0 err;
};

/* 5679 */
struct retval_21B198
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5680 */
struct retval_21CCD0
{
  bool _r0;
  error_0 _r1;
};

/* 5681 */
struct retval_21DC44
{
  int max;
  bool ok;
};

/* 5682 */
struct retval_21ED48
{
  crypto_tls_Certificate *_r0;
  error_0 _r1;
};

/* 5683 */
struct retval_2250E4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5684 */
struct retval_22BAC4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5685 */
struct retval_22BB20
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5686 */
struct retval_22E6F8
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5687 */
struct retval_2336C4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5688 */
struct retval_234F5C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5689 */
struct retval_234FE0
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5690 */
struct retval_2356B0
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5691 */
struct retval_2365B0
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5692 */
struct retval_238774
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5693 */
struct retval_238CE4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5694 */
struct retval_239C98
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5695 */
struct retval_239E64
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5696 */
struct retval_23A610
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5697 */
struct retval_23A694
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5698 */
struct retval_23A88C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5699 */
struct retval_23AD40
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5700 */
struct retval_23B680
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5701 */
struct retval_23BE30
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5702 */
struct retval_23C080
{
  crypto_tls_helloRequestMsg *_p0;
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5703 */
struct retval_23C3CC
{
  _DWORD _r0[6];
};

/* 5704 */
struct retval_23D724
{
  _slice_uint8_0 _r0;
  crypto_tls_clientKeyExchangeMsg *_r1;
  error_0 _r2;
};

/* 5705 */
struct retval_23E550
{
  _slice_uint8_0 key;
  _slice_uint8_0 iv;
};

/* 5706 */
struct retval_23E910
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5707 */
struct retval_23EA80
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5708 */
struct retval_23EC78
{
  crypto_ecdh_PrivateKey *_r0;
  error_0 _r1;
};

/* 5709 */
struct retval_23FCD0
{
  _slice_uint8_0 clientMAC;
  _slice_uint8_0 serverMAC;
  _slice_uint8_0 clientKey;
  _slice_uint8_0 serverKey;
  _slice_uint8_0 clientIV;
  _slice_uint8_0 serverIV;
};

/* 5710 */
struct retval_24085C
{
  int n;
  error_0 err;
};

/* 5711 */
struct retval_240EC4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5712 */
struct retval_241238
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5713 */
struct retval_242C50
{
  _slice_uint8_0 _r0;
  crypto_tls_clientKeyExchangeMsg *_r1;
  error_0 _r2;
};

/* 5714 */
struct retval_204124
{
  crypto_internal_mlkem768_DecapsulationKey *_r0;
  error_0 _r1;
};

/* 5715 */
struct retval_2059AC
{
  _slice_uint8_0 sharedKey;
  error_0 err;
};

/* 5716 */
struct retval_200BAC
{
  uint8 arr[32];
};

/* 5717 */
struct retval_200C68
{
  uint8 arr[64];
};

/* 5718 */
struct retval_203AE8
{
  int written;
  error_0 err;
};

/* 5719 */
struct retval_203D50
{
  int n;
  error_0 err;
};

/* 5720 */
struct retval_C6338
{
  string_0 value;
  bool found;
};

/* 5721 */
struct retval_C67B8
{
  int pid;
  unsigned int err;
};

/* 5722 */
struct retval_C69A8
{
  uintptr pid;
  int32 pidfd;
  unsigned int err1;
  int mapPipe[2];
  bool locked;
};

/* 5723 */
struct retval_C844C
{
  uintptr pid;
  unsigned int errno;
};

/* 5724 */
struct retval_C84D8
{
  _slice__ptr_uint8 _r0;
  error_0 _r1;
};

/* 5725 */
struct retval_C87EC
{
  int pid;
  error_0 err;
};

/* 5726 */
struct retval_C9270
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5727 */
struct retval_C98BC
{
  _slice_syscall_NetlinkMessage _r0;
  error_0 _r1;
};

/* 5728 */
struct retval_C9B24
{
  _slice_syscall_NetlinkRouteAttr _r0;
  error_0 _r1;
};

/* 5729 */
struct retval_C9F08
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5730 */
struct retval_CA538
{
  string_0 wd;
  error_0 err;
};

/* 5731 */
struct retval_CA6F0
{
  _slice_int_0 gids;
  error_0 err;
};

/* 5732 */
struct retval_CA8A0
{
  int wpid;
  error_0 err;
};

/* 5733 */
struct retval_CA918
{
  void *_r0;
  unsigned int _r1;
  error_0 _r2;
};

/* 5734 */
struct retval_CA9BC
{
  void *_r0;
  unsigned int _r1;
  error_0 _r2;
};

/* 5735 */
struct retval_CAA64
{
  void *_r0;
  unsigned int _r1;
  error_0 _r2;
};

/* 5736 */
struct retval_CAB68
{
  void *_r0;
  unsigned int _r1;
  error_0 _r2;
};

/* 5737 */
struct retval_CAC18
{
  void *_r0;
  unsigned int _r1;
  error_0 _r2;
};

/* 5738 */
struct retval_CAC60
{
  syscall_Sockaddr_0 _r0;
  error_0 _r1;
};

/* 5739 */
struct retval_CAFBC
{
  int nfd;
  syscall_Sockaddr_0 sa;
  error_0 err;
};

/* 5740 */
struct retval_CB0FC
{
  syscall_Sockaddr_0 sa;
  error_0 err;
};

/* 5741 */
struct retval_CB1B4
{
  int nfd;
  syscall_Sockaddr_0 sa;
  error_0 err;
};

/* 5742 */
struct retval_CBBF0
{
  syscall_Sockaddr_0 sa;
  error_0 err;
};

/* 5743 */
struct retval_CBCA8
{
  int value;
  error_0 err;
};

/* 5744 */
struct retval_CBD1C
{
  int n;
  syscall_Sockaddr_0 from;
  error_0 err;
};

/* 5745 */
struct retval_CBEE0
{
  int fd;
  error_0 err;
};

/* 5746 */
struct retval_CC24C
{
  int fd;
  error_0 err;
};

/* 5747 */
struct retval_CC4CC
{
  int n;
  error_0 err;
};

/* 5748 */
struct retval_CC7D0
{
  int n;
  error_0 err;
};

/* 5749 */
struct retval_CC8E4
{
  int wpid;
  error_0 err;
};

/* 5750 */
struct retval_CCAEC
{
  int val;
  error_0 err;
};

/* 5751 */
struct retval_CCBE8
{
  int n;
  error_0 err;
};

/* 5752 */
struct retval_CCEF8
{
  int n;
  error_0 err;
};

/* 5753 */
struct retval_CD0FC
{
  int n;
  error_0 err;
};

/* 5754 */
struct retval_CD210
{
  int n;
  error_0 err;
};

/* 5755 */
struct retval_CD400
{
  int fd;
  error_0 err;
};

/* 5756 */
struct retval_CD700
{
  int nn;
  error_0 err;
};

/* 5757 */
struct retval_CD804
{
  int fd;
  error_0 err;
};

/* 5758 */
struct retval_CDAF8
{
  int n;
  error_0 err;
};

/* 5759 */
struct retval_CE0B8
{
  int written;
  error_0 err;
};

/* 5760 */
struct retval_CE2BC
{
  int n;
  error_0 err;
};

/* 5761 */
struct retval_CE3E0
{
  uintptr xaddr;
  error_0 err;
};

/* 5762 */
struct retval_CE6DC
{
  int fd;
  error_0 err;
};

/* 5763 */
struct retval_CEA14
{
  uintptr r1;
  uintptr r2;
  unsigned int err;
};

/* 5764 */
struct retval_CEA68
{
  uintptr r1;
  uintptr r2;
  unsigned int err;
};

/* 5765 */
struct retval_CEAC4
{
  uintptr r1;
  uintptr r2;
  unsigned int err;
};

/* 5766 */
struct retval_CEB38
{
  uintptr r1;
  uintptr r2;
  unsigned int err;
};

/* 5767 */
struct retval_CECB0
{
  uintptr xaddr;
  error_0 err;
};

/* 5768 */
struct retval_CF5F4
{
  int _r0;
  string_0 _r1;
  error_0 _r2;
};

/* 5769 */
struct retval_D30F8
{
  int _r0;
  string_0 _r1;
  error_0 _r2;
};

/* 5770 */
struct retval_D3230
{
  string_0 _r0;
  error_0 _r1;
};

/* 5771 */
struct retval_D337C
{
  time_Time_1 _r0;
  error_0 _r1;
};

/* 5772 */
struct retval_D353C
{
  time_Time_1 _r0;
  error_0 _r1;
};

/* 5773 */
struct retval_D5FB8
{
  int length;
  bool ok;
};

/* 5774 */
struct retval_D6F08
{
  uintptr _r0;
  error_0 _r1;
};

/* 5775 */
struct retval_D79B4
{
  string_0 name;
  int offset;
  uint64 abs;
};

/* 5776 */
struct retval_D7BB4
{
  int hour;
  int min;
  int sec;
};

/* 5777 */
struct retval_D8DDC
{
  int year;
  int month;
  int day;
  int yday;
};

/* 5778 */
struct retval_D8E48
{
  string_0 name;
  int offset;
};

/* 5779 */
struct retval_D8EEC
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5780 */
struct retval_D9EAC
{
  int qmod2;
  __int64 r;
};

/* 5781 */
struct retval_DA6CC
{
  string_0 name;
  int offset;
  int64 start;
  int64 end;
  bool isDST;
};

/* 5782 */
struct retval_DAC30
{
  string_0 name;
  int offset;
  int64 start;
  int64 end;
  bool isDST;
  bool ok;
};

/* 5783 */
struct retval_DB4D0
{
  string_0 _r0;
  string_0 _r1;
  bool _r2;
};

/* 5784 */
struct retval_DB740
{
  int offset;
  string_0 rest;
  bool ok;
};

/* 5785 */
struct retval_DBCF4
{
  time_rule _r0;
  string_0 _r1;
  bool _r2;
};

/* 5786 */
struct retval_DC914
{
  int offset;
  bool ok;
};

/* 5787 */
struct retval_DCBD0
{
  uint64 n;
  bool ok;
};

/* 5788 */
struct retval_DCDE0
{
  time_Location_0 *_r0;
  error_0 _r1;
};

/* 5789 */
struct retval_DE140
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5790 */
struct retval_DE284
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5791 */
struct retval_DEEB4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5792 */
struct retval_DEFDC
{
  time_Location_0 *z;
  error_0 firstErr;
};

/* 5793 */
struct retval_DF4E8
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5794 */
struct retval_DFF58
{
  string_0 prefix;
  int std;
  string_0 suffix;
};

/* 5795 */
struct retval_E1088
{
  int year;
  int month;
  int day;
  int yday;
};

/* 5796 */
struct retval_E16A4
{
  int ns;
  string_0 rangeErrString;
  error_0 err;
};

/* 5797 */
struct retval_E1848
{
  int x;
  error_0 err;
};

/* 5798 */
struct retval_E1A40
{
  time_Time_1 _r0;
  bool _r1;
};

/* 5799 */
struct retval_E22BC
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5800 */
struct retval_E62AC
{
  string_0 _r0;
  error_0 _r1;
};

/* 5801 */
struct retval_E6750
{
  int n;
  error_0 err;
};

/* 5802 */
struct retval_E6808
{
  int _r0;
  error_0 _r1;
};

/* 5803 */
struct retval_E6898
{
  int n;
  error_0 err;
};

/* 5804 */
struct retval_E69C0
{
  int major;
  int minor;
};

/* 5805 */
struct retval_E6B08
{
  uintptr _r0;
  error_0 _r1;
};

/* 5806 */
struct retval_E7004
{
  int64 written;
  error_0 err;
};

/* 5807 */
struct retval_E7428
{
  int64 written;
  error_0 err;
};

/* 5808 */
struct retval_E8C9C
{
  int _r0;
  error_0 _r1;
};

/* 5809 */
struct retval_E904C
{
  int _r0;
  error_0 _r1;
};

/* 5810 */
struct retval_E9550
{
  int _r0;
  syscall_Sockaddr_0 _r1;
  string_0 _r2;
  error_0 _r3;
};

/* 5811 */
struct retval_E9D18
{
  int _r0;
  error_0 _r1;
};

/* 5812 */
struct retval_E9FB0
{
  int64 _r0;
  error_0 _r1;
};

/* 5813 */
struct retval_EA194
{
  error_0 err;
  bool handled;
};

/* 5814 */
struct retval_EA790
{
  int _r0;
  syscall_Sockaddr_0 _r1;
  string_0 _r2;
  error_0 _r3;
};

/* 5815 */
struct retval_EAC78
{
  int64 written;
  error_0 err;
};

/* 5816 */
struct retval_EAFF0
{
  int _r0;
  error_0 _r1;
};

/* 5817 */
struct retval_EB2FC
{
  int _r0;
  error_0 _r1;
};

/* 5818 */
struct retval_E4068
{
  int newpivot;
  bool alreadyPartitioned;
};

/* 5819 */
struct retval_E4C8C
{
  int pivot;
  int hint;
};

/* 5820 */
struct retval_EC340
{
  _slice_io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5821 */
struct retval_EC400
{
  _slice_string_0 names;
  error_0 err;
};

/* 5822 */
struct retval_EC4C0
{
  _slice_io_fs_DirEntry _r0;
  error_0 _r1;
};

/* 5823 */
struct retval_EC580
{
  _slice_io_fs_DirEntry _r0;
  error_0 _r1;
};

/* 5824 */
struct retval_EC760
{
  _slice_string_0 names;
  _slice_io_fs_DirEntry dirents;
  _slice_io_fs_FileInfo infos;
  error_0 err;
};

/* 5825 */
struct retval_ED4C0
{
  uint64 _r0;
  bool _r1;
};

/* 5826 */
struct retval_ED53C
{
  uint64 _r0;
  bool _r1;
};

/* 5827 */
struct retval_EDAD8
{
  uintptr _r0;
  unsigned __int64 _r1;
};

/* 5828 */
struct retval_EDE84
{
  os_Process_0 *_r0;
  error_0 _r1;
};

/* 5829 */
struct retval_EDF40
{
  os_Process_0 *p;
  error_0 err;
};

/* 5830 */
struct retval_EE628
{
  os_ProcessState_0 *ps;
  error_0 err;
};

/* 5831 */
struct retval_EE6C8
{
  os_ProcessState_0 *_r0;
  error_0 _r1;
};

/* 5832 */
struct retval_EEECC
{
  int n;
  error_0 err;
};

/* 5833 */
struct retval_EEFB8
{
  int64 n;
  error_0 err;
};

/* 5834 */
struct retval_EF0F4
{
  os_noReadFrom _p0;
  io_Reader_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 5835 */
struct retval_EF134
{
  int64 _r0;
  error_0 _r1;
};

/* 5836 */
struct retval_EF1D4
{
  int n;
  error_0 err;
};

/* 5837 */
struct retval_EF3A0
{
  int64 n;
  error_0 err;
};

/* 5838 */
struct retval_EF4DC
{
  os_noWriteTo _p0;
  io_Writer_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 5839 */
struct retval_EF51C
{
  int64 _r0;
  error_0 _r1;
};

/* 5840 */
struct retval_EF768
{
  int n;
  error_0 err;
};

/* 5841 */
struct retval_EF80C
{
  os_File_0 *_r0;
  error_0 _r1;
};

/* 5842 */
struct retval_EF8BC
{
  os_File_0 *_r0;
  error_0 _r1;
};

/* 5843 */
struct retval_EFC54
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 5844 */
struct retval_EFD2C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5845 */
struct retval_F007C
{
  int _r0;
  internal_poll_SysFile _r1;
  error_0 _r2;
};

/* 5846 */
struct retval_F067C
{
  os_File_0 *_r0;
  error_0 _r1;
};

/* 5847 */
struct retval_F0980
{
  os_File_0 *_r0;
  error_0 _r1;
};

/* 5848 */
struct retval_F10B4
{
  string_0 _r0;
  error_0 _r1;
};

/* 5849 */
struct retval_F1334
{
  io_fs_DirEntry _r0;
  error_0 _r1;
};

/* 5850 */
struct retval_F1510
{
  string_0 dir;
  error_0 err;
};

/* 5851 */
struct retval_F17AC
{
  syscall_SysProcAttr_0 *_r0;
  bool _r1;
};

/* 5852 */
struct retval_F1908
{
  uintptr _r0;
  bool _r1;
};

/* 5853 */
struct retval_F19C0
{
  os_ProcessState_0 *_r0;
  error_0 _r1;
};

/* 5854 */
struct retval_F2370
{
  os_File_0 *r;
  os_File_0 *w;
  error_0 err;
};

/* 5855 */
struct retval_F25FC
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5856 */
struct retval_F2664
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5857 */
struct retval_F2994
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5858 */
struct retval_F2AD0
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5859 */
struct retval_F2C74
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5860 */
struct retval_F2E18
{
  string_0 name;
  error_0 err;
};

/* 5861 */
struct retval_F2E5C
{
  string_0 name;
  error_0 err;
};

/* 5862 */
struct retval_F322C
{
  bool _r0;
  error_0 _r1;
};

/* 5863 */
struct retval_F3384
{
  int64 written;
  bool handled;
  error_0 err;
};

/* 5864 */
struct retval_F38D0
{
  int64 written;
  bool handled;
  error_0 err;
};

/* 5865 */
struct retval_F39C0
{
  int64 written;
  bool handled;
  error_0 err;
};

/* 5866 */
struct retval_F3C18
{
  int64 written;
  bool handled;
  error_0 err;
};

/* 5867 */
struct retval_F3EDC
{
  internal_poll_FD *_r0;
  internal_poll_String _r1;
};

/* 5868 */
struct retval_F454C
{
  os_noReadFrom *_p0;
  io_Reader_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 5869 */
struct retval_F4728
{
  int n;
  error_0 err;
};

/* 5870 */
struct retval_F47AC
{
  int n;
  error_0 err;
};

/* 5871 */
struct retval_F4834
{
  _slice_io_fs_DirEntry _r0;
  error_0 _r1;
};

/* 5872 */
struct retval_F48B8
{
  _slice_io_fs_DirEntry _r0;
  error_0 _r1;
};

/* 5873 */
struct retval_F4940
{
  _slice_io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5874 */
struct retval_F49C4
{
  _slice_io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5875 */
struct retval_F4E74
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5876 */
struct retval_F4EE8
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5877 */
struct retval_F4F60
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 5878 */
struct retval_F5058
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 5879 */
struct retval_F5158
{
  int n;
  error_0 err;
};

/* 5880 */
struct retval_F51DC
{
  int n;
  error_0 err;
};

/* 5881 */
struct retval_F5264
{
  int n;
  error_0 err;
};

/* 5882 */
struct retval_F5330
{
  int n;
  error_0 err;
};

/* 5883 */
struct retval_F5408
{
  int64 n;
  error_0 err;
};

/* 5884 */
struct retval_F548C
{
  int64 n;
  error_0 err;
};

/* 5885 */
struct retval_F5514
{
  os_noWriteTo *_p0;
  io_Writer_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 5886 */
struct retval_F56F0
{
  int n;
  error_0 err;
};

/* 5887 */
struct retval_F5774
{
  int n;
  error_0 err;
};

/* 5888 */
struct retval_F57FC
{
  _slice_io_fs_DirEntry _r0;
  error_0 _r1;
};

/* 5889 */
struct retval_F5880
{
  _slice_io_fs_DirEntry _r0;
  error_0 _r1;
};

/* 5890 */
struct retval_F5908
{
  int64 n;
  error_0 err;
};

/* 5891 */
struct retval_F598C
{
  int64 n;
  error_0 err;
};

/* 5892 */
struct retval_F5A14
{
  _slice_io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5893 */
struct retval_F5A98
{
  _slice_io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5894 */
struct retval_F5F48
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5895 */
struct retval_F5FBC
{
  io_fs_FileInfo _r0;
  error_0 _r1;
};

/* 5896 */
struct retval_F6034
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 5897 */
struct retval_F612C
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 5898 */
struct retval_F622C
{
  int n;
  error_0 err;
};

/* 5899 */
struct retval_F62B0
{
  int n;
  error_0 err;
};

/* 5900 */
struct retval_F6338
{
  int n;
  error_0 err;
};

/* 5901 */
struct retval_F6404
{
  int n;
  error_0 err;
};

/* 5902 */
struct retval_F6670
{
  string_0 _r0;
  error_0 _r1;
};

/* 5903 */
struct retval_F66C4
{
  string_0 _r0;
  error_0 _r1;
};

/* 5904 */
struct retval_F67F4
{
  string_0 _r0;
  error_0 _r1;
};

/* 5905 */
struct retval_F737C
{
  _slice_string_0 _r0;
  error_0 _r1;
};

/* 5906 */
struct retval_FAADC
{
  int _r0;
  bool _r1;
};

/* 5907 */
struct retval_FE910
{
  int wid;
  bool ok;
};

/* 5908 */
struct retval_FE928
{
  int prec;
  bool ok;
};

/* 5909 */
struct retval_FE9F8
{
  int ret;
  error_0 err;
};

/* 5910 */
struct retval_FEAF8
{
  int ret;
  error_0 err;
};

/* 5911 */
struct retval_FEBF8
{
  int n;
  error_0 err;
};

/* 5912 */
struct retval_FEE74
{
  int n;
  error_0 err;
};

/* 5913 */
struct retval_FEFBC
{
  int n;
  error_0 err;
};

/* 5914 */
struct retval_104858
{
  int num;
  bool isInt;
  int newArgNum;
};

/* 5915 */
struct retval_104AE4
{
  int index;
  int wid;
  bool ok;
};

/* 5916 */
struct retval_104C3C
{
  int newArgNum;
  int newi;
  bool found;
};

/* 5917 */
struct retval_106C9C
{
  int newpivot;
  bool alreadyPartitioned;
};

/* 5918 */
struct retval_1071C0
{
  int pivot;
  int hint;
};

/* 5919 */
struct retval_1081D8
{
  int newpivot;
  bool alreadyPartitioned;
};

/* 5920 */
struct retval_108860
{
  int pivot;
  int hint;
};

/* 5921 */
struct retval_1091B8
{
  int newpivot;
  bool alreadyPartitioned;
};

/* 5922 */
struct retval_1098E0
{
  int pivot;
  int hint;
};

/* 5923 */
struct retval_10A91C
{
  int length;
  int offset;
  bool ok;
};

/* 5924 */
struct retval_10BE8C
{
  int n;
  error_0 err;
};

/* 5925 */
struct retval_10CCE8
{
  int n;
  error_0 err;
};

/* 5926 */
struct retval_10CD50
{
  int n;
  error_0 err;
};

/* 5927 */
struct retval_10E458
{
  int size;
  int numCodegens;
};

/* 5928 */
struct retval_10F324
{
  int numLiterals;
  int numOffsets;
};

/* 5929 */
struct retval_111170
{
  int _r0;
  error_0 _r1;
};

/* 5930 */
struct retval_113098
{
  int _r0;
  error_0 _r1;
};

/* 5931 */
struct retval_1FD694
{
  crypto_cipher_AEAD _r0;
  error_0 _r1;
};

/* 5932 */
struct retval_1FE074
{
  _slice_uint8_0 sharedSecret;
  _slice_uint8_0 encapPub;
  error_0 err;
};

/* 5933 */
struct retval_1FE5CC
{
  _slice_uint8_0 _r0;
  crypto_internal_hpke_Sender *_r1;
  error_0 _r2;
};

/* 5934 */
struct retval_1FF25C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5935 */
struct retval_1FF324
{
  crypto_ecdh_PublicKey *_r0;
  error_0 _r1;
};

/* 5936 */
struct retval_25E2D0
{
  net_url_URL *_r0;
  error_0 _r1;
};

/* 5937 */
struct retval_25E46C
{
  net_url_URL *_r0;
  error_0 _r1;
};

/* 5938 */
struct retval_25F318
{
  string_0 _r0;
  error_0 _r1;
};

/* 5939 */
struct retval_25F6F0
{
  net_url_URL *_r0;
  error_0 _r1;
};

/* 5940 */
struct retval_1FD088
{
  int _r0;
  error_0 _r1;
};

/* 5941 */
struct retval_11DEA0
{
  crypto_cipher_AEAD _r0;
  error_0 _r1;
};

/* 5942 */
struct retval_11E70C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5943 */
struct retval_1FC258
{
  crypto_cipher_AEAD _r0;
  error_0 _r1;
};

/* 5944 */
struct retval_1FC470
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5945 */
struct retval_1FCB90
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5946 */
struct retval_11F628
{
  crypto_internal_boring_PublicKeyECDH *_p0;
  _slice_uint8_0 _r0;
};

/* 5947 */
struct retval_11F668
{
  crypto_internal_boring_PrivateKeyECDH *_p0;
  crypto_internal_boring_PublicKeyECDH *_r0;
  error_0 _r1;
};

/* 5948 */
struct retval_120550
{
  crypto_cipher_Block _r0;
  error_0 _r1;
};

/* 5949 */
struct retval_1205F8
{
  crypto_cipher_Block _r0;
  error_0 _r1;
};

/* 5950 */
struct retval_120CB0
{
  crypto_internal_nistec_fiat_P224Element *_r0;
  error_0 _r1;
};

/* 5951 */
struct retval_1278C8
{
  crypto_internal_nistec_fiat_P256Element *_r0;
  error_0 _r1;
};

/* 5952 */
struct retval_12DCFC
{
  crypto_internal_nistec_fiat_P384Element *_r0;
  error_0 _r1;
};

/* 5953 */
struct retval_13D5A8
{
  crypto_internal_nistec_fiat_P521Element *_r0;
  error_0 _r1;
};

/* 5954 */
struct retval_15D048
{
  crypto_internal_nistec_P224Point *_r0;
  error_0 _r1;
};

/* 5955 */
struct retval_15D994
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5956 */
struct retval_15D9FC
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5957 */
struct retval_15E940
{
  crypto_internal_nistec_P224Point *_r0;
  error_0 _r1;
};

/* 5958 */
struct retval_15F104
{
  crypto_internal_nistec_P224Point *_r0;
  error_0 _r1;
};

/* 5959 */
struct retval_15FDA0
{
  crypto_internal_nistec_P256Point *_r0;
  error_0 _r1;
};

/* 5960 */
struct retval_160710
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5961 */
struct retval_160778
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5962 */
struct retval_1616D0
{
  crypto_internal_nistec_P256Point *_r0;
  error_0 _r1;
};

/* 5963 */
struct retval_161F6C
{
  crypto_internal_nistec_P256Point *_r0;
  error_0 _r1;
};

/* 5964 */
struct retval_162A54
{
  crypto_internal_nistec_P384Point *_r0;
  error_0 _r1;
};

/* 5965 */
struct retval_1633EC
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5966 */
struct retval_163454
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5967 */
struct retval_1643BC
{
  crypto_internal_nistec_P384Point *_r0;
  error_0 _r1;
};

/* 5968 */
struct retval_164DA8
{
  crypto_internal_nistec_P384Point *_r0;
  error_0 _r1;
};

/* 5969 */
struct retval_165BE0
{
  crypto_internal_nistec_P521Point *_r0;
  error_0 _r1;
};

/* 5970 */
struct retval_166578
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5971 */
struct retval_1665E0
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5972 */
struct retval_16751C
{
  crypto_internal_nistec_P521Point *_r0;
  error_0 _r1;
};

/* 5973 */
struct retval_167D30
{
  crypto_internal_nistec_P521Point *_r0;
  error_0 _r1;
};

/* 5974 */
struct retval_16B920
{
  crypto_internal_edwards25519_field_Element *_r0;
  error_0 _r1;
};

/* 5975 */
struct retval_16C3A0
{
  uint64 lo;
  uint64 hi;
};

/* 5976 */
struct retval_16C870
{
  crypto_internal_edwards25519_field_Element *R;
  int wasSquare;
};

/* 5977 */
struct retval_16DD84
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5978 */
struct retval_16E2F4
{
  crypto_ecdh_PrivateKey *_r0;
  error_0 _r1;
};

/* 5979 */
struct retval_16E698
{
  crypto_ecdh_PublicKey *_r0;
  error_0 _r1;
};

/* 5980 */
struct retval_16E814
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5981 */
struct retval_16EDF4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5982 */
struct retval_16EF34
{
  crypto_ecdh_PublicKey *_r0;
  error_0 _r1;
};

/* 5983 */
struct retval_16F294
{
  crypto_ecdh_PrivateKey *_r0;
  error_0 _r1;
};

/* 5984 */
struct retval_16F4A0
{
  crypto_ecdh_PrivateKey *_r0;
  error_0 _r1;
};

/* 5985 */
struct retval_16F688
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5986 */
struct retval_16F724
{
  crypto_ecdh_PublicKey *_r0;
  error_0 _r1;
};

/* 5987 */
struct retval_16F82C
{
  crypto_ecdh_PrivateKey *_r0;
  error_0 _r1;
};

/* 5988 */
struct retval_16F8D4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5989 */
struct retval_16F970
{
  crypto_ecdh_PublicKey *_r0;
  error_0 _r1;
};

/* 5990 */
struct retval_16FA78
{
  crypto_ecdh_PrivateKey *_r0;
  error_0 _r1;
};

/* 5991 */
struct retval_16FB20
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 5992 */
struct retval_16FBBC
{
  crypto_ecdh_PublicKey *_r0;
  error_0 _r1;
};

/* 5993 */
struct retval_16FCC4
{
  crypto_ecdh_PrivateKey *_r0;
  error_0 _r1;
};

/* 5994 */
struct retval_1FB3A8
{
  int _r0;
  error_0 _r1;
};

/* 5995 */
struct retval_16FD6C
{
  unsigned int q;
  unsigned int r;
};

/* 5996 */
struct retval_170674
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 5997 */
struct retval_170C14
{
  math_big_Int *_r0;
  bool _r1;
};

/* 5998 */
struct retval_170CCC
{
  math_big_Int *_r0;
  bool _r1;
};

/* 5999 */
struct retval_1714B0
{
  unsigned int u0;
  unsigned int u1;
  unsigned int v0;
  unsigned int v1;
  bool even;
};

/* 6000 */
struct retval_173B8C
{
  math_big_Int *_r0;
  int _r1;
  error_0 _r2;
};

/* 6001 */
struct retval_173CD4
{
  bool neg;
  error_0 err;
};

/* 6002 */
struct retval_17A984
{
  math_big_nat res;
  int b;
  int count;
  error_0 err;
};

/* 6003 */
struct retval_17C418
{
  math_big_nat q;
  math_big_nat r;
};

/* 6004 */
struct retval_17C71C
{
  math_big_nat q;
  unsigned int r;
};

/* 6005 */
struct retval_17CB50
{
  math_big_nat q;
  math_big_nat r;
};

/* 6006 */
struct retval_17E948
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6007 */
struct retval_17FEC0
{
  math_big_Int *xOut;
  math_big_Int *yOut;
};

/* 6008 */
struct retval_180084
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6009 */
struct retval_1801F4
{
  math_big_Int *_r0;
  math_big_Int *_r1;
  math_big_Int *_r2;
};

/* 6010 */
struct retval_18149C
{
  math_big_Int *_r0;
  math_big_Int *_r1;
  math_big_Int *_r2;
};

/* 6011 */
struct retval_181CD8
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6012 */
struct retval_181F18
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6013 */
struct retval_181FD4
{
  crypto_elliptic_Curve _r0;
  bool _r1;
};

/* 6014 */
struct retval_1821B8
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6015 */
struct retval_182424
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6016 */
struct retval_182524
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6017 */
struct retval_1828C0
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6018 */
struct retval_1829E0
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6019 */
struct retval_182C48
{
  crypto_elliptic__ptr_nistCurve_go_shape__ptr_uint8__pointFromAffine::_param16 p;
  error_0 err;
};

/* 6020 */
struct retval_183278
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6021 */
struct retval_183304
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6022 */
struct retval_183390
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6023 */
struct retval_18342C
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6024 */
struct retval_183550
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6025 */
struct retval_1835DC
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6026 */
struct retval_183668
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6027 */
struct retval_183704
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6028 */
struct retval_183828
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6029 */
struct retval_1838B4
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6030 */
struct retval_183940
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6031 */
struct retval_1839DC
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6032 */
struct retval_183B00
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6033 */
struct retval_183B8C
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6034 */
struct retval_183C18
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6035 */
struct retval_183CB4
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6036 */
struct retval_183DD8
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6037 */
struct retval_183F00
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6038 */
struct retval_183F90
{
  math_big_Int *_r0;
  math_big_Int *_r1;
};

/* 6039 */
struct retval_184030
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6040 */
struct retval_184150
{
  crypto_internal_bigmod_Nat *_r0;
  error_0 _r1;
};

/* 6041 */
struct retval_184244
{
  crypto_internal_bigmod_Nat *_r0;
  error_0 _r1;
};

/* 6042 */
struct retval_184BD8
{
  crypto_internal_bigmod_Modulus *_r0;
  error_0 _r1;
};

/* 6043 */
struct retval_1F97BC
{
  vendor_golang_org_x_crypto_chacha20_Cipher *_r0;
  error_0 _r1;
};

/* 6044 */
struct retval_1FABA0
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6045 */
struct retval_1872D0
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6046 */
struct retval_188004
{
  int nn;
  error_0 err;
};

/* 6047 */
struct retval_188538
{
  uint8 arr[64];
};

/* 6048 */
struct retval_189698
{
  int64 ret;
  error_0 err;
};

/* 6049 */
struct retval_1898A8
{
  int32 _r0;
  error_0 _r1;
};

/* 6050 */
struct retval_189A6C
{
  math_big_Int *_r0;
  error_0 _r1;
};

/* 6051 */
struct retval_18A120
{
  encoding_asn1_ObjectIdentifier s;
  error_0 err;
};

/* 6052 */
struct retval_18A3A0
{
  int ret;
  int offset;
  error_0 err;
};

/* 6053 */
struct retval_18A5C0
{
  time_Time_1 ret;
  error_0 err;
};

/* 6054 */
struct retval_18A864
{
  time_Time_1 ret;
  error_0 err;
};

/* 6055 */
struct retval_18AA28
{
  string_0 ret;
  error_0 err;
};

/* 6056 */
struct retval_18AB70
{
  string_0 _r0;
  error_0 _r1;
};

/* 6057 */
struct retval_18ADA0
{
  encoding_asn1_tagAndLength ret;
  int offset;
  error_0 err;
};

/* 6058 */
struct retval_18B280
{
  reflect_Value_0 ret;
  error_0 err;
};

/* 6059 */
struct retval_18B670
{
  int offset;
  error_0 err;
};

/* 6060 */
struct retval_18DDD8
{
  _slice_uint8_0 rest;
  error_0 err;
};

/* 6061 */
struct retval_18E6D8
{
  bool matchAny;
  int tagNumber;
  bool isCompound;
  bool ok;
};

/* 6062 */
struct retval_18F428
{
  encoding_asn1_encoder _r0;
  error_0 _r1;
};

/* 6063 */
struct retval_190300
{
  encoding_asn1_encoder e;
  error_0 err;
};

/* 6064 */
struct retval_1904A4
{
  encoding_asn1_encoder e;
  error_0 err;
};

/* 6065 */
struct retval_19057C
{
  encoding_asn1_encoder e;
  error_0 err;
};

/* 6066 */
struct retval_190654
{
  _slice_uint8_0 ret;
  error_0 err;
};

/* 6067 */
struct retval_1908C8
{
  _slice_uint8_0 ret;
  error_0 err;
};

/* 6068 */
struct retval_1911C8
{
  encoding_asn1_encoder e;
  error_0 err;
};

/* 6069 */
struct retval_192434
{
  encoding_asn1_encoder e;
  error_0 err;
};

/* 6070 */
struct retval_1933CC
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6071 */
struct retval_193BA8
{
  int newpivot;
  bool alreadyPartitioned;
};

/* 6072 */
struct retval_1949C4
{
  int pivot;
  int hint;
};

/* 6073 */
struct retval_1F9400
{
  crypto_rc4_Cipher *_r0;
  error_0 _r1;
};

/* 6074 */
struct retval_19A8DC
{
  _slice_uint8_0 r;
  _slice_uint8_0 s;
  error_0 err;
};

/* 6075 */
struct retval_19B394
{
  crypto_ecdsa__ptr_nistCurve_go_shape__ptr_uint8__pointFromAffine::_param3 p;
  error_0 err;
};

/* 6076 */
struct retval_19C450
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6077 */
struct retval_19C4DC
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6078 */
struct retval_19C658
{
  crypto_ecdsa_PublicKey _p0;
  crypto_elliptic_CurveParams *_r0;
};

/* 6079 */
struct retval_19C6BC
{
  crypto_ecdsa_PublicKey *_p0;
  crypto_elliptic_CurveParams *_r0;
};

/* 6080 */
struct retval_19C724
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6081 */
struct retval_19C7A8
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6082 */
struct retval_19C830
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6083 */
struct retval_19C8C4
{
  math_big_Int *x;
  math_big_Int *y;
};

/* 6084 */
struct retval_19D0C8
{
  crypto_internal_edwards25519_Point *_r0;
  error_0 _r1;
};

/* 6085 */
struct retval_19E440
{
  crypto_internal_edwards25519_Scalar *_r0;
  error_0 _r1;
};

/* 6086 */
struct retval_19E6A0
{
  crypto_internal_edwards25519_Scalar *_r0;
  error_0 _r1;
};

/* 6087 */
struct retval_19E854
{
  int8 arr[256];
};

/* 6088 */
struct retval_1A3AFC
{
  int n;
  error_0 err;
};

/* 6089 */
struct retval_1A3EC0
{
  int n;
  error_0 err;
};

/* 6090 */
struct retval_1A4020
{
  int n;
  error_0 err;
};

/* 6091 */
struct retval_1A4E38
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6092 */
struct retval_1A526C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6093 */
struct retval_1A625C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6094 */
struct retval_1A6580
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6095 */
struct retval_1A6E74
{
  int nn;
  error_0 err;
};

/* 6096 */
struct retval_1A7224
{
  uint8 arr[32];
};

/* 6097 */
struct retval_1A7508
{
  uint8 arr[28];
};

/* 6098 */
struct retval_1A7D88
{
  int nsi;
  int n;
  error_0 err;
};

/* 6099 */
struct retval_1A8278
{
  int n;
  error_0 err;
};

/* 6100 */
struct retval_1A86DC
{
  _slice_uint8_0 line;
  _slice_uint8_0 rest;
};

/* 6101 */
struct retval_1A8934
{
  encoding_pem_Block *p;
  _slice_uint8_0 rest;
};

/* 6102 */
struct retval_1F8B94
{
  int n;
  error_0 err;
};

/* 6103 */
struct retval_1E7C94
{
  crypto_x509_Certificate *_r0;
  error_0 _r1;
};

/* 6104 */
struct retval_1E81D8
{
  crypto_x509_Certificate *_r0;
  error_0 _r1;
};

/* 6105 */
struct retval_1E82F4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6106 */
struct retval_1E93B0
{
  encoding_asn1_ObjectIdentifier _r0;
  bool _r1;
};

/* 6107 */
struct retval_1E96A4
{
  string_0 _r0;
  error_0 _r1;
};

/* 6108 */
struct retval_1E9D98
{
  crypto_x509_pkix_RDNSequence *_r0;
  error_0 _r1;
};

/* 6109 */
struct retval_1EA2EC
{
  crypto_x509_pkix_AlgorithmIdentifier _r0;
  error_0 _r1;
};

/* 6110 */
struct retval_1EA490
{
  time_Time_1 _r0;
  error_0 _r1;
};

/* 6111 */
struct retval_1EA630
{
  time_Time_1 _r0;
  time_Time_1 _r1;
  error_0 _r2;
};

/* 6112 */
struct retval_1EA758
{
  crypto_x509_pkix_Extension _r0;
  error_0 _r1;
};

/* 6113 */
struct retval_1EA93C
{
  interface__0 _r0;
  error_0 _r1;
};

/* 6114 */
struct retval_1EB6D8
{
  int _r0;
  error_0 _r1;
};

/* 6115 */
struct retval_1EB828
{
  bool _r0;
  int _r1;
  error_0 _r2;
};

/* 6116 */
struct retval_1EBB64
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6117 */
struct retval_1EBD50
{
  _slice_crypto_x509_ExtKeyUsage _r0;
  _slice_encoding_asn1_ObjectIdentifier _r1;
  error_0 _r2;
};

/* 6118 */
struct retval_1EC0BC
{
  _slice_crypto_x509_OID _r0;
  error_0 _r1;
};

/* 6119 */
struct retval_1EC400
{
  bool unhandled;
  error_0 err;
};

/* 6120 */
struct retval_1EC868
{
  _slice_string_0 dnsNames;
  _slice__ptr_net_IPNet_0 ips;
  _slice_string_0 emails;
  _slice_string_0 uriDomains;
  error_0 err;
};

/* 6121 */
struct retval_1EF3D4
{
  crypto_x509_Certificate *_r0;
  error_0 _r1;
};

/* 6122 */
struct retval_1F0798
{
  crypto_x509_Certificate *_r0;
  error_0 _r1;
};

/* 6123 */
struct retval_1F0AE4
{
  crypto_x509_CertPool *_r0;
  error_0 _r1;
};

/* 6124 */
struct retval_1F0F70
{
  _slice_io_fs_DirEntry _r0;
  error_0 _r1;
};

/* 6125 */
struct retval_1F1A84
{
  crypto_x509_rfc2821Mailbox mailbox;
  bool ok;
};

/* 6126 */
struct retval_1F2108
{
  _slice_string_0 reverseLabels;
  bool ok;
};

/* 6127 */
struct retval_1F24C4
{
  bool _r0;
  error_0 _r1;
};

/* 6128 */
struct retval_1F268C
{
  bool _r0;
  error_0 _r1;
};

/* 6129 */
struct retval_1F29E0
{
  bool _r0;
  error_0 _r1;
};

/* 6130 */
struct retval_1F449C
{
  _slice__slice__ptr_crypto_x509_Certificate chains;
  error_0 err;
};

/* 6131 */
struct retval_1F4F94
{
  _slice__slice__ptr_crypto_x509_Certificate chains;
  error_0 err;
};

/* 6132 */
struct retval_1F7200
{
  crypto_x509_ConstraintViolationError _p0;
  string_0 _r0;
};

/* 6133 */
struct retval_1F7B28
{
  bool _r0;
  error_0 _r1;
};

/* 6134 */
struct retval_1F7BF8
{
  bool _r0;
  error_0 _r1;
};

/* 6135 */
struct retval_1F7CB0
{
  bool _r0;
  error_0 _r1;
};

/* 6136 */
struct retval_1F7D64
{
  bool _r0;
  error_0 _r1;
};

/* 6137 */
struct retval_1F8124
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6138 */
struct retval_1F87A4
{
  crypto_x509_ConstraintViolationError *_p0;
  string_0 _r0;
};

/* 6139 */
struct retval_1AB1BC
{
  math_rand_v2_runtimeSource _p0;
  uint64 _r0;
};

/* 6140 */
struct retval_1AB244
{
  math_rand_v2_runtimeSource *_p0;
  uint64 _r0;
};

/* 6141 */
struct retval_1E575C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6142 */
struct retval_1E5DCC
{
  int nn;
  error_0 err;
};

/* 6143 */
struct retval_1E60D4
{
  uint8 arr[20];
};

/* 6144 */
struct retval_1E6440
{
  uint8 arr[20];
};

/* 6145 */
struct retval_1ABC48
{
  internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___LoadOrStore::_param28 result;
  bool loaded;
};

/* 6146 */
struct retval_1AC0BC
{
  internal_concurrent__ptr_HashTrieMap_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___Load::_param22 value;
  bool ok;
};

/* 6147 */
struct retval_1AC20C
{
  internal_concurrent__ptr_entry_go_shape__ptr_internal_abi_Type_comma_go_shape_interface___lookup::_param4 _r0;
  bool _r1;
};

/* 6148 */
struct retval_1AC810
{
  net_netip_Addr _r0;
  error_0 _r1;
};

/* 6149 */
struct retval_1AD04C
{
  net_netip_Addr ip;
  error_0 err;
};

/* 6150 */
struct retval_1AD16C
{
  net_netip_Addr _r0;
  error_0 _r1;
};

/* 6151 */
struct retval_1ADBB4
{
  net_netip_Addr ip;
  bool ok;
};

/* 6152 */
struct retval_1AE41C
{
  uint8 arr[16];
};

/* 6153 */
struct retval_1AFCB8
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6154 */
struct retval_1B0A08
{
  internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___LoadOrStore::_param28 result;
  bool loaded;
};

/* 6155 */
struct retval_1B0E94
{
  internal_concurrent__ptr_HashTrieMap_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___Load::_param22 value;
  bool ok;
};

/* 6156 */
struct retval_1B1078
{
  internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___compareAndDelete::_param10 _r0;
  bool _r1;
};

/* 6157 */
struct retval_1B1214
{
  internal_concurrent__ptr_entry_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string__comma_go_shape_struct__internal_weak_u_unsafe_Pointer___lookup::_param4 _r0;
  bool _r1;
};

/* 6158 */
struct retval_1B15CC
{
  unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___func1::_param6 _r0;
  unique_Make_go_shape_struct__net_netip_isV6_bool_net_netip_zoneV6_string___func1::_param11 _r1;
};

/* 6159 */
struct retval_1B1E3C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6160 */
struct retval_1B280C
{
  int _r0;
  error_0 _r1;
};

/* 6161 */
struct retval_1B2E08
{
  vendor_golang_org_x_net_dns_dnsmessage_Header _r0;
  error_0 _r1;
};

/* 6162 */
struct retval_1B30B0
{
  vendor_golang_org_x_net_dns_dnsmessage_ResourceHeader _r0;
  error_0 _r1;
};

/* 6163 */
struct retval_1B3598
{
  vendor_golang_org_x_net_dns_dnsmessage_Question _r0;
  error_0 _r1;
};

/* 6164 */
struct retval_1B3D78
{
  vendor_golang_org_x_net_dns_dnsmessage_CNAMEResource _r0;
  error_0 _r1;
};

/* 6165 */
struct retval_1B3F04
{
  vendor_golang_org_x_net_dns_dnsmessage_AResource _r0;
  error_0 _r1;
};

/* 6166 */
struct retval_1B4120
{
  vendor_golang_org_x_net_dns_dnsmessage_AAAAResource _r0;
  error_0 _r1;
};

/* 6167 */
struct retval_1B4C58
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6168 */
struct retval_1B4D40
{
  _slice_uint8_0 msg;
  int lenOff;
  error_0 err;
};

/* 6169 */
struct retval_1B501C
{
  int _r0;
  error_0 _r1;
};

/* 6170 */
struct retval_1B5528
{
  int _r0;
  error_0 _r1;
};

/* 6171 */
struct retval_1B59E4
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6172 */
struct retval_1B5FE0
{
  int _r0;
  error_0 _r1;
};

/* 6173 */
struct retval_1B63F0
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6174 */
struct retval_1B65F4
{
  vendor_golang_org_x_net_dns_dnsmessage_CNAMEResource _r0;
  error_0 _r1;
};

/* 6175 */
struct retval_1B8B98
{
  _slice_net_IPAddr_0 _r0;
  error_0 _r1;
};

/* 6176 */
struct retval_1BA47C
{
  int ret;
  net_dnsConfig_0 *dnsConf;
};

/* 6177 */
struct retval_1BA6BC
{
  int ret;
  net_dnsConfig_0 *dnsConf;
};

/* 6178 */
struct retval_1BAE9C
{
  string_0 dnsMode;
  int debugLevel;
};

/* 6179 */
struct retval_1BB410
{
  time_Time_1 _r0;
  error_0 _r1;
};

/* 6180 */
struct retval_1BB664
{
  string_0 afnet;
  int proto;
  error_0 err;
};

/* 6181 */
struct retval_1BBBE8
{
  net_addrList_0 _r0;
  error_0 _r1;
};

/* 6182 */
struct retval_1BCB80
{
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 6183 */
struct retval_1BD3E0
{
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 6184 */
struct retval_1BDC20
{
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 6185 */
struct retval_1BE22C
{
  net_Conn_0 c;
  error_0 err;
};

/* 6186 */
struct retval_1BE900
{
  net_Listener_0 _r0;
  error_0 _r1;
};

/* 6187 */
struct retval_1BEE60
{
  net_Listener_0 _r0;
  error_0 _r1;
};

/* 6188 */
struct retval_1BEEF4
{
  uint16 id;
  _slice_uint8_0 udpReq;
  _slice_uint8_0 tcpReq;
  error_0 err;
};

/* 6189 */
struct retval_1BF520
{
  vendor_golang_org_x_net_dns_dnsmessage_Parser _r0;
  vendor_golang_org_x_net_dns_dnsmessage_Header _r1;
  error_0 _r2;
};

/* 6190 */
struct retval_1BF880
{
  vendor_golang_org_x_net_dns_dnsmessage_Parser _r0;
  vendor_golang_org_x_net_dns_dnsmessage_Header _r1;
  error_0 _r2;
};

/* 6191 */
struct retval_1BFDD8
{
  vendor_golang_org_x_net_dns_dnsmessage_Parser _r0;
  vendor_golang_org_x_net_dns_dnsmessage_Header _r1;
  error_0 _r2;
};

/* 6192 */
struct retval_1C0B18
{
  unsigned __int16 _r0;
  bool _r1;
};

/* 6193 */
struct retval_1C0D00
{
  vendor_golang_org_x_net_dns_dnsmessage_Parser _r0;
  string_0 _r1;
  error_0 _r2;
};

/* 6194 */
struct retval_1C1F6C
{
  _slice_net_IPAddr_0 addrs;
  string_0 canonical;
};

/* 6195 */
struct retval_1C22A4
{
  _slice_net_IPAddr_0 addrs;
  vendor_golang_org_x_net_dns_dnsmessage_Name cname;
  error_0 err;
};

/* 6196 */
struct retval_1C52C0
{
  int n;
  error_0 err;
};

/* 6197 */
struct retval_1C53C0
{
  int nn;
  error_0 err;
};

/* 6198 */
struct retval_1C55EC
{
  syscall_Sockaddr_0 rsa;
  error_0 ret;
};

/* 6199 */
struct retval_1C62E4
{
  net_netFD_0 *netfd;
  error_0 err;
};

/* 6200 */
struct retval_1C73A4
{
  _slice_string_0 _r0;
  string_0 _r1;
};

/* 6201 */
struct retval_1C7FBC
{
  _slice_net_Interface _r0;
  error_0 _r1;
};

/* 6202 */
struct retval_1C9434
{
  net_IP_1 ip;
  net_IPMask_1 m;
};

/* 6203 */
struct retval_1C9AD8
{
  uint8 _r0[16];
  bool _r1;
};

/* 6204 */
struct retval_1C9C0C
{
  net_IP_1 _r0;
  net_IPNet_0 *_r1;
  error_0 _r2;
};

/* 6205 */
struct retval_1CA2F8
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6206 */
struct retval_1CA5E4
{
  syscall_Sockaddr_0 _r0;
  error_0 _r1;
};

/* 6207 */
struct retval_1CA688
{
  net_IPConn_0 *_r0;
  error_0 _r1;
};

/* 6208 */
struct retval_1CAB3C
{
  net_addrList_0 primaries;
  net_addrList_0 fallbacks;
};

/* 6209 */
struct retval_1CADB0
{
  net_addrList_0 _r0;
  error_0 _r1;
};

/* 6210 */
struct retval_1CB134
{
  string_0 host;
  string_0 port;
  error_0 err;
};

/* 6211 */
struct retval_1CB78C
{
  net_addrList_0 _r0;
  error_0 _r1;
};

/* 6212 */
struct retval_1CC9C0
{
  net_netFD_0 *fd;
  error_0 err;
};

/* 6213 */
struct retval_1CCAA8
{
  syscall_SockaddrInet4_0 _r0;
  error_0 _r1;
};

/* 6214 */
struct retval_1CCC98
{
  syscall_SockaddrInet6_0 _r0;
  error_0 _r1;
};

/* 6215 */
struct retval_1CCF84
{
  int port;
  error_0 error;
};

/* 6216 */
struct retval_1CD318
{
  int port;
  error_0 error;
};

/* 6217 */
struct retval_1CD684
{
  _slice_net_IPAddr_0 _r0;
  error_0 _r1;
};

/* 6218 */
struct retval_1CE314
{
  interface__0 _r0;
  error_0 _r1;
};

/* 6219 */
struct retval_1CE3D4
{
  int port;
  error_0 err;
};

/* 6220 */
struct retval_1CE714
{
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 6221 */
struct retval_1CEC84
{
  int _r0;
  error_0 _r1;
};

/* 6222 */
struct retval_1CEE48
{
  _slice_net_IPAddr_0 addrs;
  error_0 err;
};

/* 6223 */
struct retval_1CEF84
{
  int _r0;
  error_0 _r1;
};

/* 6224 */
struct retval_1CF138
{
  net_TCPConn_0 *_r0;
  error_0 _r1;
};

/* 6225 */
struct retval_1CF22C
{
  net_TCPListener_0 *_r0;
  error_0 _r1;
};

/* 6226 */
struct retval_1CF318
{
  int _r0;
  error_0 _r1;
};

/* 6227 */
struct retval_1CF4FC
{
  int _r0;
  error_0 _r1;
};

/* 6228 */
struct retval_1CFCBC
{
  net_canceledError _p0;
  string_0 _r0;
};

/* 6229 */
struct retval_1D08CC
{
  net_noReadFrom _p0;
  io_Reader_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 6230 */
struct retval_1D090C
{
  int64 n;
  error_0 err;
};

/* 6231 */
struct retval_1D09AC
{
  net_noWriteTo _p0;
  io_Writer_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 6232 */
struct retval_1D09EC
{
  int64 n;
  error_0 err;
};

/* 6233 */
struct retval_1D1CF4
{
  string_0 s;
  bool ok;
};

/* 6234 */
struct retval_1D1EC4
{
  string_0 s;
  bool ok;
};

/* 6235 */
struct retval_1D2080
{
  time_Time_1 mtime;
  error_0 err;
};

/* 6236 */
struct retval_1D2164
{
  net_file_0 *_r0;
  error_0 _r1;
};

/* 6237 */
struct retval_1D2280
{
  time_Time_1 mtime;
  int64 size;
  error_0 err;
};

/* 6238 */
struct retval_1D2AA8
{
  int port;
  bool needsLookup;
};

/* 6239 */
struct retval_1D2FF0
{
  int port;
  error_0 err;
};

/* 6240 */
struct retval_1D3228
{
  funcuintptr_bool _p1;
  error_0 _r0;
};

/* 6241 */
struct retval_1D3248
{
  int64 written;
  error_0 err;
  bool handled;
};

/* 6242 */
struct retval_1D3748
{
  int _r0;
  error_0 _r1;
};

/* 6243 */
struct retval_1D3B2C
{
  net_netFD_0 *fd;
  error_0 err;
};

/* 6244 */
struct retval_1D5AEC
{
  int64 written;
  error_0 err;
  bool handled;
};

/* 6245 */
struct retval_1D5DF8
{
  int64 written;
  error_0 err;
  bool handled;
};

/* 6246 */
struct retval_1D6300
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6247 */
struct retval_1D63C4
{
  int64 _r0;
  error_0 _r1;
};

/* 6248 */
struct retval_1D65B4
{
  int64 _r0;
  error_0 _r1;
};

/* 6249 */
struct retval_1D6A4C
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6250 */
struct retval_1D6B18
{
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 6251 */
struct retval_1D70D0
{
  syscall_Sockaddr_0 _r0;
  error_0 _r1;
};

/* 6252 */
struct retval_1D7174
{
  int64 _r0;
  error_0 _r1;
};

/* 6253 */
struct retval_1D7270
{
  int64 _r0;
  error_0 _r1;
};

/* 6254 */
struct retval_1D731C
{
  net_TCPConn_0 *_r0;
  error_0 _r1;
};

/* 6255 */
struct retval_1D7454
{
  net_TCPConn_0 *_r0;
  error_0 _r1;
};

/* 6256 */
struct retval_1D794C
{
  net_TCPConn_0 *_r0;
  error_0 _r1;
};

/* 6257 */
struct retval_1D7A24
{
  net_TCPListener_0 *_r0;
  error_0 _r1;
};

/* 6258 */
struct retval_1D88D0
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6259 */
struct retval_1D8994
{
  net_UDPConn_0 *_r0;
  error_0 _r1;
};

/* 6260 */
struct retval_1D906C
{
  syscall_Sockaddr_0 _r0;
  error_0 _r1;
};

/* 6261 */
struct retval_1D9110
{
  net_UDPConn_0 *_r0;
  error_0 _r1;
};

/* 6262 */
struct retval_1D9340
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6263 */
struct retval_1D9570
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6264 */
struct retval_1D963C
{
  net_Conn_0 _r0;
  error_0 _r1;
};

/* 6265 */
struct retval_1D99A0
{
  net_netFD_0 *_r0;
  error_0 _r1;
};

/* 6266 */
struct retval_1D9FEC
{
  syscall_Sockaddr_0 _r0;
  error_0 _r1;
};

/* 6267 */
struct retval_1DA09C
{
  net_UnixConn_0 *_r0;
  error_0 _r1;
};

/* 6268 */
struct retval_1DA23C
{
  net_UnixConn_0 *_r0;
  error_0 _r1;
};

/* 6269 */
struct retval_1DA3DC
{
  net_UnixListener_0 *_r0;
  error_0 _r1;
};

/* 6270 */
struct retval_1DA738
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6271 */
struct retval_1DA74C
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6272 */
struct retval_1DA798
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6273 */
struct retval_1DA7AC
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6274 */
struct retval_1DA7C0
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6275 */
struct retval_1DA7D4
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6276 */
struct retval_1DA7E8
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6277 */
struct retval_1DA7FC
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6278 */
struct retval_1DA810
{
  syscall_Sockaddr_0 _p0;
  net_Addr_0 _r0;
};

/* 6279 */
struct retval_1DA9A4
{
  int family;
  bool ipv6only;
};

/* 6280 */
struct retval_1DAC70
{
  syscall_Sockaddr_0 _r0;
  error_0 _r1;
};

/* 6281 */
struct retval_1DB884
{
  net_onlyValuesCtx_0 _p0;
  time_Time_1 deadline;
  bool ok;
};

/* 6282 */
struct retval_1DB91C
{
  net_onlyValuesCtx_0 *_p0;
  time_Time_1 deadline;
  bool ok;
};

/* 6283 */
struct retval_1DB9B8
{
  net_onlyValuesCtx_0 _p0;
  _chan_left_chan_struct__0 _r0;
};

/* 6284 */
struct retval_1DBA1C
{
  net_onlyValuesCtx_0 *_p0;
  _chan_left_chan_struct__0 _r0;
};

/* 6285 */
struct retval_1DBA84
{
  net_onlyValuesCtx_0 _p0;
  error_0 _r0;
};

/* 6286 */
struct retval_1DBAF0
{
  net_onlyValuesCtx_0 *_p0;
  error_0 _r0;
};

/* 6287 */
struct retval_1DBB60
{
  net_canceledError *_p0;
  string_0 _r0;
};

/* 6288 */
struct retval_1DBD14
{
  int _r0;
  error_0 _r1;
};

/* 6289 */
struct retval_1DBF28
{
  int _r0;
  error_0 _r1;
};

/* 6290 */
struct retval_1DC048
{
  int _r0;
  error_0 _r1;
};

/* 6291 */
struct retval_1DC25C
{
  int _r0;
  error_0 _r1;
};

/* 6292 */
struct retval_1DC37C
{
  int _r0;
  error_0 _r1;
};

/* 6293 */
struct retval_1DC590
{
  int _r0;
  error_0 _r1;
};

/* 6294 */
struct retval_1DC6B0
{
  int _r0;
  error_0 _r1;
};

/* 6295 */
struct retval_1DC8C4
{
  int _r0;
  error_0 _r1;
};

/* 6296 */
struct retval_1DCAB4
{
  net_noReadFrom *_p0;
  io_Reader_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 6297 */
struct retval_1DCD30
{
  int _r0;
  error_0 _r1;
};

/* 6298 */
struct retval_1DCDB8
{
  int _r0;
  error_0 _r1;
};

/* 6299 */
struct retval_1DD16C
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6300 */
struct retval_1DD250
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6301 */
struct retval_1DD338
{
  int _r0;
  error_0 _r1;
};

/* 6302 */
struct retval_1DD3C0
{
  int _r0;
  error_0 _r1;
};

/* 6303 */
struct retval_1DD44C
{
  int64 _r0;
  error_0 _r1;
};

/* 6304 */
struct retval_1DD4D0
{
  int64 _r0;
  error_0 _r1;
};

/* 6305 */
struct retval_1DD558
{
  net_noWriteTo *_p0;
  io_Writer_0 _p1;
  int64 _r0;
  error_0 _r1;
};

/* 6306 */
struct retval_1DD7D4
{
  int _r0;
  error_0 _r1;
};

/* 6307 */
struct retval_1DD85C
{
  int _r0;
  error_0 _r1;
};

/* 6308 */
struct retval_1DD8E8
{
  int64 _r0;
  error_0 _r1;
};

/* 6309 */
struct retval_1DD96C
{
  int64 _r0;
  error_0 _r1;
};

/* 6310 */
struct retval_1DDD1C
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6311 */
struct retval_1DDE00
{
  syscall_RawConn_0 _r0;
  error_0 _r1;
};

/* 6312 */
struct retval_1DDEE8
{
  int _r0;
  error_0 _r1;
};

/* 6313 */
struct retval_1DDF70
{
  int _r0;
  error_0 _r1;
};

/* 6314 */
struct retval_1DE130
{
  _slice_net_IPAddr_0 addrs;
  error_0 err;
};

/* 6315 */
struct retval_1DE984
{
  string_0 _r0;
  error_0 _r1;
};

/* 6316 */
struct retval_1DF75C
{
  string_0 scheme;
  string_0 path;
  error_0 err;
};

/* 6317 */
struct retval_1DF908
{
  net_url_URL *_r0;
  error_0 _r1;
};

/* 6318 */
struct retval_1DFB24
{
  net_url_URL *_r0;
  error_0 _r1;
};

/* 6319 */
struct retval_1DFC24
{
  net_url_URL *_r0;
  error_0 _r1;
};

/* 6320 */
struct retval_1E0378
{
  net_url_Userinfo *user;
  string_0 host;
  error_0 err;
};

/* 6321 */
struct retval_1E0858
{
  string_0 _r0;
  error_0 _r1;
};

/* 6322 */
struct retval_1E221C
{
  string_0 host;
  string_0 port;
};

/* 6323 */
struct retval_1E24E4
{
  _slice_uint8_0 text;
  error_0 err;
};

/* 6324 */
struct retval_1E2EBC
{
  uint32 lout;
  uint32 rout;
};

/* 6325 */
struct retval_1E3A28
{
  crypto_cipher_Block _r0;
  error_0 _r1;
};

/* 6326 */
struct retval_1E438C
{
  _slice_uint8_0 _r0;
  error_0 _r1;
};

/* 6327 */
struct retval_1E4934
{
  int nn;
  error_0 err;
};

/* 6328 */
struct retval_1E4C30
{
  uint8 arr[16];
};

/* 6329 */
union __attribute__((aligned(8))) __n64
{
  unsigned __int64 n64_u64[1];
  unsigned __int32 n64_u32[2];
  unsigned __int16 n64_u16[4];
  unsigned __int8 n64_u8[8];
  __int64 n64_i64[1];
  __int32 n64_i32[2];
  __int16 n64_i16[4];
  __int8 n64_i8[8];
  float n64_f32[2];
  double n64_f64[1];
};

/* 6330 */
union __attribute__((aligned(8))) __n128
{
  unsigned __int64 n128_u64[2];
  unsigned __int32 n128_u32[4];
  unsigned __int16 n128_u16[8];
  unsigned __int8 n128_u8[16];
  __int64 n128_i64[2];
  __int32 n128_i32[4];
  __int16 n128_i16[8];
  __int8 n128_i8[16];
  float n128_f32[4];
  double n128_f64[2];
};

/* 6331 */
typedef __n64 int8x8_t;

/* 6332 */
typedef __n64 uint8x8_t;

/* 6333 */
typedef __n64 int16x4_t;

/* 6334 */
typedef __n64 int32x2_t;

/* 6335 */
typedef __n64 uint16x4_t;

/* 6336 */
typedef __n64 uint32x2_t;

/* 6337 */
typedef __n128 int8x16_t;

/* 6338 */
typedef __n128 int16x8_t;

/* 6339 */
typedef __n128 int32x4_t;

/* 6340 */
typedef __n128 int64x2_t;

/* 6341 */
typedef __n128 uint8x16_t;

/* 6342 */
typedef __n128 uint16x8_t;

/* 6343 */
typedef __n128 uint32x4_t;

/* 6344 */
typedef __n128 uint64x2_t;

/* 6345 */
typedef __n64 poly8x8_t;

/* 6346 */
typedef __n64 poly16x4_t;

/* 6347 */
typedef __n128 poly16x8_t;

/* 6348 */
typedef __n128 poly8x16_t;

/* 6349 */
typedef __n64 float16x4_t;

/* 6350 */
typedef __n64 float32x2_t;

/* 6351 */
typedef __n128 float16x8_t;

/* 6352 */
typedef __n128 float32x4_t;

/* 6353 */
typedef __n128 float64x2_t;

/* 6354 */
typedef __n128 poly128_t;

/* 6355 */
typedef int16x4_t int16x2_t;

/* 6356 */
typedef uint16x4_t uint16x2_t;

/* 6357 */
typedef float16x4_t float16x2_t;

/* 6358 */
struct retval_9B4C8
{
  _DWORD _r0[4];
};

