/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'eeprom_test'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _IO_FILE;
struct _IO_marker;

/* 1 */
struct Elf32_Sym
{
  unsigned __int32 st_name __offset(OFF32,0x104B0);
  unsigned __int32 st_value __off;
  unsigned __int32 st_size;
  unsigned __int8 st_info;
  unsigned __int8 st_other;
  unsigned __int16 st_shndx;
};

/* 2 */
struct Elf32_Rel
{
  unsigned __int32 r_offset;
  unsigned __int32 r_info;
};

/* 3 */
union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249
{
  unsigned __int32 d_val;
  unsigned __int32 d_ptr;
};

/* 4 */
struct Elf32_Dyn
{
  __int32 d_tag;
  union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249 d_un;
};

/* 5 */
struct Elf32_Verneed
{
  unsigned __int16 vn_version;
  unsigned __int16 vn_cnt;
  unsigned __int32 vn_file __offset(OFF32,0x104B0);
  unsigned __int32 vn_aux;
  unsigned __int32 vn_next;
};

/* 6 */
struct Elf32_Vernaux
{
  unsigned __int32 vna_hash;
  unsigned __int16 vna_flags;
  unsigned __int16 vna_other;
  unsigned __int32 vna_name __offset(OFF32,0x104B0);
  unsigned __int32 vna_next;
};

/* 7 */
typedef void _IO_lock_t;

/* 8 */
typedef unsigned int size_t;

/* 9 */
typedef _IO_FILE FILE;

/* 15 */
typedef int __off_t;

/* 16 */
typedef __int64 __quad_t;

/* 14 */
typedef __quad_t __off64_t;

/* 12 */
struct _IO_FILE
{
  int _flags;
  char *_IO_read_ptr;
  char *_IO_read_end;
  char *_IO_read_base;
  char *_IO_write_base;
  char *_IO_write_ptr;
  char *_IO_write_end;
  char *_IO_buf_base;
  char *_IO_buf_end;
  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;
  _IO_marker *_markers;
  _IO_FILE *_chain;
  int _fileno;
  int _flags2;
  __off_t _old_offset;
  unsigned __int16 _cur_column;
  char _vtable_offset;
  char _shortbuf[1];
  _IO_lock_t *_lock;
  __off64_t _offset;
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;
  int _mode;
  char _unused2[40];
};

/* 13 */
struct _IO_marker
{
  _IO_marker *_next;
  _IO_FILE *_sbuf;
  int _pos;
};

/* 10 */
typedef unsigned __int16 uint16_t;

/* 11 */
struct timezone
{
  int tz_minuteswest;
  int tz_dsttime;
};

/* 17 */
typedef unsigned __int8 uint8_t;

/* 18 */
typedef unsigned int uint32_t;

/* 19 */
struct eeprom_store_t
{
  uint8_t magic_num;
  uint8_t chain_volt;
  uint8_t chain_freq_data[108];
  uint8_t hash_rate[4];
};

/* 22 */
struct __pthread_internal_slist
{
  __pthread_internal_slist *__next;
};

/* 21 */
typedef __pthread_internal_slist __pthread_slist_t;

/* 23 */
union __pthread_mutex_s::$30DFB618E49C377A3D62C6584A4CBE95
{
  int __spins;
  __pthread_slist_t __list;
};

/* 20 */
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;
  int __kind;
  unsigned int __nusers;
  union
  {
    int __spins;
    __pthread_slist_t __list;
  };
};

/* 24 */
typedef unsigned int sizetype;

/* 25 */
union pthread_mutex_t
{
  __pthread_mutex_s __data;
  char __size[24];
  int __align;
};

/* 26 */
union __attribute__((aligned(8))) __n64
{
  unsigned __int64 n64_u64[1];
  unsigned __int32 n64_u32[2];
  unsigned __int16 n64_u16[4];
  unsigned __int8 n64_u8[8];
  __int64 n64_i64[1];
  __int32 n64_i32[2];
  __int16 n64_i16[4];
  __int8 n64_i8[8];
  float n64_f32[2];
  double n64_f64[1];
};

/* 27 */
union __attribute__((aligned(8))) __n128
{
  unsigned __int64 n128_u64[2];
  unsigned __int32 n128_u32[4];
  unsigned __int16 n128_u16[8];
  unsigned __int8 n128_u8[16];
  __int64 n128_i64[2];
  __int32 n128_i32[4];
  __int16 n128_i16[8];
  __int8 n128_i8[16];
  float n128_f32[4];
  double n128_f64[2];
};

/* 28 */
typedef __n64 int8x8_t;

/* 29 */
typedef __n64 uint8x8_t;

/* 30 */
typedef __n64 int16x4_t;

/* 31 */
typedef __n64 int32x2_t;

/* 32 */
typedef __n64 uint16x4_t;

/* 33 */
typedef __n64 uint32x2_t;

/* 34 */
typedef __n128 int8x16_t;

/* 35 */
typedef __n128 int16x8_t;

/* 36 */
typedef __n128 int32x4_t;

/* 37 */
typedef __n128 int64x2_t;

/* 38 */
typedef __n128 uint8x16_t;

/* 39 */
typedef __n128 uint16x8_t;

/* 40 */
typedef __n128 uint32x4_t;

/* 41 */
typedef __n128 uint64x2_t;

/* 42 */
typedef __n64 poly8x8_t;

/* 43 */
typedef __n64 poly16x4_t;

/* 44 */
typedef __n128 poly16x8_t;

/* 45 */
typedef __n128 poly8x16_t;

/* 46 */
typedef __n64 float16x4_t;

/* 47 */
typedef __n64 float32x2_t;

/* 48 */
typedef __n128 float16x8_t;

/* 49 */
typedef __n128 float32x4_t;

/* 50 */
typedef __n128 float64x2_t;

/* 51 */
typedef __n128 poly128_t;

/* 52 */
typedef int16x4_t int16x2_t;

/* 53 */
typedef uint16x4_t uint16x2_t;

/* 54 */
typedef float16x4_t float16x2_t;

