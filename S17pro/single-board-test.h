/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'single-board-test'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _IO_FILE;
struct _IO_marker;

/* 1 */
struct Elf32_Sym
{
  unsigned __int32 st_name __offset(OFF32,0x105DC);
  unsigned __int32 st_value __off;
  unsigned __int32 st_size;
  unsigned __int8 st_info;
  unsigned __int8 st_other;
  unsigned __int16 st_shndx;
};

/* 2 */
struct Elf32_Rel
{
  unsigned __int32 r_offset;
  unsigned __int32 r_info;
};

/* 3 */
union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249
{
  unsigned __int32 d_val;
  unsigned __int32 d_ptr;
};

/* 4 */
struct Elf32_Dyn
{
  __int32 d_tag;
  union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249 d_un;
};

/* 5 */
struct Elf32_Verneed
{
  unsigned __int16 vn_version;
  unsigned __int16 vn_cnt;
  unsigned __int32 vn_file __offset(OFF32,0x105DC);
  unsigned __int32 vn_aux;
  unsigned __int32 vn_next;
};

/* 6 */
struct Elf32_Vernaux
{
  unsigned __int32 vna_hash;
  unsigned __int16 vna_flags;
  unsigned __int16 vna_other;
  unsigned __int32 vna_name __offset(OFF32,0x105DC);
  unsigned __int32 vna_next;
};

/* 7 */
struct work
{
  int id;
  unsigned int nonce;
  unsigned __int8 data[12];
  unsigned __int8 midstate[32];
  unsigned int is_nonce_return_back[4][1];
};

/* 8 */
typedef void _IO_lock_t;

/* 9 */
typedef unsigned int size_t;

/* 25 */
struct __pthread_internal_slist
{
  __pthread_internal_slist *__next;
};

/* 24 */
typedef __pthread_internal_slist __pthread_slist_t;

/* 40 */
union __pthread_mutex_s::$30DFB618E49C377A3D62C6584A4CBE95
{
  int __spins;
  __pthread_slist_t __list;
};

/* 23 */
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;
  int __kind;
  unsigned int __nusers;
  union
  {
    int __spins;
    __pthread_slist_t __list;
  };
};

/* 10 */
union pthread_mutex_t
{
  __pthread_mutex_s __data;
  char __size[24];
  int __align;
};

/* 15 */
struct reg_content
{
  unsigned int reg_value;
  unsigned __int8 chip_address;
  unsigned __int8 reg_address;
  unsigned __int8 crc;
  unsigned __int8 chain_number;
};

/* 11 */
struct reg_buf
{
  unsigned int p_wr;
  unsigned int p_rd;
  unsigned int reg_value_num;
  unsigned int loop_back;
  reg_content reg_buffer[511];
};

/* 12 */
struct chain_info
{
  unsigned __int8 which_chain;
  unsigned __int8 which_i2c;
};

/* 13 */
typedef unsigned int uint32_t;

/* 14 */
typedef unsigned __int8 uint8_t;

/* 16 */
typedef unsigned int pthread_t;

/* 17 */
typedef _IO_FILE FILE;

/* 22 */
typedef int __off_t;

/* 26 */
typedef __int64 __quad_t;

/* 21 */
typedef __quad_t __off64_t;

/* 19 */
struct _IO_FILE
{
  int _flags;
  char *_IO_read_ptr;
  char *_IO_read_end;
  char *_IO_read_base;
  char *_IO_write_base;
  char *_IO_write_ptr;
  char *_IO_write_end;
  char *_IO_buf_base;
  char *_IO_buf_end;
  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;
  _IO_marker *_markers;
  _IO_FILE *_chain;
  int _fileno;
  int _flags2;
  __off_t _old_offset;
  unsigned __int16 _cur_column;
  char _vtable_offset;
  char _shortbuf[1];
  _IO_lock_t *_lock;
  __off64_t _offset;
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;
  int _mode;
  char _unused2[40];
};

/* 20 */
struct _IO_marker
{
  _IO_marker *_next;
  _IO_FILE *_sbuf;
  int _pos;
};

/* 18 */
struct timezone
{
  int tz_minuteswest;
  int tz_dsttime;
};

/* 27 */
typedef int __suseconds_t;

/* 28 */
typedef int __time_t;

/* 30 */
typedef unsigned __int16 uint16_t;

/* 29 */
struct eeprom_layout_t
{
  uint16_t fixture_header;
  uint16_t fixture_version;
  uint8_t hash_board_sn[20];
  uint16_t pcb_version;
  uint16_t bom_version;
  uint8_t temp_sensor_type;
  uint8_t product_id;
  uint16_t crc_test_fixture;
  uint8_t reserved_0[8];
  uint8_t reserved_1[216];
};

/* 31 */
struct sha2_context
{
  uint32_t total[2];
  uint32_t state[8];
  unsigned __int8 buffer[64];
  unsigned __int8 ipad[64];
  unsigned __int8 opad[64];
};

/* 32 */
typedef int __ssize_t;

/* 33 */
struct sha256_ctx
{
  unsigned int tot_len;
  unsigned int len;
  unsigned __int8 block[128];
  uint32_t h[8];
};

/* 34 */
struct configuration
{
  char name[64];
  unsigned int pattern_number;
  unsigned int Freq;
  unsigned int Freq1;
  unsigned int Freq2;
  unsigned int Freq3;
  unsigned int Freq4;
  unsigned int Freq5;
  unsigned int Freq6;
  unsigned int Freq7;
  unsigned int Freq8;
  unsigned int Freq9;
  unsigned int AsicNum;
  unsigned int CoreNum;
  unsigned int AsicType;
  unsigned int ValidNonce1;
  unsigned int ValidNonce2;
  unsigned int ValidNonce3;
  unsigned int ValidNonce4;
  unsigned int ValidNonce5;
  unsigned int ValidNonce6;
  unsigned int ValidNonce7;
  unsigned int ValidNonce8;
  unsigned int ValidNonce9;
  unsigned int Voltage1;
  unsigned int Voltage2;
  unsigned int Voltage3;
  unsigned int Voltage4;
  unsigned int Voltage5;
  unsigned int Voltage6;
  unsigned int Voltage7;
  unsigned int Voltage8;
  unsigned int Voltage9;
  unsigned int Voltage_accuracy;
  unsigned int OpenCoreGap;
  unsigned int checktemp;
  unsigned int OpenCoreNum1;
  unsigned int OpenCoreNum2;
  unsigned int OpenCoreNum3;
  unsigned int OpenCoreNum4;
  unsigned int OpenCoreNum5;
  unsigned int OpenCoreNum6;
  unsigned int OpenCoreNum7;
  unsigned int OpenCoreNum8;
  unsigned int HeatingUpTime;
  unsigned int MaxTempGap;
  unsigned int add_voltage_value;
  unsigned int Invalid_Asic_Num;
  unsigned int Invalid_Core_Num;
  unsigned int Least_nonce_per_core;
  unsigned int Most_HW_Num;
  unsigned int remote_local_gap;
  unsigned int baud;
  unsigned int close_power_delay;
  unsigned int timeout;
  unsigned int pre_open_core_voltage;
  unsigned int repair_mode;
  unsigned int io_strength;
  unsigned int TempSensor1;
  unsigned int TempSensor2;
  unsigned int TempSensor3;
  unsigned int TempSensor4;
  unsigned int StartSensor;
  int StartTemp;
  int TargetTemp;
  int AlarmTemp;
  unsigned int add_voltage_after_test_ok;
  unsigned int sensor_model;
  unsigned int timeout_percent;
  unsigned int Only_find_ASIC;
  unsigned int fan_speed;
  unsigned int HashBoard_Hardware_Version_1;
  unsigned int HashBoard_Hardware_Version_2;
  unsigned int HashBoard_Bom_Version_1;
  unsigned int HashBoard_Bom_Version_2;
  unsigned int HashBoard_Product_ID;
  unsigned int CoreClockDelay;
  unsigned int Dump_Lost_Nonce;
  unsigned int bad_chip_nonce_rate;
  unsigned int bad_chip_num;
};

/* 35 */
struct freq_pll
{
  const char *freq;
  unsigned int fildiv1;
  unsigned int fildiv2;
  unsigned int vilpll;
};

/* 37 */
struct _fast_UART_configuration_t::$BDCBC03C6E8FFA4A28C142DD3EAF61A4
{
  unsigned __int32 _CLKO_DIV : 8;
  unsigned __int32 _Reserved_0 : 4;
  unsigned __int32 _CLKO_ODDSET : 2;
  unsigned __int32 _CLKO_SEL : 1;
  unsigned __int32 _ForceCoreEn : 1;
  unsigned __int32 _USRC_DIV : 6;
  unsigned __int32 _USRC_ODDSET : 2;
  unsigned __int32 _PLL3_DIV4 : 4;
  unsigned __int32 _Reserved_1 : 2;
  unsigned __int32 _DIV4_ODDSET : 2;
};

/* 36 */
union _fast_UART_configuration_t
{
  _fast_UART_configuration_t::$BDCBC03C6E8FFA4A28C142DD3EAF61A4 u;
  uint32_t v;
};

/* 39 */
struct _pll_parameter_t::$45FEF85BFD023FB53A4ABA30B7351EE8
{
  unsigned __int32 _POSTDIV2 : 3;
  unsigned __int32 _RSVD1 : 1;
  unsigned __int32 _POSTDIV1 : 3;
  unsigned __int32 _RSVD2 : 1;
  unsigned __int32 _REFDIV : 6;
  unsigned __int32 _RSVD3 : 2;
  unsigned __int32 _FBDIV : 12;
  unsigned __int32 _RSVD4 : 2;
  unsigned __int32 _PLLEN : 1;
  unsigned __int32 _LOCKED : 1;
};

/* 38 */
union _pll_parameter_t
{
  _pll_parameter_t::$45FEF85BFD023FB53A4ABA30B7351EE8 u;
  uint32_t v;
};

/* 41 */
struct vil_work_1397
{
  unsigned __int8 work_type;
  unsigned __int8 chain_id;
  unsigned __int8 reserved1[2];
  unsigned int work_count;
  unsigned __int8 data[12];
  unsigned __int8 midstate[32];
};

/* 43 */
struct nonce_format_t::$9B741C527EBF5F8211572955528A4715
{
  unsigned __int32 data : 14;
  unsigned __int32 chip_address : 8;
  unsigned __int32 big_core_id : 9;
  unsigned __int32 internal_core_id : 1;
};

/* 42 */
union nonce_format_t
{
  nonce_format_t::$9B741C527EBF5F8211572955528A4715 u;
  uint32_t v;
};

/* 44 */
typedef _fast_UART_configuration_t fast_UART_configuration_t;

/* 45 */
typedef _pll_parameter_t pll_parameter_t;

/* 47 */
struct misc_ctrl_t::$BFE81CB18836222DFDB0BA1CFDF7973E
{
  unsigned __int32 hash_rate_tws : 2;
  unsigned __int32 reserved_0 : 2;
  unsigned __int32 tfs : 3;
  unsigned __int32 ret_work_err_flag : 1;
  unsigned __int32 bt8d_4_0 : 5;
  unsigned __int32 inv_clko : 1;
  unsigned __int32 rfs : 1;
  unsigned __int32 ret_err_nonce : 1;
  unsigned __int32 bclk_sel : 1;
  unsigned __int32 topclk_sel : 1;
  unsigned __int32 dsclk_sel : 2;
  unsigned __int32 rvs_k0 : 1;
  unsigned __int32 spat_nod : 1;
  unsigned __int32 core_srst : 1;
  unsigned __int32 reserved_1 : 1;
  unsigned __int32 bt8d_8_5 : 4;
  unsigned __int32 reserved_2 : 4;
};

/* 46 */
union misc_ctrl_t
{
  misc_ctrl_t::$BFE81CB18836222DFDB0BA1CFDF7973E u;
  uint32_t v;
};

/* 48 */
struct cgpu_info
{
  FILE *fps[131072];
  pthread_t send_id;
  pthread_t receive_id;
  pthread_t show_id;
  pthread_t pic_heart_beat_id;
  pthread_t read_temp;
  pthread_t chain_send_id[3];
  int device_fd;
  int lcd_fd;
  int fpga_fd;
  char workdataPathPrefix[64];
  char workdataFilePrefix[64];
  work *works[128];
  int subid[131072];
  int min_work_subid;
  int index;
  int chain_index[3];
  int valid_nonce;
  int err_nonce;
  int repeated_nonce;
  int start_key_fd;
  int red_led_fd;
  int green_led_fd;
  int beep_fd;
  unsigned int real_asic_num;
  unsigned int asicNum;
  unsigned int core_num;
  unsigned int AsicType;
  unsigned int chain_num;
  unsigned __int16 frequency;
  unsigned int voltage;
  unsigned int chain_exist[4];
  unsigned int timeout;
  unsigned __int8 chain_asic_num[4];
  unsigned int addrInterval;
  unsigned int max_asic_num_in_one_chain;
  unsigned __int8 temp_sel;
  unsigned __int8 rfs;
  unsigned __int8 tfs;
  char T1_offset_value;
  char T2_offset_value;
  char T3_offset_value;
  char T4_offset_value;
  unsigned __int8 timeout_percent;
  unsigned __int8 Only_find_ASIC;
  unsigned __int8 baud;
  unsigned int io_strength;
  unsigned __int8 fan_speed;
  unsigned int repair_mode;
};

/* 49 */
typedef unsigned int sizetype;

/* 51 */
struct fpga_bt8d_t::$09056A59BD1DC1DF57735514E72F8E50
{
  unsigned __int32 reserved_0 : 16;
  unsigned __int32 bt8d : 6;
  unsigned __int32 reserved_1 : 10;
};

/* 50 */
union fpga_bt8d_t
{
  fpga_bt8d_t::$09056A59BD1DC1DF57735514E72F8E50 u;
  uint32_t v;
};

/* 52 */
struct _IO_marker_0
{
  _IO_marker *_next;
  _IO_FILE *_sbuf;
  int _pos;
};

/* 53 */
struct bad_chip
{
  unsigned int total_badchip;
  unsigned int idx[4];
  unsigned int nonce_num[4];
};

/* 54 */
struct timeval
{
  __time_t tv_sec;
  __suseconds_t tv_usec;
};

/* 55 */
struct sched_param
{
  int __sched_priority;
};

/* 56 */
typedef __ssize_t ssize_t;

/* 57 */
struct vil_work_1391
{
  unsigned __int8 work_type;
  unsigned __int8 chain_id;
  unsigned __int8 reserved1[2];
  unsigned int work_count;
  unsigned __int8 data[12];
  unsigned __int8 midstate[32];
};

/* 58 */
typedef unsigned int __useconds_t;

/* 59 */
union __attribute__((aligned(8))) __n64
{
  unsigned __int64 n64_u64[1];
  unsigned __int32 n64_u32[2];
  unsigned __int16 n64_u16[4];
  unsigned __int8 n64_u8[8];
  __int64 n64_i64[1];
  __int32 n64_i32[2];
  __int16 n64_i16[4];
  __int8 n64_i8[8];
  float n64_f32[2];
  double n64_f64[1];
};

/* 60 */
union __attribute__((aligned(8))) __n128
{
  unsigned __int64 n128_u64[2];
  unsigned __int32 n128_u32[4];
  unsigned __int16 n128_u16[8];
  unsigned __int8 n128_u8[16];
  __int64 n128_i64[2];
  __int32 n128_i32[4];
  __int16 n128_i16[8];
  __int8 n128_i8[16];
  float n128_f32[4];
  double n128_f64[2];
};

/* 61 */
typedef __n64 int8x8_t;

/* 62 */
typedef __n64 uint8x8_t;

/* 63 */
typedef __n64 int16x4_t;

/* 64 */
typedef __n64 int32x2_t;

/* 65 */
typedef __n64 uint16x4_t;

/* 66 */
typedef __n64 uint32x2_t;

/* 67 */
typedef __n128 int8x16_t;

/* 68 */
typedef __n128 int16x8_t;

/* 69 */
typedef __n128 int32x4_t;

/* 70 */
typedef __n128 int64x2_t;

/* 71 */
typedef __n128 uint8x16_t;

/* 72 */
typedef __n128 uint16x8_t;

/* 73 */
typedef __n128 uint32x4_t;

/* 74 */
typedef __n128 uint64x2_t;

/* 75 */
typedef __n64 poly8x8_t;

/* 76 */
typedef __n64 poly16x4_t;

/* 77 */
typedef __n128 poly16x8_t;

/* 78 */
typedef __n128 poly8x16_t;

/* 79 */
typedef __n64 float16x4_t;

/* 80 */
typedef __n64 float32x2_t;

/* 81 */
typedef __n128 float16x8_t;

/* 82 */
typedef __n128 float32x4_t;

/* 83 */
typedef __n128 float64x2_t;

/* 84 */
typedef __n128 poly128_t;

/* 85 */
typedef int16x4_t int16x2_t;

/* 86 */
typedef uint16x4_t uint16x2_t;

/* 87 */
typedef float16x4_t float16x2_t;

